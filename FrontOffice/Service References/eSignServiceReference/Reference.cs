//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrontOffice.eSignServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalContract", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class DigitalContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.eSignServiceReference.DigitalContractAttachment> AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AttachmentsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.eSignServiceReference.DigitaContractType ContractTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.eSignServiceReference.DigitalContractDetail DigitalContractDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.eSignServiceReference.DigitalContractStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.eSignServiceReference.DigitalContractAttachment> Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AttachmentsDate {
            get {
                return this.AttachmentsDateField;
            }
            set {
                if ((this.AttachmentsDateField.Equals(value) != true)) {
                    this.AttachmentsDateField = value;
                    this.RaisePropertyChanged("AttachmentsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.eSignServiceReference.DigitaContractType ContractType {
            get {
                return this.ContractTypeField;
            }
            set {
                if ((this.ContractTypeField.Equals(value) != true)) {
                    this.ContractTypeField = value;
                    this.RaisePropertyChanged("ContractType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerEmail {
            get {
                return this.CustomerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerEmailField, value) != true)) {
                    this.CustomerEmailField = value;
                    this.RaisePropertyChanged("CustomerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerPhoneNumber {
            get {
                return this.CustomerPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPhoneNumberField, value) != true)) {
                    this.CustomerPhoneNumberField = value;
                    this.RaisePropertyChanged("CustomerPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.eSignServiceReference.DigitalContractDetail DigitalContractDetail {
            get {
                return this.DigitalContractDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DigitalContractDetailField, value) != true)) {
                    this.DigitalContractDetailField = value;
                    this.RaisePropertyChanged("DigitalContractDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireDate {
            get {
                return this.ExpireDateField;
            }
            set {
                if ((this.ExpireDateField.Equals(value) != true)) {
                    this.ExpireDateField = value;
                    this.RaisePropertyChanged("ExpireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalHash {
            get {
                return this.FinalHashField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalHashField, value) != true)) {
                    this.FinalHashField = value;
                    this.RaisePropertyChanged("FinalHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegDate {
            get {
                return this.RegDateField;
            }
            set {
                if ((this.RegDateField.Equals(value) != true)) {
                    this.RegDateField = value;
                    this.RaisePropertyChanged("RegDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.eSignServiceReference.DigitalContractStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalContractDetail", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class DigitalContractDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcceptAdditionalTermsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcceptAdditionalTermsTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcceptTermsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcceptAdditionalTerms {
            get {
                return this.AcceptAdditionalTermsField;
            }
            set {
                if ((this.AcceptAdditionalTermsField.Equals(value) != true)) {
                    this.AcceptAdditionalTermsField = value;
                    this.RaisePropertyChanged("AcceptAdditionalTerms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcceptAdditionalTermsText {
            get {
                return this.AcceptAdditionalTermsTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AcceptAdditionalTermsTextField, value) != true)) {
                    this.AcceptAdditionalTermsTextField = value;
                    this.RaisePropertyChanged("AcceptAdditionalTermsText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcceptTerms {
            get {
                return this.AcceptTermsField;
            }
            set {
                if ((this.AcceptTermsField.Equals(value) != true)) {
                    this.AcceptTermsField = value;
                    this.RaisePropertyChanged("AcceptTerms");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalContractAttachment", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class DigitalContractAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentServerFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentServerGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentServerFileName {
            get {
                return this.ContentServerFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentServerFileNameField, value) != true)) {
                    this.ContentServerFileNameField = value;
                    this.RaisePropertyChanged("ContentServerFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentServerGUID {
            get {
                return this.ContentServerGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentServerGUIDField, value) != true)) {
                    this.ContentServerGUIDField = value;
                    this.RaisePropertyChanged("ContentServerGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HashCode {
            get {
                return this.HashCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HashCodeField, value) != true)) {
                    this.HashCodeField = value;
                    this.RaisePropertyChanged("HashCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEng {
            get {
                return this.NameEngField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngField, value) != true)) {
                    this.NameEngField = value;
                    this.RaisePropertyChanged("NameEng");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitaContractType", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    public enum DigitaContractType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanDigitalContract = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POSDigitalContract = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalContractStatus", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    public enum DigitalContractStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Current = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignedInPaper = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionResult", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class ActionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.eSignServiceReference.ActionError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.eSignServiceReference.ActionError> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.eSignServiceReference.ResultCode ResultCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.eSignServiceReference.ActionError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.eSignServiceReference.ActionError> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.eSignServiceReference.ResultCode ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionError", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class ActionError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ParamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultCode", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    public enum ResultCode : ushort {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAutorized = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TokenValidationError = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTPValidationError = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTPGenereationRestricted = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTPAttemptTimeout = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTPAttemptRestricted = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadySigned = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FullDigitalContract", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class FullDigitalContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.eSignServiceReference.Attachment> AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.eSignServiceReference.ResultCode ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.eSignServiceReference.Attachment> Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InfoMessage {
            get {
                return this.InfoMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoMessageField, value) != true)) {
                    this.InfoMessageField = value;
                    this.RaisePropertyChanged("InfoMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.eSignServiceReference.ResultCode ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attachment", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class Attachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.eSignServiceReference.Parameter> ParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FileIdField, value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.eSignServiceReference.Parameter> Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parameter", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class Parameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalContractFile", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class DigitalContractFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.eSignServiceReference.ActionResult ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] fileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.eSignServiceReference.ActionResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] file {
            get {
                return this.fileField;
            }
            set {
                if ((object.ReferenceEquals(this.fileField, value) != true)) {
                    this.fileField = value;
                    this.RaisePropertyChanged("file");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SentDigitalContract", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class SentDigitalContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.eSignServiceReference.Attachment> AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.eSignServiceReference.DigitalContractStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.eSignServiceReference.Attachment> Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.eSignServiceReference.DigitalContractStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignedDigitalContract", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class SignedDigitalContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SignatureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.eSignServiceReference.Attachment> SignedAttachmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SignatureDate {
            get {
                return this.SignatureDateField;
            }
            set {
                if ((this.SignatureDateField.Equals(value) != true)) {
                    this.SignatureDateField = value;
                    this.RaisePropertyChanged("SignatureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.eSignServiceReference.Attachment> SignedAttachments {
            get {
                return this.SignedAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedAttachmentsField, value) != true)) {
                    this.SignedAttachmentsField = value;
                    this.RaisePropertyChanged("SignedAttachments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="eSignServiceReference.IESignService")]
    public interface IESignService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/CreateDigitalContract", ReplyAction="http://tempuri.org/IESignService/CreateDigitalContractResponse")]
        FrontOffice.eSignServiceReference.ActionResult CreateDigitalContract(FrontOffice.eSignServiceReference.DigitalContract digitalContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/CreateDigitalContract", ReplyAction="http://tempuri.org/IESignService/CreateDigitalContractResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> CreateDigitalContractAsync(FrontOffice.eSignServiceReference.DigitalContract digitalContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/UpdateAttachments", ReplyAction="http://tempuri.org/IESignService/UpdateAttachmentsResponse")]
        FrontOffice.eSignServiceReference.ActionResult UpdateAttachments(FrontOffice.eSignServiceReference.DigitalContract digitalContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/UpdateAttachments", ReplyAction="http://tempuri.org/IESignService/UpdateAttachmentsResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> UpdateAttachmentsAsync(FrontOffice.eSignServiceReference.DigitalContract digitalContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContract", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractResponse")]
        FrontOffice.eSignServiceReference.DigitalContract GetDigitalContract(System.Guid contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContract", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.DigitalContract> GetDigitalContractAsync(System.Guid contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractId", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractIdResponse")]
        System.Guid GetDigitalContractId(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractId", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractIdResponse")]
        System.Threading.Tasks.Task<System.Guid> GetDigitalContractIdAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/CancelDigitalContract", ReplyAction="http://tempuri.org/IESignService/CancelDigitalContractResponse")]
        FrontOffice.eSignServiceReference.ActionResult CancelDigitalContract(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/CancelDigitalContract", ReplyAction="http://tempuri.org/IESignService/CancelDigitalContractResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> CancelDigitalContractAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractStatusByProductId", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractStatusByProductIdResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDigitalContractStatusByProductId(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractStatusByProductId", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractStatusByProductIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDigitalContractStatusByProductIdAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SignedInPaper", ReplyAction="http://tempuri.org/IESignService/SignedInPaperResponse")]
        FrontOffice.eSignServiceReference.ActionResult SignedInPaper(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SignedInPaper", ReplyAction="http://tempuri.org/IESignService/SignedInPaperResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SignedInPaperAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetOTP", ReplyAction="http://tempuri.org/IESignService/GetOTPResponse")]
        FrontOffice.eSignServiceReference.ActionResult GetOTP(System.Guid contractId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetOTP", ReplyAction="http://tempuri.org/IESignService/GetOTPResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> GetOTPAsync(System.Guid contractId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SaveDigitalContractDetail", ReplyAction="http://tempuri.org/IESignService/SaveDigitalContractDetailResponse")]
        FrontOffice.eSignServiceReference.ActionResult SaveDigitalContractDetail(System.Guid digitalContractId, FrontOffice.eSignServiceReference.DigitalContractDetail digitalContractDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SaveDigitalContractDetail", ReplyAction="http://tempuri.org/IESignService/SaveDigitalContractDetailResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SaveDigitalContractDetailAsync(System.Guid digitalContractId, FrontOffice.eSignServiceReference.DigitalContractDetail digitalContractDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/ValidateOTP", ReplyAction="http://tempuri.org/IESignService/ValidateOTPResponse")]
        FrontOffice.eSignServiceReference.ActionResult ValidateOTP(System.Guid contractId, string token, string otp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/ValidateOTP", ReplyAction="http://tempuri.org/IESignService/ValidateOTPResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> ValidateOTPAsync(System.Guid contractId, string token, string otp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/ConfirmDigitalContract", ReplyAction="http://tempuri.org/IESignService/ConfirmDigitalContractResponse")]
        FrontOffice.eSignServiceReference.ActionResult ConfirmDigitalContract(System.Guid contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/ConfirmDigitalContract", ReplyAction="http://tempuri.org/IESignService/ConfirmDigitalContractResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> ConfirmDigitalContractAsync(System.Guid contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/ValidateDigitalContract", ReplyAction="http://tempuri.org/IESignService/ValidateDigitalContractResponse")]
        FrontOffice.eSignServiceReference.ActionResult ValidateDigitalContract(System.Guid contractId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/ValidateDigitalContract", ReplyAction="http://tempuri.org/IESignService/ValidateDigitalContractResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> ValidateDigitalContractAsync(System.Guid contractId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SendDigitalContract", ReplyAction="http://tempuri.org/IESignService/SendDigitalContractResponse")]
        FrontOffice.eSignServiceReference.ActionResult SendDigitalContract(ulong productId, ulong customerNumber, System.Collections.Generic.List<int> attachmentTypes, System.Collections.Generic.Dictionary<string, string> parameters, System.DateTime operDay, bool includeAllPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SendDigitalContract", ReplyAction="http://tempuri.org/IESignService/SendDigitalContractResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SendDigitalContractAsync(ulong productId, ulong customerNumber, System.Collections.Generic.List<int> attachmentTypes, System.Collections.Generic.Dictionary<string, string> parameters, System.DateTime operDay, bool includeAllPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractForSign", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractForSignResponse")]
        FrontOffice.eSignServiceReference.FullDigitalContract GetDigitalContractForSign(System.Guid contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractForSign", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractForSignResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.FullDigitalContract> GetDigitalContractForSignAsync(System.Guid contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SendOTP", ReplyAction="http://tempuri.org/IESignService/SendOTPResponse")]
        FrontOffice.eSignServiceReference.ActionResult SendOTP(System.Guid digitalContractId, string token, bool acceptTerms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SendOTP", ReplyAction="http://tempuri.org/IESignService/SendOTPResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SendOTPAsync(System.Guid digitalContractId, string token, bool acceptTerms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractFile", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractFileResponse")]
        FrontOffice.eSignServiceReference.DigitalContractFile GetDigitalContractFile(System.Guid digitalContractId, string fileId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractFile", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractFileResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.DigitalContractFile> GetDigitalContractFileAsync(System.Guid digitalContractId, string fileId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractFiles", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractFilesResponse")]
        FrontOffice.eSignServiceReference.DigitalContractFile GetDigitalContractFiles(System.Guid digitalContractId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetDigitalContractFiles", ReplyAction="http://tempuri.org/IESignService/GetDigitalContractFilesResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.DigitalContractFile> GetDigitalContractFilesAsync(System.Guid digitalContractId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/ApproveDigitalContract", ReplyAction="http://tempuri.org/IESignService/ApproveDigitalContractResponse")]
        FrontOffice.eSignServiceReference.ActionResult ApproveDigitalContract(System.Guid digitalContractId, string otp, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/ApproveDigitalContract", ReplyAction="http://tempuri.org/IESignService/ApproveDigitalContractResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> ApproveDigitalContractAsync(System.Guid digitalContractId, string otp, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetSentDigitalContracts", ReplyAction="http://tempuri.org/IESignService/GetSentDigitalContractsResponse")]
        System.Collections.Generic.List<FrontOffice.eSignServiceReference.SentDigitalContract> GetSentDigitalContracts(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetSentDigitalContracts", ReplyAction="http://tempuri.org/IESignService/GetSentDigitalContractsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.eSignServiceReference.SentDigitalContract>> GetSentDigitalContractsAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetSignedDigitalContracts", ReplyAction="http://tempuri.org/IESignService/GetSignedDigitalContractsResponse")]
        System.Collections.Generic.List<FrontOffice.eSignServiceReference.SignedDigitalContract> GetSignedDigitalContracts(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetSignedDigitalContracts", ReplyAction="http://tempuri.org/IESignService/GetSignedDigitalContractsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.eSignServiceReference.SignedDigitalContract>> GetSignedDigitalContractsAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/CancelDigitalContractById", ReplyAction="http://tempuri.org/IESignService/CancelDigitalContractByIdResponse")]
        FrontOffice.eSignServiceReference.ActionResult CancelDigitalContractById(System.Guid digitalContractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/CancelDigitalContractById", ReplyAction="http://tempuri.org/IESignService/CancelDigitalContractByIdResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> CancelDigitalContractByIdAsync(System.Guid digitalContractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SignedInPaperById", ReplyAction="http://tempuri.org/IESignService/SignedInPaperByIdResponse")]
        FrontOffice.eSignServiceReference.ActionResult SignedInPaperById(System.Guid digitalContractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/SignedInPaperById", ReplyAction="http://tempuri.org/IESignService/SignedInPaperByIdResponse")]
        System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SignedInPaperByIdAsync(System.Guid digitalContractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetSignedDocuments", ReplyAction="http://tempuri.org/IESignService/GetSignedDocumentsResponse")]
        byte[] GetSignedDocuments(string fileId, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESignService/GetSignedDocuments", ReplyAction="http://tempuri.org/IESignService/GetSignedDocumentsResponse")]
        System.Threading.Tasks.Task<byte[]> GetSignedDocumentsAsync(string fileId, string fileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IESignServiceChannel : FrontOffice.eSignServiceReference.IESignService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ESignServiceClient : System.ServiceModel.ClientBase<FrontOffice.eSignServiceReference.IESignService>, FrontOffice.eSignServiceReference.IESignService {
        
        public ESignServiceClient() {
        }
        
        public ESignServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ESignServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ESignServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ESignServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FrontOffice.eSignServiceReference.ActionResult CreateDigitalContract(FrontOffice.eSignServiceReference.DigitalContract digitalContract) {
            return base.Channel.CreateDigitalContract(digitalContract);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> CreateDigitalContractAsync(FrontOffice.eSignServiceReference.DigitalContract digitalContract) {
            return base.Channel.CreateDigitalContractAsync(digitalContract);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult UpdateAttachments(FrontOffice.eSignServiceReference.DigitalContract digitalContract) {
            return base.Channel.UpdateAttachments(digitalContract);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> UpdateAttachmentsAsync(FrontOffice.eSignServiceReference.DigitalContract digitalContract) {
            return base.Channel.UpdateAttachmentsAsync(digitalContract);
        }
        
        public FrontOffice.eSignServiceReference.DigitalContract GetDigitalContract(System.Guid contractId) {
            return base.Channel.GetDigitalContract(contractId);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.DigitalContract> GetDigitalContractAsync(System.Guid contractId) {
            return base.Channel.GetDigitalContractAsync(contractId);
        }
        
        public System.Guid GetDigitalContractId(ulong productId) {
            return base.Channel.GetDigitalContractId(productId);
        }
        
        public System.Threading.Tasks.Task<System.Guid> GetDigitalContractIdAsync(ulong productId) {
            return base.Channel.GetDigitalContractIdAsync(productId);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult CancelDigitalContract(ulong productId) {
            return base.Channel.CancelDigitalContract(productId);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> CancelDigitalContractAsync(ulong productId) {
            return base.Channel.CancelDigitalContractAsync(productId);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDigitalContractStatusByProductId(ulong productId) {
            return base.Channel.GetDigitalContractStatusByProductId(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDigitalContractStatusByProductIdAsync(ulong productId) {
            return base.Channel.GetDigitalContractStatusByProductIdAsync(productId);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult SignedInPaper(ulong productId) {
            return base.Channel.SignedInPaper(productId);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SignedInPaperAsync(ulong productId) {
            return base.Channel.SignedInPaperAsync(productId);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult GetOTP(System.Guid contractId, string token) {
            return base.Channel.GetOTP(contractId, token);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> GetOTPAsync(System.Guid contractId, string token) {
            return base.Channel.GetOTPAsync(contractId, token);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult SaveDigitalContractDetail(System.Guid digitalContractId, FrontOffice.eSignServiceReference.DigitalContractDetail digitalContractDetail) {
            return base.Channel.SaveDigitalContractDetail(digitalContractId, digitalContractDetail);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SaveDigitalContractDetailAsync(System.Guid digitalContractId, FrontOffice.eSignServiceReference.DigitalContractDetail digitalContractDetail) {
            return base.Channel.SaveDigitalContractDetailAsync(digitalContractId, digitalContractDetail);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult ValidateOTP(System.Guid contractId, string token, string otp) {
            return base.Channel.ValidateOTP(contractId, token, otp);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> ValidateOTPAsync(System.Guid contractId, string token, string otp) {
            return base.Channel.ValidateOTPAsync(contractId, token, otp);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult ConfirmDigitalContract(System.Guid contractId) {
            return base.Channel.ConfirmDigitalContract(contractId);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> ConfirmDigitalContractAsync(System.Guid contractId) {
            return base.Channel.ConfirmDigitalContractAsync(contractId);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult ValidateDigitalContract(System.Guid contractId, string token) {
            return base.Channel.ValidateDigitalContract(contractId, token);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> ValidateDigitalContractAsync(System.Guid contractId, string token) {
            return base.Channel.ValidateDigitalContractAsync(contractId, token);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult SendDigitalContract(ulong productId, ulong customerNumber, System.Collections.Generic.List<int> attachmentTypes, System.Collections.Generic.Dictionary<string, string> parameters, System.DateTime operDay, bool includeAllPos) {
            return base.Channel.SendDigitalContract(productId, customerNumber, attachmentTypes, parameters, operDay, includeAllPos);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SendDigitalContractAsync(ulong productId, ulong customerNumber, System.Collections.Generic.List<int> attachmentTypes, System.Collections.Generic.Dictionary<string, string> parameters, System.DateTime operDay, bool includeAllPos) {
            return base.Channel.SendDigitalContractAsync(productId, customerNumber, attachmentTypes, parameters, operDay, includeAllPos);
        }
        
        public FrontOffice.eSignServiceReference.FullDigitalContract GetDigitalContractForSign(System.Guid contractId) {
            return base.Channel.GetDigitalContractForSign(contractId);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.FullDigitalContract> GetDigitalContractForSignAsync(System.Guid contractId) {
            return base.Channel.GetDigitalContractForSignAsync(contractId);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult SendOTP(System.Guid digitalContractId, string token, bool acceptTerms) {
            return base.Channel.SendOTP(digitalContractId, token, acceptTerms);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SendOTPAsync(System.Guid digitalContractId, string token, bool acceptTerms) {
            return base.Channel.SendOTPAsync(digitalContractId, token, acceptTerms);
        }
        
        public FrontOffice.eSignServiceReference.DigitalContractFile GetDigitalContractFile(System.Guid digitalContractId, string fileId, string token) {
            return base.Channel.GetDigitalContractFile(digitalContractId, fileId, token);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.DigitalContractFile> GetDigitalContractFileAsync(System.Guid digitalContractId, string fileId, string token) {
            return base.Channel.GetDigitalContractFileAsync(digitalContractId, fileId, token);
        }
        
        public FrontOffice.eSignServiceReference.DigitalContractFile GetDigitalContractFiles(System.Guid digitalContractId, string token) {
            return base.Channel.GetDigitalContractFiles(digitalContractId, token);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.DigitalContractFile> GetDigitalContractFilesAsync(System.Guid digitalContractId, string token) {
            return base.Channel.GetDigitalContractFilesAsync(digitalContractId, token);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult ApproveDigitalContract(System.Guid digitalContractId, string otp, string token) {
            return base.Channel.ApproveDigitalContract(digitalContractId, otp, token);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> ApproveDigitalContractAsync(System.Guid digitalContractId, string otp, string token) {
            return base.Channel.ApproveDigitalContractAsync(digitalContractId, otp, token);
        }
        
        public System.Collections.Generic.List<FrontOffice.eSignServiceReference.SentDigitalContract> GetSentDigitalContracts(ulong customerNumber) {
            return base.Channel.GetSentDigitalContracts(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.eSignServiceReference.SentDigitalContract>> GetSentDigitalContractsAsync(ulong customerNumber) {
            return base.Channel.GetSentDigitalContractsAsync(customerNumber);
        }
        
        public System.Collections.Generic.List<FrontOffice.eSignServiceReference.SignedDigitalContract> GetSignedDigitalContracts(ulong customerNumber) {
            return base.Channel.GetSignedDigitalContracts(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.eSignServiceReference.SignedDigitalContract>> GetSignedDigitalContractsAsync(ulong customerNumber) {
            return base.Channel.GetSignedDigitalContractsAsync(customerNumber);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult CancelDigitalContractById(System.Guid digitalContractId) {
            return base.Channel.CancelDigitalContractById(digitalContractId);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> CancelDigitalContractByIdAsync(System.Guid digitalContractId) {
            return base.Channel.CancelDigitalContractByIdAsync(digitalContractId);
        }
        
        public FrontOffice.eSignServiceReference.ActionResult SignedInPaperById(System.Guid digitalContractId) {
            return base.Channel.SignedInPaperById(digitalContractId);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.eSignServiceReference.ActionResult> SignedInPaperByIdAsync(System.Guid digitalContractId) {
            return base.Channel.SignedInPaperByIdAsync(digitalContractId);
        }
        
        public byte[] GetSignedDocuments(string fileId, string fileName) {
            return base.Channel.GetSignedDocuments(fileId, fileName);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetSignedDocumentsAsync(string fileId, string fileName) {
            return base.Channel.GetSignedDocumentsAsync(fileId, fileName);
        }
    }
}
