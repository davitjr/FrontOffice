//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrontOffice.CardStatementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardStatementSession", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    [System.SerializableAttribute()]
    public partial class CardStatementSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatementEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatementStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statementTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((this.ScheduleField.Equals(value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionNumber {
            get {
                return this.SessionNumberField;
            }
            set {
                if ((this.SessionNumberField.Equals(value) != true)) {
                    this.SessionNumberField = value;
                    this.RaisePropertyChanged("SessionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatementEndDate {
            get {
                return this.StatementEndDateField;
            }
            set {
                if ((this.StatementEndDateField.Equals(value) != true)) {
                    this.StatementEndDateField = value;
                    this.RaisePropertyChanged("StatementEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatementStartDate {
            get {
                return this.StatementStartDateField;
            }
            set {
                if ((this.StatementStartDateField.Equals(value) != true)) {
                    this.StatementStartDateField = value;
                    this.RaisePropertyChanged("StatementStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int statementType {
            get {
                return this.statementTypeField;
            }
            set {
                if ((this.statementTypeField.Equals(value) != true)) {
                    this.statementTypeField = value;
                    this.RaisePropertyChanged("statementType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionResult", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    [System.SerializableAttribute()]
    public partial class ActionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.CardStatementService.ActionError> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.CardStatementService.ResultCode ResultCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.CardStatementService.ActionError> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.CardStatementService.ResultCode ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionError", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    [System.SerializableAttribute()]
    public partial class ActionError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ParamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultCode", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    public enum ResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAutorized = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedNotConfirmed = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoneAutoConfirm = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> AdvancedOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAutorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsChiefAccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSessionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort filialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong number_of_itemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int transRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong userCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userPermissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountGroup {
            get {
                return this.AccountGroupField;
            }
            set {
                if ((this.AccountGroupField.Equals(value) != true)) {
                    this.AccountGroupField = value;
                    this.RaisePropertyChanged("AccountGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> AdvancedOptions {
            get {
                return this.AdvancedOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvancedOptionsField, value) != true)) {
                    this.AdvancedOptionsField = value;
                    this.RaisePropertyChanged("AdvancedOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAutorized {
            get {
                return this.IsAutorizedField;
            }
            set {
                if ((this.IsAutorizedField.Equals(value) != true)) {
                    this.IsAutorizedField = value;
                    this.RaisePropertyChanged("IsAutorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChiefAcc {
            get {
                return this.IsChiefAccField;
            }
            set {
                if ((this.IsChiefAccField.Equals(value) != true)) {
                    this.IsChiefAccField = value;
                    this.RaisePropertyChanged("IsChiefAcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionName {
            get {
                return this.PositionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionNameField, value) != true)) {
                    this.PositionNameField = value;
                    this.RaisePropertyChanged("PositionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionLimit {
            get {
                return this.TransactionLimitField;
            }
            set {
                if ((this.TransactionLimitField.Equals(value) != true)) {
                    this.TransactionLimitField = value;
                    this.RaisePropertyChanged("TransactionLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSessionToken {
            get {
                return this.UserSessionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSessionTokenField, value) != true)) {
                    this.UserSessionTokenField = value;
                    this.RaisePropertyChanged("UserSessionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort filialCode {
            get {
                return this.filialCodeField;
            }
            set {
                if ((this.filialCodeField.Equals(value) != true)) {
                    this.filialCodeField = value;
                    this.RaisePropertyChanged("filialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong number_of_item {
            get {
                return this.number_of_itemField;
            }
            set {
                if ((this.number_of_itemField.Equals(value) != true)) {
                    this.number_of_itemField = value;
                    this.RaisePropertyChanged("number_of_item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int transRight {
            get {
                return this.transRightField;
            }
            set {
                if ((this.transRightField.Equals(value) != true)) {
                    this.transRightField = value;
                    this.RaisePropertyChanged("transRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong userCustomerNumber {
            get {
                return this.userCustomerNumberField;
            }
            set {
                if ((this.userCustomerNumberField.Equals(value) != true)) {
                    this.userCustomerNumberField = value;
                    this.RaisePropertyChanged("userCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userPermissionId {
            get {
                return this.userPermissionIdField;
            }
            set {
                if ((this.userPermissionIdField.Equals(value) != true)) {
                    this.userPermissionIdField = value;
                    this.RaisePropertyChanged("userPermissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardStatementSessionDetails", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    [System.SerializableAttribute()]
    public partial class CardStatementSessionDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedStatementCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedStatementCountEXCELField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedStatementCountPDFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RejectedStatementCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SentStatementCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubscriptionRunningDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalStatementCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedStatementCount {
            get {
                return this.CreatedStatementCountField;
            }
            set {
                if ((this.CreatedStatementCountField.Equals(value) != true)) {
                    this.CreatedStatementCountField = value;
                    this.RaisePropertyChanged("CreatedStatementCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedStatementCountEXCEL {
            get {
                return this.CreatedStatementCountEXCELField;
            }
            set {
                if ((this.CreatedStatementCountEXCELField.Equals(value) != true)) {
                    this.CreatedStatementCountEXCELField = value;
                    this.RaisePropertyChanged("CreatedStatementCountEXCEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedStatementCountPDF {
            get {
                return this.CreatedStatementCountPDFField;
            }
            set {
                if ((this.CreatedStatementCountPDFField.Equals(value) != true)) {
                    this.CreatedStatementCountPDFField = value;
                    this.RaisePropertyChanged("CreatedStatementCountPDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RejectedStatementCount {
            get {
                return this.RejectedStatementCountField;
            }
            set {
                if ((this.RejectedStatementCountField.Equals(value) != true)) {
                    this.RejectedStatementCountField = value;
                    this.RaisePropertyChanged("RejectedStatementCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SentStatementCount {
            get {
                return this.SentStatementCountField;
            }
            set {
                if ((this.SentStatementCountField.Equals(value) != true)) {
                    this.SentStatementCountField = value;
                    this.RaisePropertyChanged("SentStatementCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubscriptionRunningDate {
            get {
                return this.SubscriptionRunningDateField;
            }
            set {
                if ((this.SubscriptionRunningDateField.Equals(value) != true)) {
                    this.SubscriptionRunningDateField = value;
                    this.RaisePropertyChanged("SubscriptionRunningDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalStatementCount {
            get {
                return this.TotalStatementCountField;
            }
            set {
                if ((this.TotalStatementCountField.Equals(value) != true)) {
                    this.TotalStatementCountField = value;
                    this.RaisePropertyChanged("TotalStatementCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatementSessionHistory", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    [System.SerializableAttribute()]
    public partial class StatementSessionHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeDateStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint userIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeDateString {
            get {
                return this.ChangeDateStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeDateStringField, value) != true)) {
                    this.ChangeDateStringField = value;
                    this.RaisePropertyChanged("ChangeDateString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeUserName {
            get {
                return this.ChangeUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeUserNameField, value) != true)) {
                    this.ChangeUserNameField = value;
                    this.RaisePropertyChanged("ChangeUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdvertisementConfiguration", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    [System.SerializableAttribute()]
    public partial class AdvertisementConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardSystemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.CardStatementService.Advertisement> OneCardAdvertisementsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardSystem {
            get {
                return this.CardSystemField;
            }
            set {
                if ((this.CardSystemField.Equals(value) != true)) {
                    this.CardSystemField = value;
                    this.RaisePropertyChanged("CardSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardSystemDescription {
            get {
                return this.CardSystemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardSystemDescriptionField, value) != true)) {
                    this.CardSystemDescriptionField = value;
                    this.RaisePropertyChanged("CardSystemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((this.CardTypeField.Equals(value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.CardStatementService.Advertisement> OneCardAdvertisements {
            get {
                return this.OneCardAdvertisementsField;
            }
            set {
                if ((object.ReferenceEquals(this.OneCardAdvertisementsField, value) != true)) {
                    this.OneCardAdvertisementsField = value;
                    this.RaisePropertyChanged("OneCardAdvertisements");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Advertisement", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    [System.SerializableAttribute()]
    public partial class Advertisement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.CardStatementService.AdvertisementConfiguration> AllCardsAdvertisementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.CardStatementService.AdvertisementFile CurrentFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.CardStatementService.AdvertisementFile> FilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((this.ActivityField.Equals(value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.CardStatementService.AdvertisementConfiguration> AllCardsAdvertisements {
            get {
                return this.AllCardsAdvertisementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AllCardsAdvertisementsField, value) != true)) {
                    this.AllCardsAdvertisementsField = value;
                    this.RaisePropertyChanged("AllCardsAdvertisements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.CardStatementService.AdvertisementFile CurrentFile {
            get {
                return this.CurrentFileField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentFileField, value) != true)) {
                    this.CurrentFileField = value;
                    this.RaisePropertyChanged("CurrentFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.CardStatementService.AdvertisementFile> Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdvertisementFile", Namespace="http://schemas.datacontract.org/2004/07/CardStatementManagement")]
    [System.SerializableAttribute()]
    public partial class AdvertisementFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CardStatementService.ICardStatementService")]
    public interface ICardStatementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetCardStatementSessions", ReplyAction="http://tempuri.org/ICardStatementService/GetCardStatementSessionsResponse")]
        System.Collections.Generic.List<FrontOffice.CardStatementService.CardStatementSession> GetCardStatementSessions(int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetCardStatementSessions", ReplyAction="http://tempuri.org/ICardStatementService/GetCardStatementSessionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.CardStatementService.CardStatementSession>> GetCardStatementSessionsAsync(int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/CreateCardStatementSession", ReplyAction="http://tempuri.org/ICardStatementService/CreateCardStatementSessionResponse")]
        FrontOffice.CardStatementService.ActionResult CreateCardStatementSession(System.DateTime periodStart, System.DateTime periodEnd, int statementType, int frequency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/CreateCardStatementSession", ReplyAction="http://tempuri.org/ICardStatementService/CreateCardStatementSessionResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> CreateCardStatementSessionAsync(System.DateTime periodStart, System.DateTime periodEnd, int statementType, int frequency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/DeleteCardStatementSession", ReplyAction="http://tempuri.org/ICardStatementService/DeleteCardStatementSessionResponse")]
        FrontOffice.CardStatementService.ActionResult DeleteCardStatementSession(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/DeleteCardStatementSession", ReplyAction="http://tempuri.org/ICardStatementService/DeleteCardStatementSessionResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> DeleteCardStatementSessionAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/SetCurrentUser", ReplyAction="http://tempuri.org/ICardStatementService/SetCurrentUserResponse")]
        void SetCurrentUser(FrontOffice.CardStatementService.User client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/SetCurrentUser", ReplyAction="http://tempuri.org/ICardStatementService/SetCurrentUserResponse")]
        System.Threading.Tasks.Task SetCurrentUserAsync(FrontOffice.CardStatementService.User client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetStatementSessionQualityTypes", ReplyAction="http://tempuri.org/ICardStatementService/GetStatementSessionQualityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetStatementSessionQualityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetStatementSessionQualityTypes", ReplyAction="http://tempuri.org/ICardStatementService/GetStatementSessionQualityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatementSessionQualityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetCardSessionDetails", ReplyAction="http://tempuri.org/ICardStatementService/GetCardSessionDetailsResponse")]
        FrontOffice.CardStatementService.CardStatementSessionDetails GetCardSessionDetails(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetCardSessionDetails", ReplyAction="http://tempuri.org/ICardStatementService/GetCardSessionDetailsResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.CardStatementSessionDetails> GetCardSessionDetailsAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetSatementHistory", ReplyAction="http://tempuri.org/ICardStatementService/GetSatementHistoryResponse")]
        System.Collections.Generic.List<FrontOffice.CardStatementService.StatementSessionHistory> GetSatementHistory(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetSatementHistory", ReplyAction="http://tempuri.org/ICardStatementService/GetSatementHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.CardStatementService.StatementSessionHistory>> GetSatementHistoryAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/StartCardStatementSessionSubscription", ReplyAction="http://tempuri.org/ICardStatementService/StartCardStatementSessionSubscriptionRes" +
            "ponse")]
        FrontOffice.CardStatementService.ActionResult StartCardStatementSessionSubscription(int sessionID, int startType, System.DateTime schedule, int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/StartCardStatementSessionSubscription", ReplyAction="http://tempuri.org/ICardStatementService/StartCardStatementSessionSubscriptionRes" +
            "ponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> StartCardStatementSessionSubscriptionAsync(int sessionID, int startType, System.DateTime schedule, int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/ChangeStatementSessionStatus", ReplyAction="http://tempuri.org/ICardStatementService/ChangeStatementSessionStatusResponse")]
        int ChangeStatementSessionStatus(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/ChangeStatementSessionStatus", ReplyAction="http://tempuri.org/ICardStatementService/ChangeStatementSessionStatusResponse")]
        System.Threading.Tasks.Task<int> ChangeStatementSessionStatusAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/DeleteCardStatementSessionSchedule", ReplyAction="http://tempuri.org/ICardStatementService/DeleteCardStatementSessionScheduleRespon" +
            "se")]
        FrontOffice.CardStatementService.ActionResult DeleteCardStatementSessionSchedule(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/DeleteCardStatementSessionSchedule", ReplyAction="http://tempuri.org/ICardStatementService/DeleteCardStatementSessionScheduleRespon" +
            "se")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> DeleteCardStatementSessionScheduleAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetOneCardAdvertisements", ReplyAction="http://tempuri.org/ICardStatementService/GetOneCardAdvertisementsResponse")]
        FrontOffice.CardStatementService.AdvertisementConfiguration GetOneCardAdvertisements(int cardType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetOneCardAdvertisements", ReplyAction="http://tempuri.org/ICardStatementService/GetOneCardAdvertisementsResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.AdvertisementConfiguration> GetOneCardAdvertisementsAsync(int cardType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetAllCardsAdvertisements", ReplyAction="http://tempuri.org/ICardStatementService/GetAllCardsAdvertisementsResponse")]
        FrontOffice.CardStatementService.Advertisement GetAllCardsAdvertisements();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetAllCardsAdvertisements", ReplyAction="http://tempuri.org/ICardStatementService/GetAllCardsAdvertisementsResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.Advertisement> GetAllCardsAdvertisementsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetAdvertisementFiles", ReplyAction="http://tempuri.org/ICardStatementService/GetAdvertisementFilesResponse")]
        FrontOffice.CardStatementService.Advertisement GetAdvertisementFiles(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetAdvertisementFiles", ReplyAction="http://tempuri.org/ICardStatementService/GetAdvertisementFilesResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.Advertisement> GetAdvertisementFilesAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetAdvertisementFileByID", ReplyAction="http://tempuri.org/ICardStatementService/GetAdvertisementFileByIDResponse")]
        FrontOffice.CardStatementService.AdvertisementFile GetAdvertisementFileByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/GetAdvertisementFileByID", ReplyAction="http://tempuri.org/ICardStatementService/GetAdvertisementFileByIDResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.AdvertisementFile> GetAdvertisementFileByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/UpdateAdvertisementWithNewFile", ReplyAction="http://tempuri.org/ICardStatementService/UpdateAdvertisementWithNewFileResponse")]
        FrontOffice.CardStatementService.ActionResult UpdateAdvertisementWithNewFile(FrontOffice.CardStatementService.Advertisement advertisement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/UpdateAdvertisementWithNewFile", ReplyAction="http://tempuri.org/ICardStatementService/UpdateAdvertisementWithNewFileResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> UpdateAdvertisementWithNewFileAsync(FrontOffice.CardStatementService.Advertisement advertisement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/InsertAdvertisement", ReplyAction="http://tempuri.org/ICardStatementService/InsertAdvertisementResponse")]
        FrontOffice.CardStatementService.ActionResult InsertAdvertisement(FrontOffice.CardStatementService.AdvertisementConfiguration statementAdvertisements);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/InsertAdvertisement", ReplyAction="http://tempuri.org/ICardStatementService/InsertAdvertisementResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> InsertAdvertisementAsync(FrontOffice.CardStatementService.AdvertisementConfiguration statementAdvertisements);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/DeactivateAdvertisement", ReplyAction="http://tempuri.org/ICardStatementService/DeactivateAdvertisementResponse")]
        FrontOffice.CardStatementService.ActionResult DeactivateAdvertisement(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardStatementService/DeactivateAdvertisement", ReplyAction="http://tempuri.org/ICardStatementService/DeactivateAdvertisementResponse")]
        System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> DeactivateAdvertisementAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICardStatementServiceChannel : FrontOffice.CardStatementService.ICardStatementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CardStatementServiceClient : System.ServiceModel.ClientBase<FrontOffice.CardStatementService.ICardStatementService>, FrontOffice.CardStatementService.ICardStatementService {
        
        public CardStatementServiceClient() {
        }
        
        public CardStatementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CardStatementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardStatementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardStatementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<FrontOffice.CardStatementService.CardStatementSession> GetCardStatementSessions(int statementType) {
            return base.Channel.GetCardStatementSessions(statementType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.CardStatementService.CardStatementSession>> GetCardStatementSessionsAsync(int statementType) {
            return base.Channel.GetCardStatementSessionsAsync(statementType);
        }
        
        public FrontOffice.CardStatementService.ActionResult CreateCardStatementSession(System.DateTime periodStart, System.DateTime periodEnd, int statementType, int frequency) {
            return base.Channel.CreateCardStatementSession(periodStart, periodEnd, statementType, frequency);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> CreateCardStatementSessionAsync(System.DateTime periodStart, System.DateTime periodEnd, int statementType, int frequency) {
            return base.Channel.CreateCardStatementSessionAsync(periodStart, periodEnd, statementType, frequency);
        }
        
        public FrontOffice.CardStatementService.ActionResult DeleteCardStatementSession(int sessionID) {
            return base.Channel.DeleteCardStatementSession(sessionID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> DeleteCardStatementSessionAsync(int sessionID) {
            return base.Channel.DeleteCardStatementSessionAsync(sessionID);
        }
        
        public void SetCurrentUser(FrontOffice.CardStatementService.User client) {
            base.Channel.SetCurrentUser(client);
        }
        
        public System.Threading.Tasks.Task SetCurrentUserAsync(FrontOffice.CardStatementService.User client) {
            return base.Channel.SetCurrentUserAsync(client);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetStatementSessionQualityTypes() {
            return base.Channel.GetStatementSessionQualityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatementSessionQualityTypesAsync() {
            return base.Channel.GetStatementSessionQualityTypesAsync();
        }
        
        public FrontOffice.CardStatementService.CardStatementSessionDetails GetCardSessionDetails(int sessionID) {
            return base.Channel.GetCardSessionDetails(sessionID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.CardStatementSessionDetails> GetCardSessionDetailsAsync(int sessionID) {
            return base.Channel.GetCardSessionDetailsAsync(sessionID);
        }
        
        public System.Collections.Generic.List<FrontOffice.CardStatementService.StatementSessionHistory> GetSatementHistory(int sessionID) {
            return base.Channel.GetSatementHistory(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.CardStatementService.StatementSessionHistory>> GetSatementHistoryAsync(int sessionID) {
            return base.Channel.GetSatementHistoryAsync(sessionID);
        }
        
        public FrontOffice.CardStatementService.ActionResult StartCardStatementSessionSubscription(int sessionID, int startType, System.DateTime schedule, int statementType) {
            return base.Channel.StartCardStatementSessionSubscription(sessionID, startType, schedule, statementType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> StartCardStatementSessionSubscriptionAsync(int sessionID, int startType, System.DateTime schedule, int statementType) {
            return base.Channel.StartCardStatementSessionSubscriptionAsync(sessionID, startType, schedule, statementType);
        }
        
        public int ChangeStatementSessionStatus(int sessionID) {
            return base.Channel.ChangeStatementSessionStatus(sessionID);
        }
        
        public System.Threading.Tasks.Task<int> ChangeStatementSessionStatusAsync(int sessionID) {
            return base.Channel.ChangeStatementSessionStatusAsync(sessionID);
        }
        
        public FrontOffice.CardStatementService.ActionResult DeleteCardStatementSessionSchedule(int sessionID) {
            return base.Channel.DeleteCardStatementSessionSchedule(sessionID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> DeleteCardStatementSessionScheduleAsync(int sessionID) {
            return base.Channel.DeleteCardStatementSessionScheduleAsync(sessionID);
        }
        
        public FrontOffice.CardStatementService.AdvertisementConfiguration GetOneCardAdvertisements(int cardType) {
            return base.Channel.GetOneCardAdvertisements(cardType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.AdvertisementConfiguration> GetOneCardAdvertisementsAsync(int cardType) {
            return base.Channel.GetOneCardAdvertisementsAsync(cardType);
        }
        
        public FrontOffice.CardStatementService.Advertisement GetAllCardsAdvertisements() {
            return base.Channel.GetAllCardsAdvertisements();
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.Advertisement> GetAllCardsAdvertisementsAsync() {
            return base.Channel.GetAllCardsAdvertisementsAsync();
        }
        
        public FrontOffice.CardStatementService.Advertisement GetAdvertisementFiles(int ID) {
            return base.Channel.GetAdvertisementFiles(ID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.Advertisement> GetAdvertisementFilesAsync(int ID) {
            return base.Channel.GetAdvertisementFilesAsync(ID);
        }
        
        public FrontOffice.CardStatementService.AdvertisementFile GetAdvertisementFileByID(int ID) {
            return base.Channel.GetAdvertisementFileByID(ID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.AdvertisementFile> GetAdvertisementFileByIDAsync(int ID) {
            return base.Channel.GetAdvertisementFileByIDAsync(ID);
        }
        
        public FrontOffice.CardStatementService.ActionResult UpdateAdvertisementWithNewFile(FrontOffice.CardStatementService.Advertisement advertisement) {
            return base.Channel.UpdateAdvertisementWithNewFile(advertisement);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> UpdateAdvertisementWithNewFileAsync(FrontOffice.CardStatementService.Advertisement advertisement) {
            return base.Channel.UpdateAdvertisementWithNewFileAsync(advertisement);
        }
        
        public FrontOffice.CardStatementService.ActionResult InsertAdvertisement(FrontOffice.CardStatementService.AdvertisementConfiguration statementAdvertisements) {
            return base.Channel.InsertAdvertisement(statementAdvertisements);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> InsertAdvertisementAsync(FrontOffice.CardStatementService.AdvertisementConfiguration statementAdvertisements) {
            return base.Channel.InsertAdvertisementAsync(statementAdvertisements);
        }
        
        public FrontOffice.CardStatementService.ActionResult DeactivateAdvertisement(int ID) {
            return base.Channel.DeactivateAdvertisement(ID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.CardStatementService.ActionResult> DeactivateAdvertisementAsync(int ID) {
            return base.Channel.DeactivateAdvertisementAsync(ID);
        }
    }
}
