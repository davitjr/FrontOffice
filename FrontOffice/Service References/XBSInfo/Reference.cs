//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrontOffice.XBSInfo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfshortstring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfshortstring : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private short keyField;
        
        private string valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public short key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrokerContractSurvey", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class BrokerContractSurvey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> BookValueOfPreviousYearOfAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> EducationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> FinancialExperiencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> FinancialSituationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> InvestmentPurposesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> LastYearCapitalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> LastYearSalesTurnoversField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> OcupationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> RiskLeaningsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> StockExperiencDurationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> StockKnowledgesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> StockToolsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> BookValueOfPreviousYearOfAssets {
            get {
                return this.BookValueOfPreviousYearOfAssetsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookValueOfPreviousYearOfAssetsField, value) != true)) {
                    this.BookValueOfPreviousYearOfAssetsField = value;
                    this.RaisePropertyChanged("BookValueOfPreviousYearOfAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> Educations {
            get {
                return this.EducationsField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationsField, value) != true)) {
                    this.EducationsField = value;
                    this.RaisePropertyChanged("Educations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> FinancialExperiences {
            get {
                return this.FinancialExperiencesField;
            }
            set {
                if ((object.ReferenceEquals(this.FinancialExperiencesField, value) != true)) {
                    this.FinancialExperiencesField = value;
                    this.RaisePropertyChanged("FinancialExperiences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> FinancialSituations {
            get {
                return this.FinancialSituationsField;
            }
            set {
                if ((object.ReferenceEquals(this.FinancialSituationsField, value) != true)) {
                    this.FinancialSituationsField = value;
                    this.RaisePropertyChanged("FinancialSituations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> InvestmentPurposes {
            get {
                return this.InvestmentPurposesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvestmentPurposesField, value) != true)) {
                    this.InvestmentPurposesField = value;
                    this.RaisePropertyChanged("InvestmentPurposes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> LastYearCapitals {
            get {
                return this.LastYearCapitalsField;
            }
            set {
                if ((object.ReferenceEquals(this.LastYearCapitalsField, value) != true)) {
                    this.LastYearCapitalsField = value;
                    this.RaisePropertyChanged("LastYearCapitals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> LastYearSalesTurnovers {
            get {
                return this.LastYearSalesTurnoversField;
            }
            set {
                if ((object.ReferenceEquals(this.LastYearSalesTurnoversField, value) != true)) {
                    this.LastYearSalesTurnoversField = value;
                    this.RaisePropertyChanged("LastYearSalesTurnovers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> Ocupations {
            get {
                return this.OcupationsField;
            }
            set {
                if ((object.ReferenceEquals(this.OcupationsField, value) != true)) {
                    this.OcupationsField = value;
                    this.RaisePropertyChanged("Ocupations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> RiskLeanings {
            get {
                return this.RiskLeaningsField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskLeaningsField, value) != true)) {
                    this.RiskLeaningsField = value;
                    this.RaisePropertyChanged("RiskLeanings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> StockExperiencDurations {
            get {
                return this.StockExperiencDurationsField;
            }
            set {
                if ((object.ReferenceEquals(this.StockExperiencDurationsField, value) != true)) {
                    this.StockExperiencDurationsField = value;
                    this.RaisePropertyChanged("StockExperiencDurations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> StockKnowledges {
            get {
                return this.StockKnowledgesField;
            }
            set {
                if ((object.ReferenceEquals(this.StockKnowledgesField, value) != true)) {
                    this.StockKnowledgesField = value;
                    this.RaisePropertyChanged("StockKnowledges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.BrokerContractSelection> StockTools {
            get {
                return this.StockToolsField;
            }
            set {
                if ((object.ReferenceEquals(this.StockToolsField, value) != true)) {
                    this.StockToolsField = value;
                    this.RaisePropertyChanged("StockTools");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrokerContractSelection", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class BrokerContractSelection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Languages", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum Languages : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        hy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        eng = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardTariffContract", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardTariffContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.XBSInfo.CardTariff> CardTariffsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort RelatedOfficeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TariffIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.XBSInfo.CardTariff> CardTariffs {
            get {
                return this.CardTariffsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTariffsField, value) != true)) {
                    this.CardTariffsField = value;
                    this.RaisePropertyChanged("CardTariffs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((this.ReasonField.Equals(value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonDescription {
            get {
                return this.ReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonDescriptionField, value) != true)) {
                    this.ReasonDescriptionField = value;
                    this.RaisePropertyChanged("ReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort RelatedOfficeNumber {
            get {
                return this.RelatedOfficeNumberField;
            }
            set {
                if ((this.RelatedOfficeNumberField.Equals(value) != true)) {
                    this.RelatedOfficeNumberField = value;
                    this.RaisePropertyChanged("RelatedOfficeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TariffID {
            get {
                return this.TariffIDField;
            }
            set {
                if ((this.TariffIDField.Equals(value) != true)) {
                    this.TariffIDField = value;
                    this.RaisePropertyChanged("TariffID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardTariff", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardTariff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CardToCardFeeOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CardToCardFeeOurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardValidityPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashInFeeRateOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashInFeeRateOurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashRateInternationalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashRateOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashRateOurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GracePeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinFeeInternationalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinFeeLocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NegativeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PositiveRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SMSFeeFromBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SMSFeeFromCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ServiceFeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardSystem {
            get {
                return this.CardSystemField;
            }
            set {
                if ((this.CardSystemField.Equals(value) != true)) {
                    this.CardSystemField = value;
                    this.RaisePropertyChanged("CardSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CardToCardFeeOther {
            get {
                return this.CardToCardFeeOtherField;
            }
            set {
                if ((this.CardToCardFeeOtherField.Equals(value) != true)) {
                    this.CardToCardFeeOtherField = value;
                    this.RaisePropertyChanged("CardToCardFeeOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CardToCardFeeOur {
            get {
                return this.CardToCardFeeOurField;
            }
            set {
                if ((this.CardToCardFeeOurField.Equals(value) != true)) {
                    this.CardToCardFeeOurField = value;
                    this.RaisePropertyChanged("CardToCardFeeOur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((this.CardTypeField.Equals(value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardValidityPeriod {
            get {
                return this.CardValidityPeriodField;
            }
            set {
                if ((this.CardValidityPeriodField.Equals(value) != true)) {
                    this.CardValidityPeriodField = value;
                    this.RaisePropertyChanged("CardValidityPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashInFeeRateOther {
            get {
                return this.CashInFeeRateOtherField;
            }
            set {
                if ((this.CashInFeeRateOtherField.Equals(value) != true)) {
                    this.CashInFeeRateOtherField = value;
                    this.RaisePropertyChanged("CashInFeeRateOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashInFeeRateOur {
            get {
                return this.CashInFeeRateOurField;
            }
            set {
                if ((this.CashInFeeRateOurField.Equals(value) != true)) {
                    this.CashInFeeRateOurField = value;
                    this.RaisePropertyChanged("CashInFeeRateOur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashRateInternational {
            get {
                return this.CashRateInternationalField;
            }
            set {
                if ((this.CashRateInternationalField.Equals(value) != true)) {
                    this.CashRateInternationalField = value;
                    this.RaisePropertyChanged("CashRateInternational");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashRateOther {
            get {
                return this.CashRateOtherField;
            }
            set {
                if ((this.CashRateOtherField.Equals(value) != true)) {
                    this.CashRateOtherField = value;
                    this.RaisePropertyChanged("CashRateOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashRateOur {
            get {
                return this.CashRateOurField;
            }
            set {
                if ((this.CashRateOurField.Equals(value) != true)) {
                    this.CashRateOurField = value;
                    this.RaisePropertyChanged("CashRateOur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GracePeriod {
            get {
                return this.GracePeriodField;
            }
            set {
                if ((this.GracePeriodField.Equals(value) != true)) {
                    this.GracePeriodField = value;
                    this.RaisePropertyChanged("GracePeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinFeeInternational {
            get {
                return this.MinFeeInternationalField;
            }
            set {
                if ((this.MinFeeInternationalField.Equals(value) != true)) {
                    this.MinFeeInternationalField = value;
                    this.RaisePropertyChanged("MinFeeInternational");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinFeeLocal {
            get {
                return this.MinFeeLocalField;
            }
            set {
                if ((this.MinFeeLocalField.Equals(value) != true)) {
                    this.MinFeeLocalField = value;
                    this.RaisePropertyChanged("MinFeeLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NegativeRate {
            get {
                return this.NegativeRateField;
            }
            set {
                if ((this.NegativeRateField.Equals(value) != true)) {
                    this.NegativeRateField = value;
                    this.RaisePropertyChanged("NegativeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((this.PeriodField.Equals(value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PositiveRate {
            get {
                return this.PositiveRateField;
            }
            set {
                if ((this.PositiveRateField.Equals(value) != true)) {
                    this.PositiveRateField = value;
                    this.RaisePropertyChanged("PositiveRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SMSFeeFromBank {
            get {
                return this.SMSFeeFromBankField;
            }
            set {
                if ((this.SMSFeeFromBankField.Equals(value) != true)) {
                    this.SMSFeeFromBankField = value;
                    this.RaisePropertyChanged("SMSFeeFromBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SMSFeeFromCustomer {
            get {
                return this.SMSFeeFromCustomerField;
            }
            set {
                if ((this.SMSFeeFromCustomerField.Equals(value) != true)) {
                    this.SMSFeeFromCustomerField = value;
                    this.RaisePropertyChanged("SMSFeeFromCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ServiceFee {
            get {
                return this.ServiceFeeField;
            }
            set {
                if ((this.ServiceFeeField.Equals(value) != true)) {
                    this.ServiceFeeField = value;
                    this.RaisePropertyChanged("ServiceFee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfunsignedBytestring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfunsignedBytestring : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private byte keyField;
        
        private string valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum SourceType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bank = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcbaOnline = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcbaOnlineXML = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmSoft = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobileBanking = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBanking = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInTerminal = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCashTerminal = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinesTab = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSTerminal = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EContract = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STAK = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SberBankTransfer = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkPayment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcbaMat = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizedCustomer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingService")]
    [System.SerializableAttribute()]
    public partial class AuthorizedCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ApprovementSchemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DailyTransactionsLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DayLimitToAnothersAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DayLimitToOwnAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimitedAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OneTransactionLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OneTransactionLimitToAnothersAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OneTransactionLimitToOwnAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondConfirmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeOfClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ApprovementScheme {
            get {
                return this.ApprovementSchemeField;
            }
            set {
                if ((this.ApprovementSchemeField.Equals(value) != true)) {
                    this.ApprovementSchemeField = value;
                    this.RaisePropertyChanged("ApprovementScheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BranchCode {
            get {
                return this.BranchCodeField;
            }
            set {
                if ((this.BranchCodeField.Equals(value) != true)) {
                    this.BranchCodeField = value;
                    this.RaisePropertyChanged("BranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DailyTransactionsLimit {
            get {
                return this.DailyTransactionsLimitField;
            }
            set {
                if ((this.DailyTransactionsLimitField.Equals(value) != true)) {
                    this.DailyTransactionsLimitField = value;
                    this.RaisePropertyChanged("DailyTransactionsLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DayLimitToAnothersAccount {
            get {
                return this.DayLimitToAnothersAccountField;
            }
            set {
                if ((this.DayLimitToAnothersAccountField.Equals(value) != true)) {
                    this.DayLimitToAnothersAccountField = value;
                    this.RaisePropertyChanged("DayLimitToAnothersAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DayLimitToOwnAccount {
            get {
                return this.DayLimitToOwnAccountField;
            }
            set {
                if ((this.DayLimitToOwnAccountField.Equals(value) != true)) {
                    this.DayLimitToOwnAccountField = value;
                    this.RaisePropertyChanged("DayLimitToOwnAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LimitedAccess {
            get {
                return this.LimitedAccessField;
            }
            set {
                if ((this.LimitedAccessField.Equals(value) != true)) {
                    this.LimitedAccessField = value;
                    this.RaisePropertyChanged("LimitedAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OneTransactionLimit {
            get {
                return this.OneTransactionLimitField;
            }
            set {
                if ((this.OneTransactionLimitField.Equals(value) != true)) {
                    this.OneTransactionLimitField = value;
                    this.RaisePropertyChanged("OneTransactionLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OneTransactionLimitToAnothersAccount {
            get {
                return this.OneTransactionLimitToAnothersAccountField;
            }
            set {
                if ((this.OneTransactionLimitToAnothersAccountField.Equals(value) != true)) {
                    this.OneTransactionLimitToAnothersAccountField = value;
                    this.RaisePropertyChanged("OneTransactionLimitToAnothersAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OneTransactionLimitToOwnAccount {
            get {
                return this.OneTransactionLimitToOwnAccountField;
            }
            set {
                if ((this.OneTransactionLimitToOwnAccountField.Equals(value) != true)) {
                    this.OneTransactionLimitToOwnAccountField = value;
                    this.RaisePropertyChanged("OneTransactionLimitToOwnAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((this.PermissionField.Equals(value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondConfirm {
            get {
                return this.SecondConfirmField;
            }
            set {
                if ((this.SecondConfirmField.Equals(value) != true)) {
                    this.SecondConfirmField = value;
                    this.RaisePropertyChanged("SecondConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeOfClient {
            get {
                return this.TypeOfClientField;
            }
            set {
                if ((this.TypeOfClientField.Equals(value) != true)) {
                    this.TypeOfClientField = value;
                    this.RaisePropertyChanged("TypeOfClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfstringstring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfstringstring : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string keyField;
        
        private string valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeOfHbProductTypes", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum TypeOfHbProductTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transfers = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Application = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Payment = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> AdvancedOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAutorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsChiefAccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSessionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort filialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong number_of_itemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int transRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong userCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userPermissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountGroup {
            get {
                return this.AccountGroupField;
            }
            set {
                if ((this.AccountGroupField.Equals(value) != true)) {
                    this.AccountGroupField = value;
                    this.RaisePropertyChanged("AccountGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> AdvancedOptions {
            get {
                return this.AdvancedOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvancedOptionsField, value) != true)) {
                    this.AdvancedOptionsField = value;
                    this.RaisePropertyChanged("AdvancedOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAutorized {
            get {
                return this.IsAutorizedField;
            }
            set {
                if ((this.IsAutorizedField.Equals(value) != true)) {
                    this.IsAutorizedField = value;
                    this.RaisePropertyChanged("IsAutorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChiefAcc {
            get {
                return this.IsChiefAccField;
            }
            set {
                if ((this.IsChiefAccField.Equals(value) != true)) {
                    this.IsChiefAccField = value;
                    this.RaisePropertyChanged("IsChiefAcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionName {
            get {
                return this.PositionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionNameField, value) != true)) {
                    this.PositionNameField = value;
                    this.RaisePropertyChanged("PositionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionLimit {
            get {
                return this.TransactionLimitField;
            }
            set {
                if ((this.TransactionLimitField.Equals(value) != true)) {
                    this.TransactionLimitField = value;
                    this.RaisePropertyChanged("TransactionLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSessionToken {
            get {
                return this.UserSessionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSessionTokenField, value) != true)) {
                    this.UserSessionTokenField = value;
                    this.RaisePropertyChanged("UserSessionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort filialCode {
            get {
                return this.filialCodeField;
            }
            set {
                if ((this.filialCodeField.Equals(value) != true)) {
                    this.filialCodeField = value;
                    this.RaisePropertyChanged("filialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong number_of_item {
            get {
                return this.number_of_itemField;
            }
            set {
                if ((this.number_of_itemField.Equals(value) != true)) {
                    this.number_of_itemField = value;
                    this.RaisePropertyChanged("number_of_item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int transRight {
            get {
                return this.transRightField;
            }
            set {
                if ((this.transRightField.Equals(value) != true)) {
                    this.transRightField = value;
                    this.RaisePropertyChanged("transRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong userCustomerNumber {
            get {
                return this.userCustomerNumberField;
            }
            set {
                if ((this.userCustomerNumberField.Equals(value) != true)) {
                    this.userCustomerNumberField = value;
                    this.RaisePropertyChanged("userCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userPermissionId {
            get {
                return this.userPermissionIdField;
            }
            set {
                if ((this.userPermissionIdField.Equals(value) != true)) {
                    this.userPermissionIdField = value;
                    this.RaisePropertyChanged("userPermissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfstringboolean", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfstringboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string m_Item1Field;
        
        private bool m_Item2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item1Field, value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((this.m_Item2Field.Equals(value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfbooleanboolean", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfbooleanboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool m_Item1Field;
        
        private bool m_Item2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((this.m_Item1Field.Equals(value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((this.m_Item2Field.Equals(value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionTypeByAML", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransactionTypeByAML : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransactionTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalDescription {
            get {
                return this.AdditionalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDescriptionField, value) != true)) {
                    this.AdditionalDescriptionField = value;
                    this.RaisePropertyChanged("AdditionalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((this.TransactionTypeField.Equals(value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardDesign", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardDesign : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeBannerURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThemeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageId {
            get {
                return this.ImageIdField;
            }
            set {
                if ((this.ImageIdField.Equals(value) != true)) {
                    this.ImageIdField = value;
                    this.RaisePropertyChanged("ImageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThemeBannerURL {
            get {
                return this.ThemeBannerURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeBannerURLField, value) != true)) {
                    this.ThemeBannerURLField = value;
                    this.RaisePropertyChanged("ThemeBannerURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThemeId {
            get {
                return this.ThemeIdField;
            }
            set {
                if ((this.ThemeIdField.Equals(value) != true)) {
                    this.ThemeIdField = value;
                    this.RaisePropertyChanged("ThemeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThemeName {
            get {
                return this.ThemeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeNameField, value) != true)) {
                    this.ThemeNameField = value;
                    this.RaisePropertyChanged("ThemeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbName {
            get {
                return this.ThumbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbNameField, value) != true)) {
                    this.ThumbNameField = value;
                    this.RaisePropertyChanged("ThumbName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbURL {
            get {
                return this.ThumbURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbURLField, value) != true)) {
                    this.ThumbURLField = value;
                    this.RaisePropertyChanged("ThumbURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositOption", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort OptionGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort OptionGroup {
            get {
                return this.OptionGroupField;
            }
            set {
                if ((this.OptionGroupField.Equals(value) != true)) {
                    this.OptionGroupField = value;
                    this.RaisePropertyChanged("OptionGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardTariffAdditionalInformation", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardTariffAdditionalInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeductionStartFromOrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinRestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodFromOrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ReNewFeeFromOrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ReplaceFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ReplaceFeeFromOrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeeFromOrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeeTotalFromOrganizationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeductionStartFromOrganization {
            get {
                return this.DeductionStartFromOrganizationField;
            }
            set {
                if ((this.DeductionStartFromOrganizationField.Equals(value) != true)) {
                    this.DeductionStartFromOrganizationField = value;
                    this.RaisePropertyChanged("DeductionStartFromOrganization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinRest {
            get {
                return this.MinRestField;
            }
            set {
                if ((this.MinRestField.Equals(value) != true)) {
                    this.MinRestField = value;
                    this.RaisePropertyChanged("MinRest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodFromOrganization {
            get {
                return this.PeriodFromOrganizationField;
            }
            set {
                if ((this.PeriodFromOrganizationField.Equals(value) != true)) {
                    this.PeriodFromOrganizationField = value;
                    this.RaisePropertyChanged("PeriodFromOrganization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReNewFeeFromOrganization {
            get {
                return this.ReNewFeeFromOrganizationField;
            }
            set {
                if ((this.ReNewFeeFromOrganizationField.Equals(value) != true)) {
                    this.ReNewFeeFromOrganizationField = value;
                    this.RaisePropertyChanged("ReNewFeeFromOrganization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReplaceFee {
            get {
                return this.ReplaceFeeField;
            }
            set {
                if ((this.ReplaceFeeField.Equals(value) != true)) {
                    this.ReplaceFeeField = value;
                    this.RaisePropertyChanged("ReplaceFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReplaceFeeFromOrganization {
            get {
                return this.ReplaceFeeFromOrganizationField;
            }
            set {
                if ((this.ReplaceFeeFromOrganizationField.Equals(value) != true)) {
                    this.ReplaceFeeFromOrganizationField = value;
                    this.RaisePropertyChanged("ReplaceFeeFromOrganization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFeeFromOrganization {
            get {
                return this.ServiceFeeFromOrganizationField;
            }
            set {
                if ((this.ServiceFeeFromOrganizationField.Equals(value) != true)) {
                    this.ServiceFeeFromOrganizationField = value;
                    this.RaisePropertyChanged("ServiceFeeFromOrganization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFeeTotalFromOrganization {
            get {
                return this.ServiceFeeTotalFromOrganizationField;
            }
            set {
                if ((this.ServiceFeeTotalFromOrganizationField.Equals(value) != true)) {
                    this.ServiceFeeTotalFromOrganizationField = value;
                    this.RaisePropertyChanged("ServiceFeeTotalFromOrganization");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfintstring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfintstring : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int keyField;
        
        private string valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfstringdateTime", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfstringdateTime : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string keyField;
        
        private System.DateTime valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shop", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Shop : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdentityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShopIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShopLegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShopNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdentityID {
            get {
                return this.IdentityIDField;
            }
            set {
                if ((this.IdentityIDField.Equals(value) != true)) {
                    this.IdentityIDField = value;
                    this.RaisePropertyChanged("IdentityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShopID {
            get {
                return this.ShopIDField;
            }
            set {
                if ((this.ShopIDField.Equals(value) != true)) {
                    this.ShopIDField = value;
                    this.RaisePropertyChanged("ShopID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShopLegalName {
            get {
                return this.ShopLegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopLegalNameField, value) != true)) {
                    this.ShopLegalNameField = value;
                    this.RaisePropertyChanged("ShopLegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShopName {
            get {
                return this.ShopNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopNameField, value) != true)) {
                    this.ShopNameField = value;
                    this.RaisePropertyChanged("ShopName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOflongstring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOflongstring : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long keyField;
        
        private string valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunalTypes", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum CommunalTypes : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENA = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gas = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmWater = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YerWater = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmenTel = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VivaCell = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UCom = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Orange = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trash = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COWater = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BeelineInternet = 17,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfintint", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfintint : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int keyField;
        
        private int valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfintintstringboolean", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfintintstringboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_Item1Field;
        
        private int m_Item2Field;
        
        private string m_Item3Field;
        
        private bool m_Item4Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((this.m_Item1Field.Equals(value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((this.m_Item2Field.Equals(value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Item3 {
            get {
                return this.m_Item3Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item3Field, value) != true)) {
                    this.m_Item3Field = value;
                    this.RaisePropertyChanged("m_Item3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool m_Item4 {
            get {
                return this.m_Item4Field;
            }
            set {
                if ((this.m_Item4Field.Equals(value) != true)) {
                    this.m_Item4Field = value;
                    this.RaisePropertyChanged("m_Item4");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionPermission", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ActionPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte OrderSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.XBSInfo.OrderType OrderTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte OrderSubType {
            get {
                return this.OrderSubTypeField;
            }
            set {
                if ((this.OrderSubTypeField.Equals(value) != true)) {
                    this.OrderSubTypeField = value;
                    this.RaisePropertyChanged("OrderSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.XBSInfo.OrderType OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum OrderType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotDefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RATransfer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Convertation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternationalTransfer = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositTermination = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanMature = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RosterTransfer = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentAccountOpen = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverdraftRepayment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deposit = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicTransfer = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicTransferStop = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentAccountReOpen = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditSecureDeposit = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLineSecureDeposit = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunalPayment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeDeposit = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThirdPersonDeposit = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelTransaction = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveTransaction = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReferenceOrder = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLineMature = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChequeBookOrder = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashOrder = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatmentByEmailOrder = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SwiftCopyOrder = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerDataOrder = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JointCurrentAccountOpen = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentAccountClose = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardClosing = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountDataChange = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDebit = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashCredit = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashConvertation = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDebitConvertation = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashCreditConvertation = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashForRATransfer = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountServicePayment = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServicePayment = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashCommunalPayment = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountServicePaymentXnd = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServicePaymentXnd = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitPaymentOrder = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInternationalTransfer = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InBankConvertation = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountFreeze = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUnfreeze = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashPosPayment = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBActivation = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardUnpayedPercentPayment = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FeeForServiceProvided = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashFeeForServiceProvided = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanActivation = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLineActivation = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChequeBookReceiveOrder = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FastTransferPaymentOrder = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialOrder = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardCreditLineRepayment = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedFastTransferPaymentOrder = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardReRelease = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashTransitCurrencyExchangeOrder = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitCashOutCurrencyExchangeOrder = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitNonCashOutCurrencyExchangeOrder = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardServiceFeePayment = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitCashOut = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitNonCashOut = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InterBankTransferCash = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServicePaymentNote = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteServicePaymentNote = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationOrder = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InterBankTransferNonCash = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationActivationOrder = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationActivationRemovalOrder = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationTerminationOrder = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationOverwriteOrder = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReestrTransferOrder = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferCallContractOrder = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferCallContractTerminationOrder = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseOrder = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseActivationOrder = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseDeleteOrder = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseTermiationOrder = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FastTransferFromCustomerAccount = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardRegistrationOrder = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCasePenaltyMatureOrder = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDepositCasePenaltyMatureOrder = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferToShopOrder = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsuranceOrder = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInsuranceOrder = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuaranteeActivation = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccreditiveActivation = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FactoringActivation = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardDataChangeOrder = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardServiceFeeGrafikDataChangeOrder = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferConfirmOrder = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardServiceFeeGrafikRemovableOrder = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationOrder = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReestrCommunalPayment = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReestrCashCommunalPayment = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationRestoreOrder = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationTerminationOrder = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardServiceFeePaymentFromProblematicLoanTransitAccount = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReestrPaymentOrder = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferDeleteOrder = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountAdditionalDataRemovableOrder = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RenewedCardAccountRegOrder = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBankingContractOrder = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBankingContractEditOrder = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBankingContractClosingOrder = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationUpdateOrder = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestTokenUnBlockOrder = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestTokenActivationOrder = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestTokenDeactivationOrder = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashOutFromTransitAccountsOrder = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferApproveOrder = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardStatusChangeOrder = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplacedCardAccountRegOrder = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialTerminationOrder = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialDeleteOrder = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidGuaranteeActivation = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FactoringTermination = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuaranteeTermination = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficit = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookInOut = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficitApprove = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookInOutApprove = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookReject = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositDataChangeOrder = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficitClosing = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficitClosingApprove = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestUserDeactivationOrder = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferByCallChangeOrder = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidFactoringActivation = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInByOtherCashTerminal = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanMatureByOtherCashTerminal = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashConvertationByOtherCashTerminal = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccreditiveTerminationOrder = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBRegistrationCodeResendOrder = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestShowPINCodeOrder = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FastOverdraftApplication = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanApplicationAnalysis = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanApplicationConfirmation = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelLoanApplication = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteLoanApplication = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBActivationRejection = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseStoppingPenaltyCalculationOrder = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBankingContractActivation = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookDelete = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialActivationOrder = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialActivationOrderCash = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssigneeIdentificationOrder = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanProductClassificationRemoveOrder = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanProductMakeOutOrder = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDepositRateChangeOrder = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardMRRegistrationOrder = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductNotificationConfigurationsOrder = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardMRServiceFeeChargingOrder = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardMRReNewOrder = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardMRCancelOrder = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductNotificationConfigurationsUpdateOrder = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductNotificationConfigurationsDeleteOrder = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardUSSDServiceOrder = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBRequestResetHBUserPasswordManually = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionSwiftConfirmOrder = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonCashTransitPaymentOrder = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonCashTransitCurrencyExchangeOrder = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BondRegistrationOrder = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SWIFTMessageRejectOrder = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Card3DSecureOrder = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BondQualityUpdateOrder = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddFondOrder = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositaryAccountOrder = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeFondOrder = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BondAmountChargeOrder = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanMatureByOtherCashTerminalNotByGraphikByNonCash = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanMatureByOtherCashTerminalNotByGraphikByCash = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanProductMakeOutBalanceOrder = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemittanceCancellationOrder = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLineProlongationOrder = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficitPartiallyClosing = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicTransferDataChangeOrder = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemittanceAmendmentOrder = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanProductDataChangeOrder = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeFTPRateOrder = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArcaCardsTransactionOrder = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardLimitChangeOrder = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCommitmentForgiveness = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardToCardOrder = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlasticCardOrder = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachedPlasticCardOrder = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkedPlasticCardOrder = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentToArcaOrder = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlasticCardRemovalOrder = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSTerminalCashInOrder = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSTerminalCashOutOrder = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherInsuranceOrder = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardAccountRemovalOrder = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InterestMarginOrder = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationFullPermissionsGrantingOrder = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlasticCardSMSServiceOrder = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VirtualCardStatusChangeOrder = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PINRegenerationOrder = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonCreditLineCardReplaceOrder = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLineCardReplaceOrder = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardToOtherCardsOrder = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanDelayOrder = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelLoanDelayOrder = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeBranch = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardAdditionalDataOrder = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardNotRenewOrder = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardAccountClosingOrder = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachedCardToCardOrder = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanInterestRateConcessionOrder = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionPaymentOrder = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardLessCashOrder = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SberBankTransferOrder = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreferredAccountActivationOrder = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreferredAccountDeactivationOrder = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkPaymentOrder = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardRenewOrder = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardReOpenOrder = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillSplit = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillSplitSenderRejection = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillSplitReminder = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteLoanOrder = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountRemove = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VisaAlias = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThirdPersonAccountRightsTransfer = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeasingPaymentOrder = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MRDataChangeOrder = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkTransferPaymentConfirmation = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumeLoanApplicationOrder = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositaryAccountOpeningOrder = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardlessCashoutCancellationOrder = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumeLoanSettlementOrder = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VehicleInsuranceOrder = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcbamatOrder = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecuritiesBuyOrder = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecuritiesSellOrder = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BrokerContractOrder = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecuritiesMarketTradingOrder = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecuritiesTradingOrderCancellationOrder = 265,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewPosTerminalInsertOrder = 268,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfunsignedShortstring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfunsignedShortstring : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ushort keyField;
        
        private string valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaterCoDetail", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class WaterCoDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="XBSInfo.IXBInfoService")]
    public interface IXBInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBannerVersion", ReplyAction="http://tempuri.org/IXBInfoService/GetBannerVersionResponse")]
        int GetBannerVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBannerVersion", ReplyAction="http://tempuri.org/IXBInfoService/GetBannerVersionResponse")]
        System.Threading.Tasks.Task<int> GetBannerVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSecuritiesTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSecuritiesTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetSecuritiesTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSecuritiesTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSecuritiesTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetSecuritiesTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTradingOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTradingOrderTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetTradingOrderTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTradingOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTradingOrderTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetTradingOrderTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GenerateBrokerContractNumber", ReplyAction="http://tempuri.org/IXBInfoService/GenerateBrokerContractNumberResponse")]
        string GenerateBrokerContractNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GenerateBrokerContractNumber", ReplyAction="http://tempuri.org/IXBInfoService/GenerateBrokerContractNumberResponse")]
        System.Threading.Tasks.Task<string> GenerateBrokerContractNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBrokerContractSurvey", ReplyAction="http://tempuri.org/IXBInfoService/GetBrokerContractSurveyResponse")]
        FrontOffice.XBSInfo.BrokerContractSurvey GetBrokerContractSurvey();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBrokerContractSurvey", ReplyAction="http://tempuri.org/IXBInfoService/GetBrokerContractSurveyResponse")]
        System.Threading.Tasks.Task<FrontOffice.XBSInfo.BrokerContractSurvey> GetBrokerContractSurveyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/HasBrokerContract", ReplyAction="http://tempuri.org/IXBInfoService/HasBrokerContractResponse")]
        bool HasBrokerContract();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/HasBrokerContract", ReplyAction="http://tempuri.org/IXBInfoService/HasBrokerContractResponse")]
        System.Threading.Tasks.Task<bool> HasBrokerContractAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTradingOrderExpirationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTradingOrderExpirationTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetTradingOrderExpirationTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTradingOrderExpirationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTradingOrderExpirationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetTradingOrderExpirationTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLinkedCardWarnings", ReplyAction="http://tempuri.org/IXBInfoService/GetLinkedCardWarningsResponse")]
        System.Collections.Generic.List<string> GetLinkedCardWarnings(string cardNumber, bool renewWithCardNewType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLinkedCardWarnings", ReplyAction="http://tempuri.org/IXBInfoService/GetLinkedCardWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLinkedCardWarningsAsync(string cardNumber, bool renewWithCardNewType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLeasingReportTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLeasingReportTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLeasingReportTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLeasingReportTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLeasingReportTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLeasingReportTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLeasingCredentialClosingReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetLeasingCredentialClosingReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLeasingCredentialClosingReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLeasingCredentialClosingReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetLeasingCredentialClosingReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLeasingCredentialClosingReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrenciesForReceivedFastTransfer", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrenciesForReceivedFastTransferResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCurrenciesForReceivedFastTransfer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrenciesForReceivedFastTransfer", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrenciesForReceivedFastTransferResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCurrenciesForReceivedFastTransferAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCreditLineTypesForOnlineMobile", ReplyAction="http://tempuri.org/IXBInfoService/GetCreditLineTypesForOnlineMobileResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCreditLineTypesForOnlineMobile(FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCreditLineTypesForOnlineMobile", ReplyAction="http://tempuri.org/IXBInfoService/GetCreditLineTypesForOnlineMobileResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCreditLineTypesForOnlineMobileAsync(FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTemplateDocumentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTemplateDocumentTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTemplateDocumentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTemplateDocumentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTemplateDocumentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTemplateDocumentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAttachedCardTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAttachedCardTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAttachedCardTypes(string mainCardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAttachedCardTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAttachedCardTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAttachedCardTypesAsync(string mainCardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardOfficeTypesForIBanking", ReplyAction="http://tempuri.org/IXBInfoService/GetCardOfficeTypesForIBankingResponse")]
        int GetCardOfficeTypesForIBanking(ushort cardType, short periodicityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardOfficeTypesForIBanking", ReplyAction="http://tempuri.org/IXBInfoService/GetCardOfficeTypesForIBankingResponse")]
        System.Threading.Tasks.Task<int> GetCardOfficeTypesForIBankingAsync(ushort cardType, short periodicityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardTariffsByCardType", ReplyAction="http://tempuri.org/IXBInfoService/GetCardTariffsByCardTypeResponse")]
        FrontOffice.XBSInfo.CardTariffContract GetCardTariffsByCardType(ushort cardType, short periodicityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardTariffsByCardType", ReplyAction="http://tempuri.org/IXBInfoService/GetCardTariffsByCardTypeResponse")]
        System.Threading.Tasks.Task<FrontOffice.XBSInfo.CardTariffContract> GetCardTariffsByCardTypeAsync(ushort cardType, short periodicityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardServiceFee", ReplyAction="http://tempuri.org/IXBInfoService/GetCardServiceFeeResponse")]
        double GetCardServiceFee(int cardType, int officeId, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardServiceFee", ReplyAction="http://tempuri.org/IXBInfoService/GetCardServiceFeeResponse")]
        System.Threading.Tasks.Task<double> GetCardServiceFeeAsync(int cardType, int officeId, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountClosingReasonsHB", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountClosingReasonsHBResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAccountClosingReasonsHB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountClosingReasonsHB", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountClosingReasonsHBResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountClosingReasonsHBAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetUtilityAbonentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetUtilityAbonentTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedBytestring> GetUtilityAbonentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetUtilityAbonentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetUtilityAbonentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedBytestring>> GetUtilityAbonentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetUtilityPaymentTypesOnlineBanking", ReplyAction="http://tempuri.org/IXBInfoService/GetUtilityPaymentTypesOnlineBankingResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetUtilityPaymentTypesOnlineBanking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetUtilityPaymentTypesOnlineBanking", ReplyAction="http://tempuri.org/IXBInfoService/GetUtilityPaymentTypesOnlineBankingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetUtilityPaymentTypesOnlineBankingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPayIfNoDebtTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPayIfNoDebtTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetPayIfNoDebtTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPayIfNoDebtTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPayIfNoDebtTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetPayIfNoDebtTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetServiceFeePeriodocityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetServiceFeePeriodocityTypesResponse")]
        System.Collections.Generic.Dictionary<int, string> GetServiceFeePeriodocityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetServiceFeePeriodocityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetServiceFeePeriodocityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetServiceFeePeriodocityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/InitOnline", ReplyAction="http://tempuri.org/IXBInfoService/InitOnlineResponse")]
        void InitOnline(string clientIp, byte language, FrontOffice.XBSInfo.SourceType sourceType, FrontOffice.XBSInfo.AuthorizedCustomer authorizedCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/InitOnline", ReplyAction="http://tempuri.org/IXBInfoService/InitOnlineResponse")]
        System.Threading.Tasks.Task InitOnlineAsync(string clientIp, byte language, FrontOffice.XBSInfo.SourceType sourceType, FrontOffice.XBSInfo.AuthorizedCustomer authorizedCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrenciesPlasticCardOrder", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrenciesPlasticCardOrderResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCurrenciesPlasticCardOrder(ushort cardType, short periodicityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrenciesPlasticCardOrder", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrenciesPlasticCardOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCurrenciesPlasticCardOrderAsync(ushort cardType, short periodicityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLinkedCardTariffsByCardType", ReplyAction="http://tempuri.org/IXBInfoService/GetLinkedCardTariffsByCardTypeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLinkedCardTariffsByCardType(ushort cardType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLinkedCardTariffsByCardType", ReplyAction="http://tempuri.org/IXBInfoService/GetLinkedCardTariffsByCardTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLinkedCardTariffsByCardTypeAsync(ushort cardType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAttachedCardTariffs", ReplyAction="http://tempuri.org/IXBInfoService/GetAttachedCardTariffsResponse")]
        FrontOffice.XBSInfo.CardTariff GetAttachedCardTariffs(string mainCardNumber, uint cardType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAttachedCardTariffs", ReplyAction="http://tempuri.org/IXBInfoService/GetAttachedCardTariffsResponse")]
        System.Threading.Tasks.Task<FrontOffice.XBSInfo.CardTariff> GetAttachedCardTariffsAsync(string mainCardNumber, uint cardType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMatureTypesForIBanking", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMatureTypesForIBankingResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanMatureTypesForIBanking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMatureTypesForIBanking", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMatureTypesForIBankingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMatureTypesForIBankingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPlasticCardSmsServiceActions", ReplyAction="http://tempuri.org/IXBInfoService/GetPlasticCardSmsServiceActionsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPlasticCardSmsServiceActions(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPlasticCardSmsServiceActions", ReplyAction="http://tempuri.org/IXBInfoService/GetPlasticCardSmsServiceActionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPlasticCardSmsServiceActionsAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfPlasticCardsSMS", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfPlasticCardsSMSResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeOfPlasticCardsSMS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfPlasticCardsSMS", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfPlasticCardsSMSResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfPlasticCardsSMSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDetailsOfCharges", ReplyAction="http://tempuri.org/IXBInfoService/GetDetailsOfChargesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfstringstring> GetDetailsOfCharges();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDetailsOfCharges", ReplyAction="http://tempuri.org/IXBInfoService/GetDetailsOfChargesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfstringstring>> GetDetailsOfChargesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFilialName", ReplyAction="http://tempuri.org/IXBInfoService/GetFilialNameResponse")]
        string GetFilialName(int filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFilialName", ReplyAction="http://tempuri.org/IXBInfoService/GetFilialNameResponse")]
        System.Threading.Tasks.Task<string> GetFilialNameAsync(int filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDigitalOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetDigitalOrderTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDigitalOrderTypes(FrontOffice.XBSInfo.TypeOfHbProductTypes hbProductType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDigitalOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetDigitalOrderTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDigitalOrderTypesAsync(FrontOffice.XBSInfo.TypeOfHbProductTypes hbProductType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderableCardSystemTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderableCardSystemTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetOrderableCardSystemTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderableCardSystemTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderableCardSystemTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderableCardSystemTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerAddressEng", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerAddressEngResponse")]
        string GetCustomerAddressEng(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerAddressEng", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerAddressEngResponse")]
        System.Threading.Tasks.Task<string> GetCustomerAddressEngAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardRemovalReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCardRemovalReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardRemovalReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardRemovalReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCardRemovalReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardRemovalReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceContractTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceContractTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetInsuranceContractTypes(bool isLoanProduct, bool isSeparatelyProduct, bool isProvision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceContractTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceContractTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceContractTypesAsync(bool isLoanProduct, bool isSeparatelyProduct, bool isProvision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceTypesByContractType", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceTypesByContractTypeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetInsuranceTypesByContractType(int insuranceContractType, bool isLoanProduct, bool isSeparatelyProduct, bool isProvision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceTypesByContractType", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceTypesByContractTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceTypesByContractTypeAsync(int insuranceContractType, bool isLoanProduct, bool isSeparatelyProduct, bool isProvision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBSourceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBSourceTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetHBSourceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBSourceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBSourceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBSourceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBRejectTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBRejectTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetHBRejectTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBRejectTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBRejectTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBRejectTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBQualityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetHBQualityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBQualityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBQualityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBDocumentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBDocumentTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetHBDocumentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBDocumentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBDocumentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBDocumentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBDocumentSubtypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBDocumentSubtypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetHBDocumentSubtypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBDocumentSubtypes", ReplyAction="http://tempuri.org/IXBInfoService/GetHBDocumentSubtypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBDocumentSubtypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCallTransferRejectionReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCallTransferRejectionReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCallTransferRejectionReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCallTransferRejectionReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCallTransferRejectionReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCallTransferRejectionReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardReceivingTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardReceivingTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardReceivingTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardReceivingTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardReceivingTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardReceivingTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountRestTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountRestTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAccountRestTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountRestTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountRestTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountRestTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferReceiverTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferReceiverTypesResponse")]
        System.Collections.Generic.Dictionary<byte, string> GetTransferReceiverTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferReceiverTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferReceiverTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<byte, string>> GetTransferReceiverTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardApplicationAcceptanceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardApplicationAcceptanceTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardApplicationAcceptanceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardApplicationAcceptanceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardApplicationAcceptanceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardApplicationAcceptanceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetVirtualCardStatusChangeReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetVirtualCardStatusChangeReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetVirtualCardStatusChangeReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetVirtualCardStatusChangeReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetVirtualCardStatusChangeReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetVirtualCardStatusChangeReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/CommunicationTypeExistence", ReplyAction="http://tempuri.org/IXBInfoService/CommunicationTypeExistenceResponse")]
        byte CommunicationTypeExistence(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/CommunicationTypeExistence", ReplyAction="http://tempuri.org/IXBInfoService/CommunicationTypeExistenceResponse")]
        System.Threading.Tasks.Task<byte> CommunicationTypeExistenceAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetVirtualCardChangeActions", ReplyAction="http://tempuri.org/IXBInfoService/GetVirtualCardChangeActionsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetVirtualCardChangeActions(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetVirtualCardChangeActions", ReplyAction="http://tempuri.org/IXBInfoService/GetVirtualCardChangeActionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetVirtualCardChangeActionsAsync(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReasonsForCardTransactionAction", ReplyAction="http://tempuri.org/IXBInfoService/GetReasonsForCardTransactionActionResponse")]
        System.Collections.Generic.Dictionary<string, string> GetReasonsForCardTransactionAction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReasonsForCardTransactionAction", ReplyAction="http://tempuri.org/IXBInfoService/GetReasonsForCardTransactionActionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReasonsForCardTransactionActionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllReasonsForCardTransactionAction", ReplyAction="http://tempuri.org/IXBInfoService/GetAllReasonsForCardTransactionActionResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAllReasonsForCardTransactionAction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllReasonsForCardTransactionAction", ReplyAction="http://tempuri.org/IXBInfoService/GetAllReasonsForCardTransactionActionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllReasonsForCardTransactionActionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrencyLetter", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrencyLetterResponse")]
        string GetCurrencyLetter(string currency, byte operationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrencyLetter", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrencyLetterResponse")]
        System.Threading.Tasks.Task<string> GetCurrencyLetterAsync(string currency, byte operationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSSexes", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSSexesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSSexes(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSSexes", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSSexesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSSexesAsync(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSYesNo", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSYesNoResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSYesNo(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSYesNo", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSYesNoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSYesNoAsync(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/InitForARUS", ReplyAction="http://tempuri.org/IXBInfoService/InitForARUSResponse")]
        void InitForARUS(string clientIp, byte language, FrontOffice.XBSInfo.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/InitForARUS", ReplyAction="http://tempuri.org/IXBInfoService/InitForARUSResponse")]
        System.Threading.Tasks.Task InitForARUSAsync(string clientIp, byte language, FrontOffice.XBSInfo.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSDocumentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSDocumentTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSDocumentTypes(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSDocumentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSDocumentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSDocumentTypesAsync(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSCountriesByMTO", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSCountriesByMTOResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSCountriesByMTO(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSCountriesByMTO", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSCountriesByMTOResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSCountriesByMTOAsync(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSSendingCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSSendingCurrenciesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSSendingCurrencies(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSSendingCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSSendingCurrenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSSendingCurrenciesAsync(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSCitiesByCountry", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSCitiesByCountryResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSCitiesByCountry(string authorizedUserSessionToken, string MTOAgentCode, string countryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSCitiesByCountry", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSCitiesByCountryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSCitiesByCountryAsync(string authorizedUserSessionToken, string MTOAgentCode, string countryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSStates", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSStatesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSStates(string authorizedUserSessionToken, string MTOAgentCode, string countryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSStates", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSStatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSStatesAsync(string authorizedUserSessionToken, string MTOAgentCode, string countryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSCitiesByState", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSCitiesByStateResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSCitiesByState(string authorizedUserSessionToken, string MTOAgentCode, string countryCode, string stateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSCitiesByState", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSCitiesByStateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSCitiesByStateAsync(string authorizedUserSessionToken, string MTOAgentCode, string countryCode, string stateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSMTOList", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSMTOListResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSMTOList(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSMTOList", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSMTOListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSMTOListAsync(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCountriesWithA3", ReplyAction="http://tempuri.org/IXBInfoService/GetCountriesWithA3Response")]
        System.Collections.Generic.Dictionary<string, string> GetCountriesWithA3();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCountriesWithA3", ReplyAction="http://tempuri.org/IXBInfoService/GetCountriesWithA3Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCountriesWithA3Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSDocumentTypeCode", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSDocumentTypeCodeResponse")]
        string GetARUSDocumentTypeCode(int ACBADocumentTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSDocumentTypeCode", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSDocumentTypeCodeResponse")]
        System.Threading.Tasks.Task<string> GetARUSDocumentTypeCodeAsync(int ACBADocumentTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSCancellationReversalCodes", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSCancellationReversalCodesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSCancellationReversalCodes(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSCancellationReversalCodes", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSCancellationReversalCodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSCancellationReversalCodesAsync(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSPayoutDeliveryCodes", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSPayoutDeliveryCodesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSPayoutDeliveryCodes(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSPayoutDeliveryCodes", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSPayoutDeliveryCodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSPayoutDeliveryCodesAsync(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetRemittancePurposes", ReplyAction="http://tempuri.org/IXBInfoService/GetRemittancePurposesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetRemittancePurposes(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetRemittancePurposes", ReplyAction="http://tempuri.org/IXBInfoService/GetRemittancePurposesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetRemittancePurposesAsync(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetMTOAgencies", ReplyAction="http://tempuri.org/IXBInfoService/GetMTOAgenciesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetMTOAgencies(string authorizedUserSessionToken, string MTOAgentCode, string countryCode, string cityCode, string currencyCode, string stateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetMTOAgencies", ReplyAction="http://tempuri.org/IXBInfoService/GetMTOAgenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetMTOAgenciesAsync(string authorizedUserSessionToken, string MTOAgentCode, string countryCode, string cityCode, string currencyCode, string stateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSAmendmentReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSAmendmentReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetARUSAmendmentReasons(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetARUSAmendmentReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetARUSAmendmentReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSAmendmentReasonsAsync(string authorizedUserSessionToken, string MTOAgentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetMandatoryEntryInfo", ReplyAction="http://tempuri.org/IXBInfoService/GetMandatoryEntryInfoResponse")]
        string GetMandatoryEntryInfo(byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetMandatoryEntryInfo", ReplyAction="http://tempuri.org/IXBInfoService/GetMandatoryEntryInfoResponse")]
        System.Threading.Tasks.Task<string> GetMandatoryEntryInfoAsync(byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReferenceReceiptTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetReferenceReceiptTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetReferenceReceiptTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReferenceReceiptTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetReferenceReceiptTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReferenceReceiptTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerAllPassports", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerAllPassportsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCustomerAllPassports(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerAllPassports", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerAllPassportsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCustomerAllPassportsAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerAllPhones", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerAllPhonesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCustomerAllPhones(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerAllPhones", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerAllPhonesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCustomerAllPhonesAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSTAKPayoutDeliveryCodesByBenificiaryAgentCod" +
            "e", ReplyAction="http://tempuri.org/IXBInfoService/GetSTAKPayoutDeliveryCodesByBenificiaryAgentCod" +
            "eResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSTAKPayoutDeliveryCodesByBenificiaryAgentCode(string authorizedUserSessionToken, string MTOAgentCode, string parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSTAKPayoutDeliveryCodesByBenificiaryAgentCod" +
            "e", ReplyAction="http://tempuri.org/IXBInfoService/GetSTAKPayoutDeliveryCodesByBenificiaryAgentCod" +
            "eResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSTAKPayoutDeliveryCodesByBenificiaryAgentCodeAsync(string authorizedUserSessionToken, string MTOAgentCode, string parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardAdditionalDataTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardAdditionalDataTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardAdditionalDataTypes(string cardNumber, string expiryDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardAdditionalDataTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardAdditionalDataTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardAdditionalDataTypesAsync(string cardNumber, string expiryDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSentCityBySwiftCode", ReplyAction="http://tempuri.org/IXBInfoService/GetSentCityBySwiftCodeResponse")]
        string GetSentCityBySwiftCode(string swiftCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSentCityBySwiftCode", ReplyAction="http://tempuri.org/IXBInfoService/GetSentCityBySwiftCodeResponse")]
        System.Threading.Tasks.Task<string> GetSentCityBySwiftCodeAsync(string swiftCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardNotRenewReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCardNotRenewReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardNotRenewReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardNotRenewReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCardNotRenewReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardNotRenewReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReasonsForCardTransactionActionForUnblocking" +
            "", ReplyAction="http://tempuri.org/IXBInfoService/GetReasonsForCardTransactionActionForUnblocking" +
            "Response")]
        System.Collections.Generic.Dictionary<string, string> GetReasonsForCardTransactionActionForUnblocking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReasonsForCardTransactionActionForUnblocking" +
            "", ReplyAction="http://tempuri.org/IXBInfoService/GetReasonsForCardTransactionActionForUnblocking" +
            "Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReasonsForCardTransactionActionForUnblockingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllTypesOfPlasticCardsSMS", ReplyAction="http://tempuri.org/IXBInfoService/GetAllTypesOfPlasticCardsSMSResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAllTypesOfPlasticCardsSMS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllTypesOfPlasticCardsSMS", ReplyAction="http://tempuri.org/IXBInfoService/GetAllTypesOfPlasticCardsSMSResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllTypesOfPlasticCardsSMSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardMobilePhones", ReplyAction="http://tempuri.org/IXBInfoService/GetCardMobilePhonesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.TupleOfstringboolean> GetCardMobilePhones(ulong customerNumber, ulong cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardMobilePhones", ReplyAction="http://tempuri.org/IXBInfoService/GetCardMobilePhonesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.TupleOfstringboolean>> GetCardMobilePhonesAsync(ulong customerNumber, ulong cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrentPhone", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrentPhoneResponse")]
        string GetCurrentPhone(ulong cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrentPhone", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrentPhoneResponse")]
        System.Threading.Tasks.Task<string> GetCurrentPhoneAsync(ulong cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerEmailByCardNumber", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerEmailByCardNumberResponse")]
        string GetCustomerEmailByCardNumber(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerEmailByCardNumber", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerEmailByCardNumberResponse")]
        System.Threading.Tasks.Task<string> GetCustomerEmailByCardNumberAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/SMSTypeAndValue", ReplyAction="http://tempuri.org/IXBInfoService/SMSTypeAndValueResponse")]
        string SMSTypeAndValue(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/SMSTypeAndValue", ReplyAction="http://tempuri.org/IXBInfoService/SMSTypeAndValueResponse")]
        System.Threading.Tasks.Task<string> SMSTypeAndValueAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfLoanDelete", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfLoanDeleteResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeOfLoanDelete();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfLoanDelete", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfLoanDeleteResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfLoanDeleteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/IsCardOpen", ReplyAction="http://tempuri.org/IXBInfoService/IsCardOpenResponse")]
        bool IsCardOpen(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/IsCardOpen", ReplyAction="http://tempuri.org/IXBInfoService/IsCardOpenResponse")]
        System.Threading.Tasks.Task<bool> IsCardOpenAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetJointDepositAvailableCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetJointDepositAvailableCurrenciesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetJointDepositAvailableCurrencies(ulong customerNumber, ulong thirdPersonCustomerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetJointDepositAvailableCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetJointDepositAvailableCurrenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetJointDepositAvailableCurrenciesAsync(ulong customerNumber, ulong thirdPersonCustomerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCommissionNonCollectionReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCommissionNonCollectionReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCommissionNonCollectionReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCommissionNonCollectionReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCommissionNonCollectionReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommissionNonCollectionReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerTypeAndResidence", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerTypeAndResidenceResponse")]
        FrontOffice.XBSInfo.TupleOfbooleanboolean GetCustomerTypeAndResidence(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerTypeAndResidence", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerTypeAndResidenceResponse")]
        System.Threading.Tasks.Task<FrontOffice.XBSInfo.TupleOfbooleanboolean> GetCustomerTypeAndResidenceAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositoryAccountOperators", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositoryAccountOperatorsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDepositoryAccountOperators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositoryAccountOperators", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositoryAccountOperatorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositoryAccountOperatorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransactionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransactionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransactionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransactionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransactionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransactionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransactionTypeByAML", ReplyAction="http://tempuri.org/IXBInfoService/GetTransactionTypeByAMLResponse")]
        FrontOffice.XBSInfo.TransactionTypeByAML GetTransactionTypeByAML(long doc_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransactionTypeByAML", ReplyAction="http://tempuri.org/IXBInfoService/GetTransactionTypeByAMLResponse")]
        System.Threading.Tasks.Task<FrontOffice.XBSInfo.TransactionTypeByAML> GetTransactionTypeByAMLAsync(long doc_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardDesignThemes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardDesignThemesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.CardDesign> GetCardDesignThemes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardDesignThemes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardDesignThemesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.CardDesign>> GetCardDesignThemesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardDesignImagesByThemeId", ReplyAction="http://tempuri.org/IXBInfoService/GetCardDesignImagesByThemeIdResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.CardDesign> GetCardDesignImagesByThemeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardDesignImagesByThemeId", ReplyAction="http://tempuri.org/IXBInfoService/GetCardDesignImagesByThemeIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.CardDesign>> GetCardDesignImagesByThemeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardDesignImageByDesignId", ReplyAction="http://tempuri.org/IXBInfoService/GetCardDesignImageByDesignIdResponse")]
        string GetCardDesignImageByDesignId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardDesignImageByDesignId", ReplyAction="http://tempuri.org/IXBInfoService/GetCardDesignImageByDesignIdResponse")]
        System.Threading.Tasks.Task<string> GetCardDesignImageByDesignIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetInsuranceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceCompanies", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceCompaniesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetInsuranceCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceCompanies", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceCompaniesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardDataChangeFieldTypeDescription", ReplyAction="http://tempuri.org/IXBInfoService/GetCardDataChangeFieldTypeDescriptionResponse")]
        string GetCardDataChangeFieldTypeDescription(ushort type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardDataChangeFieldTypeDescription", ReplyAction="http://tempuri.org/IXBInfoService/GetCardDataChangeFieldTypeDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetCardDataChangeFieldTypeDescriptionAsync(ushort type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardRelatedOfficeName", ReplyAction="http://tempuri.org/IXBInfoService/GetCardRelatedOfficeNameResponse")]
        string GetCardRelatedOfficeName(ushort relatedOfficeNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardRelatedOfficeName", ReplyAction="http://tempuri.org/IXBInfoService/GetCardRelatedOfficeNameResponse")]
        System.Threading.Tasks.Task<string> GetCardRelatedOfficeNameAsync(ushort relatedOfficeNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCOWaterBranchID", ReplyAction="http://tempuri.org/IXBInfoService/GetCOWaterBranchIDResponse")]
        string GetCOWaterBranchID(string branch, string abonentFilialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCOWaterBranchID", ReplyAction="http://tempuri.org/IXBInfoService/GetCOWaterBranchIDResponse")]
        System.Threading.Tasks.Task<string> GetCOWaterBranchIDAsync(string branch, string abonentFilialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReestrWaterCoBranches", ReplyAction="http://tempuri.org/IXBInfoService/GetReestrWaterCoBranchesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetReestrWaterCoBranches(ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReestrWaterCoBranches", ReplyAction="http://tempuri.org/IXBInfoService/GetReestrWaterCoBranchesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReestrWaterCoBranchesAsync(ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositClosingReasonTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositClosingReasonTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDepositClosingReasonTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositClosingReasonTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositClosingReasonTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositClosingReasonTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllDepositClosingReasonTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAllDepositClosingReasonTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAllDepositClosingReasonTypes(bool showinList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllDepositClosingReasonTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAllDepositClosingReasonTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllDepositClosingReasonTypesAsync(bool showinList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSubTypesOfTokens", ReplyAction="http://tempuri.org/IXBInfoService/GetSubTypesOfTokensResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSubTypesOfTokens();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSubTypesOfTokens", ReplyAction="http://tempuri.org/IXBInfoService/GetSubTypesOfTokensResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSubTypesOfTokensAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPrintReportTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPrintReportTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPrintReportTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPrintReportTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPrintReportTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPrintReportTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferRejectReasonTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferRejectReasonTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransferRejectReasonTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferRejectReasonTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferRejectReasonTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferRejectReasonTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferRequestStepTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferRequestStepTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransferRequestStepTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferRequestStepTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferRequestStepTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferRequestStepTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferRequestStatusTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferRequestStatusTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransferRequestStatusTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferRequestStatusTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferRequestStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferRequestStatusTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBusinesDepositOptions", ReplyAction="http://tempuri.org/IXBInfoService/GetBusinesDepositOptionsResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.DepositOption> GetBusinesDepositOptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBusinesDepositOptions", ReplyAction="http://tempuri.org/IXBInfoService/GetBusinesDepositOptionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.DepositOption>> GetBusinesDepositOptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferSessions", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferSessionsResponse")]
        System.Collections.Generic.Dictionary<int, string> GetTransferSessions(System.DateTime dateStart, System.DateTime dateEnd, short transferGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferSessions", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferSessionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetTransferSessionsAsync(System.DateTime dateStart, System.DateTime dateEnd, short transferGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetArmenianPlaces", ReplyAction="http://tempuri.org/IXBInfoService/GetArmenianPlacesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetArmenianPlaces(int region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetArmenianPlaces", ReplyAction="http://tempuri.org/IXBInfoService/GetArmenianPlacesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetArmenianPlacesAsync(int region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetRegions", ReplyAction="http://tempuri.org/IXBInfoService/GetRegionsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetRegions(int country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetRegions", ReplyAction="http://tempuri.org/IXBInfoService/GetRegionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetRegionsAsync(int country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfLoanRepaymentSource", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfLoanRepaymentSourceResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeOfLoanRepaymentSource();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfLoanRepaymentSource", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfLoanRepaymentSourceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfLoanRepaymentSourceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetActiveDepositTypesForNewDepositOrder", ReplyAction="http://tempuri.org/IXBInfoService/GetActiveDepositTypesForNewDepositOrderResponse" +
            "")]
        System.Collections.Generic.Dictionary<string, string> GetActiveDepositTypesForNewDepositOrder(int accountType, int customerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetActiveDepositTypesForNewDepositOrder", ReplyAction="http://tempuri.org/IXBInfoService/GetActiveDepositTypesForNewDepositOrderResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetActiveDepositTypesForNewDepositOrderAsync(int accountType, int customerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardTariffAdditionalInformation", ReplyAction="http://tempuri.org/IXBInfoService/GetCardTariffAdditionalInformationResponse")]
        FrontOffice.XBSInfo.CardTariffAdditionalInformation GetCardTariffAdditionalInformation(int officeID, int cardType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardTariffAdditionalInformation", ReplyAction="http://tempuri.org/IXBInfoService/GetCardTariffAdditionalInformationResponse")]
        System.Threading.Tasks.Task<FrontOffice.XBSInfo.CardTariffAdditionalInformation> GetCardTariffAdditionalInformationAsync(int officeID, int cardType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositDataChangeFieldTypeDescription", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositDataChangeFieldTypeDescriptionRespons" +
            "e")]
        string GetDepositDataChangeFieldTypeDescription(ushort type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositDataChangeFieldTypeDescription", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositDataChangeFieldTypeDescriptionRespons" +
            "e")]
        System.Threading.Tasks.Task<string> GetDepositDataChangeFieldTypeDescriptionAsync(ushort type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceCompaniesByInsuranceType", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceCompaniesByInsuranceTypeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetInsuranceCompaniesByInsuranceType(ushort insuranceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceCompaniesByInsuranceType", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceCompaniesByInsuranceTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceCompaniesByInsuranceTypeAsync(ushort insuranceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceTypesByProductType", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceTypesByProductTypeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetInsuranceTypesByProductType(bool isLoanProduct, bool isSeparatelyProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInsuranceTypesByProductType", ReplyAction="http://tempuri.org/IXBInfoService/GetInsuranceTypesByProductTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceTypesByProductTypeAsync(bool isLoanProduct, bool isSeparatelyProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMatureTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMatureTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanMatureTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMatureTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMatureTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMatureTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPhoneBankingContractQuestions", ReplyAction="http://tempuri.org/IXBInfoService/GetPhoneBankingContractQuestionsResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfintstring> GetPhoneBankingContractQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPhoneBankingContractQuestions", ReplyAction="http://tempuri.org/IXBInfoService/GetPhoneBankingContractQuestionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfintstring>> GetPhoneBankingContractQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCashBookRowTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCashBookRowTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCashBookRowTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCashBookRowTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCashBookRowTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCashBookRowTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetExternalPaymentTerm", ReplyAction="http://tempuri.org/IXBInfoService/GetExternalPaymentTermResponse")]
        string GetExternalPaymentTerm(short id, System.Collections.Generic.List<string> param, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetExternalPaymentTerm", ReplyAction="http://tempuri.org/IXBInfoService/GetExternalPaymentTermResponse")]
        System.Threading.Tasks.Task<string> GetExternalPaymentTermAsync(short id, System.Collections.Generic.List<string> param, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetExternalPaymentProductDetailCode", ReplyAction="http://tempuri.org/IXBInfoService/GetExternalPaymentProductDetailCodeResponse")]
        string GetExternalPaymentProductDetailCode(short id, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetExternalPaymentProductDetailCode", ReplyAction="http://tempuri.org/IXBInfoService/GetExternalPaymentProductDetailCodeResponse")]
        System.Threading.Tasks.Task<string> GetExternalPaymentProductDetailCodeAsync(short id, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetExternalPaymentStatusCode", ReplyAction="http://tempuri.org/IXBInfoService/GetExternalPaymentStatusCodeResponse")]
        string GetExternalPaymentStatusCode(short id, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetExternalPaymentStatusCode", ReplyAction="http://tempuri.org/IXBInfoService/GetExternalPaymentStatusCodeResponse")]
        System.Threading.Tasks.Task<string> GetExternalPaymentStatusCodeAsync(short id, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetListOfLoanApplicationAmounts", ReplyAction="http://tempuri.org/IXBInfoService/GetListOfLoanApplicationAmountsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetListOfLoanApplicationAmounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetListOfLoanApplicationAmounts", ReplyAction="http://tempuri.org/IXBInfoService/GetListOfLoanApplicationAmountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetListOfLoanApplicationAmountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFastOverdraftFeeAmount", ReplyAction="http://tempuri.org/IXBInfoService/GetFastOverdraftFeeAmountResponse")]
        double GetFastOverdraftFeeAmount(double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFastOverdraftFeeAmount", ReplyAction="http://tempuri.org/IXBInfoService/GetFastOverdraftFeeAmountResponse")]
        System.Threading.Tasks.Task<double> GetFastOverdraftFeeAmountAsync(double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringFactorGroupes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringFactorGroupesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringFactorGroupes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringFactorGroupes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringFactorGroupesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringFactorGroupesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringFactors", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringFactorsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringFactors(int loanType, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringFactors", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringFactorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringFactorsAsync(int loanType, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProfitReductionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProfitReductionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProfitReductionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProfitReductionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProfitReductionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProfitReductionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProvisionCostConclusionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProvisionCostConclusionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProvisionCostConclusionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProvisionCostConclusionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProvisionCostConclusionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProvisionCostConclusionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProvisionQualityConclusionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProvisionQualityConclusionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProvisionQualityConclusionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProvisionQualityConclusionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProvisionQualityConclusionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProvisionQualityConclusionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringConclusions", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringConclusionsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringConclusions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringConclusions", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringConclusionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringConclusionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringSubTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringSubTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringSubTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanMonitoringSubTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanMonitoringSubTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringSubTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDemandDepositsTariffGroups", ReplyAction="http://tempuri.org/IXBInfoService/GetDemandDepositsTariffGroupsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDemandDepositsTariffGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDemandDepositsTariffGroups", ReplyAction="http://tempuri.org/IXBInfoService/GetDemandDepositsTariffGroupsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDemandDepositsTariffGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountRestrictionGroups", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountRestrictionGroupsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAccountRestrictionGroups(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountRestrictionGroups", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountRestrictionGroupsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountRestrictionGroupsAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPenaltyRateOfLoans", ReplyAction="http://tempuri.org/IXBInfoService/GetPenaltyRateOfLoansResponse")]
        double GetPenaltyRateOfLoans(int productType, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPenaltyRateOfLoans", ReplyAction="http://tempuri.org/IXBInfoService/GetPenaltyRateOfLoansResponse")]
        System.Threading.Tasks.Task<double> GetPenaltyRateOfLoansAsync(int productType, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDemandDepositRateTariffDocument", ReplyAction="http://tempuri.org/IXBInfoService/GetDemandDepositRateTariffDocumentResponse")]
        System.Nullable<FrontOffice.XBSInfo.KeyValuePairOfstringdateTime> GetDemandDepositRateTariffDocument(byte documentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDemandDepositRateTariffDocument", ReplyAction="http://tempuri.org/IXBInfoService/GetDemandDepositRateTariffDocumentResponse")]
        System.Threading.Tasks.Task<System.Nullable<FrontOffice.XBSInfo.KeyValuePairOfstringdateTime>> GetDemandDepositRateTariffDocumentAsync(byte documentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderQualityTypesForAcbaOnline", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderQualityTypesForAcbaOnlineResponse")]
        System.Collections.Generic.Dictionary<string, string> GetOrderQualityTypesForAcbaOnline();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderQualityTypesForAcbaOnline", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderQualityTypesForAcbaOnlineResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderQualityTypesForAcbaOnlineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationInformationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationInformationTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProductNotificationInformationTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationInformationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationInformationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationInformationTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationFrequencyTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationFrequencyTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProductNotificationFrequencyTypes(byte informationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationFrequencyTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationFrequencyTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationFrequencyTypesAsync(byte informationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationOptionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationOptionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProductNotificationOptionTypes(byte informationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationOptionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationOptionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationOptionTypesAsync(byte informationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationLanguageTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationLanguageTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProductNotificationLanguageTypes(byte informationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationLanguageTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationLanguageTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationLanguageTypesAsync(byte informationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationFileFormatTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationFileFormatTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProductNotificationFileFormatTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProductNotificationFileFormatTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProductNotificationFileFormatTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationFileFormatTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftMessageTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftMessageTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSwiftMessageTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftMessageTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftMessageTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftMessageTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftMessageSystemTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftMessageSystemTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSwiftMessageSystemTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftMessageSystemTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftMessageSystemTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftMessageSystemTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftMessagMtCodes", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftMessagMtCodesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSwiftMessagMtCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftMessagMtCodes", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftMessagMtCodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftMessagMtCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftMessageAttachmentExistenceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftMessageAttachmentExistenceTypesResponse" +
            "")]
        System.Collections.Generic.Dictionary<string, string> GetSwiftMessageAttachmentExistenceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftMessageAttachmentExistenceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftMessageAttachmentExistenceTypesResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftMessageAttachmentExistenceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetArcaCardSMSServiceActionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetArcaCardSMSServiceActionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetArcaCardSMSServiceActionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetArcaCardSMSServiceActionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetArcaCardSMSServiceActionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetArcaCardSMSServiceActionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondIssueQuality", ReplyAction="http://tempuri.org/IXBInfoService/GetBondIssueQualityResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBondIssueQuality();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondIssueQuality", ReplyAction="http://tempuri.org/IXBInfoService/GetBondIssueQualityResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondIssueQualityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondIssuerTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBondIssuerTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBondIssuerTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondIssuerTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBondIssuerTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondIssuerTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondIssuePeriodTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBondIssuePeriodTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBondIssuePeriodTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondIssuePeriodTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBondIssuePeriodTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondIssuePeriodTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFastOverdrafEndDate", ReplyAction="http://tempuri.org/IXBInfoService/GetFastOverdrafEndDateResponse")]
        System.DateTime GetFastOverdrafEndDate(System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFastOverdrafEndDate", ReplyAction="http://tempuri.org/IXBInfoService/GetFastOverdrafEndDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetFastOverdrafEndDateAsync(System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetATSFilials", ReplyAction="http://tempuri.org/IXBInfoService/GetATSFilialsResponse")]
        System.Collections.Generic.List<int> GetATSFilials();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetATSFilials", ReplyAction="http://tempuri.org/IXBInfoService/GetATSFilialsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetATSFilialsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBanks", ReplyAction="http://tempuri.org/IXBInfoService/GetBanksResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBanks(FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBanks", ReplyAction="http://tempuri.org/IXBInfoService/GetBanksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBanksAsync(FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondRejectReasonTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBondRejectReasonTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBondRejectReasonTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondRejectReasonTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBondRejectReasonTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondRejectReasonTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBondQualityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBondQualityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBondQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBondQualityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondQualityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfPaymentDescriptions", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfPaymentDescriptionsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeOfPaymentDescriptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfPaymentDescriptions", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfPaymentDescriptionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfPaymentDescriptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeofPaymentReasonAboutOutTransfering", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeofPaymentReasonAboutOutTransferingRespon" +
            "se")]
        System.Collections.Generic.Dictionary<string, string> GetTypeofPaymentReasonAboutOutTransfering();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeofPaymentReasonAboutOutTransfering", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeofPaymentReasonAboutOutTransferingRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeofPaymentReasonAboutOutTransferingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeofOperDayClosingOptions", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeofOperDayClosingOptionsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeofOperDayClosingOptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeofOperDayClosingOptions", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeofOperDayClosingOptionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeofOperDayClosingOptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOf24_7Modes", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOf24_7ModesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeOf24_7Modes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOf24_7Modes", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOf24_7ModesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOf24_7ModesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfCommunals", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfCommunalsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeOfCommunals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfCommunals", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfCommunalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfCommunalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetActionsForCardTransaction", ReplyAction="http://tempuri.org/IXBInfoService/GetActionsForCardTransactionResponse")]
        System.Collections.Generic.Dictionary<string, string> GetActionsForCardTransaction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetActionsForCardTransaction", ReplyAction="http://tempuri.org/IXBInfoService/GetActionsForCardTransactionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetActionsForCardTransactionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardLimitChangeOrderActionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardLimitChangeOrderActionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardLimitChangeOrderActionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardLimitChangeOrderActionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardLimitChangeOrderActionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardLimitChangeOrderActionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetUnFreezeReasonTypesForOrder", ReplyAction="http://tempuri.org/IXBInfoService/GetUnFreezeReasonTypesForOrderResponse")]
        System.Collections.Generic.Dictionary<string, string> GetUnFreezeReasonTypesForOrder(int freezeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetUnFreezeReasonTypesForOrder", ReplyAction="http://tempuri.org/IXBInfoService/GetUnFreezeReasonTypesForOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetUnFreezeReasonTypesForOrderAsync(int freezeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPenaltyRateForDate", ReplyAction="http://tempuri.org/IXBInfoService/GetPenaltyRateForDateResponse")]
        double GetPenaltyRateForDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPenaltyRateForDate", ReplyAction="http://tempuri.org/IXBInfoService/GetPenaltyRateForDateResponse")]
        System.Threading.Tasks.Task<double> GetPenaltyRateForDateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfDepositStatus", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfDepositStatusResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeOfDepositStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfDepositStatus", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfDepositStatusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfDepositStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfDeposit", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfDepositResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTypeOfDeposit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTypeOfDeposit", ReplyAction="http://tempuri.org/IXBInfoService/GetTypeOfDepositResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfDepositAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositCurrenciesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDepositCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositCurrenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDepositTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftPurposeCode", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftPurposeCodeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSwiftPurposeCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSwiftPurposeCode", ReplyAction="http://tempuri.org/IXBInfoService/GetSwiftPurposeCodeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftPurposeCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetShopList", ReplyAction="http://tempuri.org/IXBInfoService/GetShopListResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.Shop> GetShopList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetShopList", ReplyAction="http://tempuri.org/IXBInfoService/GetShopListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.Shop>> GetShopListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSSTOperationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSSTOperationTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSSTOperationTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSSTOperationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSSTOperationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSSTOperationTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSSTerminals", ReplyAction="http://tempuri.org/IXBInfoService/GetSSTerminalsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSSTerminals(ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSSTerminals", ReplyAction="http://tempuri.org/IXBInfoService/GetSSTerminalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSSTerminalsAsync(ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBApplicationReportType", ReplyAction="http://tempuri.org/IXBInfoService/GetHBApplicationReportTypeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetHBApplicationReportType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetHBApplicationReportType", ReplyAction="http://tempuri.org/IXBInfoService/GetHBApplicationReportTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBApplicationReportTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCashOrderCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetCashOrderCurrenciesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCashOrderCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCashOrderCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetCashOrderCurrenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCashOrderCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReasonsForDigitalCardTransactionAction", ReplyAction="http://tempuri.org/IXBInfoService/GetReasonsForDigitalCardTransactionActionRespon" +
            "se")]
        System.Collections.Generic.Dictionary<string, string> GetReasonsForDigitalCardTransactionAction(bool useBank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReasonsForDigitalCardTransactionAction", ReplyAction="http://tempuri.org/IXBInfoService/GetReasonsForDigitalCardTransactionActionRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReasonsForDigitalCardTransactionActionAsync(bool useBank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCreditLineMandatoryInstallmentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCreditLineMandatoryInstallmentTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCreditLineMandatoryInstallmentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCreditLineMandatoryInstallmentTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCreditLineMandatoryInstallmentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCreditLineMandatoryInstallmentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferMethod", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferMethodResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransferMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferMethod", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferMethodResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferMethodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountStatuses", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountStatusesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAccountStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountStatuses", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountStatusesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountStatusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrenciesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInternationalPaymentCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetInternationalPaymentCurrenciesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetInternationalPaymentCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInternationalPaymentCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetInternationalPaymentCurrenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInternationalPaymentCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetActiveDepositTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetActiveDepositTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetActiveDepositTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetActiveDepositTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetActiveDepositTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetActiveDepositTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetEmbassyList", ReplyAction="http://tempuri.org/IXBInfoService/GetEmbassyListResponse")]
        System.Collections.Generic.Dictionary<string, string> GetEmbassyList(System.Collections.Generic.List<ushort> referenceTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetEmbassyList", ReplyAction="http://tempuri.org/IXBInfoService/GetEmbassyListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetEmbassyListAsync(System.Collections.Generic.List<ushort> referenceTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReferenceLanguages", ReplyAction="http://tempuri.org/IXBInfoService/GetReferenceLanguagesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetReferenceLanguages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReferenceLanguages", ReplyAction="http://tempuri.org/IXBInfoService/GetReferenceLanguagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReferenceLanguagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReferenceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetReferenceTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOflongstring> GetReferenceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReferenceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetReferenceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOflongstring>> GetReferenceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFilialAddressList", ReplyAction="http://tempuri.org/IXBInfoService/GetFilialAddressListResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOflongstring> GetFilialAddressList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFilialAddressList", ReplyAction="http://tempuri.org/IXBInfoService/GetFilialAddressListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOflongstring>> GetFilialAddressListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetStatementFrequency", ReplyAction="http://tempuri.org/IXBInfoService/GetStatementFrequencyResponse")]
        System.Collections.Generic.Dictionary<string, string> GetStatementFrequency();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetStatementFrequency", ReplyAction="http://tempuri.org/IXBInfoService/GetStatementFrequencyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatementFrequencyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransferTypes(int isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferTypesAsync(int isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllTransferTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAllTransferTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAllTransferTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllTransferTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAllTransferTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllTransferTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferCallQuality", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferCallQualityResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransferCallQuality();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferCallQuality", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferCallQualityResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferCallQualityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCashOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCashOrderTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCashOrderTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCashOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCashOrderTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCashOrderTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetOrderTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderQualityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetOrderQualityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderQualityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderQualityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanQualityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLoanQualityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLoanQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetLoanQualityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanQualityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProblemLoanTaxQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProblemLoanTaxQualityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProblemLoanTaxQualityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProblemLoanTaxQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProblemLoanTaxQualityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProblemLoanTaxQualityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProblemLoanTaxCourtDecisionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProblemLoanTaxCourtDecisionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProblemLoanTaxCourtDecisionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProblemLoanTaxCourtDecisionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProblemLoanTaxCourtDecisionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProblemLoanTaxCourtDecisionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardSystemTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardSystemTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardSystemTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardSystemTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardSystemTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardSystemTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardReportReceivingTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardReportReceivingTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardReportReceivingTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardReportReceivingTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardReportReceivingTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardReportReceivingTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerLastMotherName", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerLastMotherNameResponse")]
        string GetCustomerLastMotherName(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCustomerLastMotherName", ReplyAction="http://tempuri.org/IXBInfoService/GetCustomerLastMotherNameResponse")]
        System.Threading.Tasks.Task<string> GetCustomerLastMotherNameAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardPINCodeReceivingTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardPINCodeReceivingTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardPINCodeReceivingTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardPINCodeReceivingTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardPINCodeReceivingTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardPINCodeReceivingTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/TranslateArmToEnglish", ReplyAction="http://tempuri.org/IXBInfoService/TranslateArmToEnglishResponse")]
        string TranslateArmToEnglish(string armString, bool isUnicode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/TranslateArmToEnglish", ReplyAction="http://tempuri.org/IXBInfoService/TranslateArmToEnglishResponse")]
        System.Threading.Tasks.Task<string> TranslateArmToEnglishAsync(string armString, bool isUnicode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardTechnologyTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardTechnologyTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardTechnologyTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardTechnologyTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardTechnologyTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardTechnologyTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardTypes(int cardSystem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCardTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardTypesAsync(int cardSystem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllCardTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAllCardTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAllCardTypes(int cardSystem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAllCardTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAllCardTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllCardTypesAsync(int cardSystem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBankOperationFeeTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBankOperationFeeTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBankOperationFeeTypes(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBankOperationFeeTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetBankOperationFeeTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBankOperationFeeTypesAsync(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardClosingReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCardClosingReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardClosingReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardClosingReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCardClosingReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardClosingReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPeriodicsSubTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPeriodicsSubTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPeriodicsSubTypes(FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPeriodicsSubTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPeriodicsSubTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPeriodicsSubTypesAsync(FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCommunalBranchList", ReplyAction="http://tempuri.org/IXBInfoService/GetCommunalBranchListResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCommunalBranchList(FrontOffice.XBSInfo.CommunalTypes communalType, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCommunalBranchList", ReplyAction="http://tempuri.org/IXBInfoService/GetCommunalBranchListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommunalBranchListAsync(FrontOffice.XBSInfo.CommunalTypes communalType, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPeriodicUtilityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPeriodicUtilityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPeriodicUtilityTypes(FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPeriodicUtilityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPeriodicUtilityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPeriodicUtilityTypesAsync(FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCountries", ReplyAction="http://tempuri.org/IXBInfoService/GetCountriesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCountries", ReplyAction="http://tempuri.org/IXBInfoService/GetCountriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCountyRiskQuality", ReplyAction="http://tempuri.org/IXBInfoService/GetCountyRiskQualityResponse")]
        string GetCountyRiskQuality(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCountyRiskQuality", ReplyAction="http://tempuri.org/IXBInfoService/GetCountyRiskQualityResponse")]
        System.Threading.Tasks.Task<string> GetCountyRiskQualityAsync(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrentAccountCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrentAccountCurrenciesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCurrentAccountCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurrentAccountCurrencies", ReplyAction="http://tempuri.org/IXBInfoService/GetCurrentAccountCurrenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCurrentAccountCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositTypeCurrency", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositTypeCurrencyResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDepositTypeCurrency(short depositType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDepositTypeCurrency", ReplyAction="http://tempuri.org/IXBInfoService/GetDepositTypeCurrencyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositTypeCurrencyAsync(short depositType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFilialList", ReplyAction="http://tempuri.org/IXBInfoService/GetFilialListResponse")]
        System.Collections.Generic.Dictionary<string, string> GetFilialList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetFilialList", ReplyAction="http://tempuri.org/IXBInfoService/GetFilialListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetFilialListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInfoFromSwiftCode", ReplyAction="http://tempuri.org/IXBInfoService/GetInfoFromSwiftCodeResponse")]
        string GetInfoFromSwiftCode(string swiftCode, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetInfoFromSwiftCode", ReplyAction="http://tempuri.org/IXBInfoService/GetInfoFromSwiftCodeResponse")]
        System.Threading.Tasks.Task<string> GetInfoFromSwiftCodeAsync(string swiftCode, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetJointTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetJointTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetJointTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetJointTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetJointTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetJointTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLTACodes", ReplyAction="http://tempuri.org/IXBInfoService/GetLTACodesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetLTACodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLTACodes", ReplyAction="http://tempuri.org/IXBInfoService/GetLTACodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLTACodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPoliceCodes", ReplyAction="http://tempuri.org/IXBInfoService/GetPoliceCodesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPoliceCodes(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPoliceCodes", ReplyAction="http://tempuri.org/IXBInfoService/GetPoliceCodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPoliceCodesAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSyntheticStatuses", ReplyAction="http://tempuri.org/IXBInfoService/GetSyntheticStatusesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSyntheticStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSyntheticStatuses", ReplyAction="http://tempuri.org/IXBInfoService/GetSyntheticStatusesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSyntheticStatusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOperationsList", ReplyAction="http://tempuri.org/IXBInfoService/GetOperationsListResponse")]
        System.Collections.Generic.Dictionary<string, string> GetOperationsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOperationsList", ReplyAction="http://tempuri.org/IXBInfoService/GetOperationsListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOperationsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPeriodicityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPeriodicityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPeriodicityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPeriodicityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPeriodicityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPeriodicityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetStatementDeliveryTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetStatementDeliveryTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetStatementDeliveryTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetStatementDeliveryTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetStatementDeliveryTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatementDeliveryTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSyntheticStatus", ReplyAction="http://tempuri.org/IXBInfoService/GetSyntheticStatusResponse")]
        string GetSyntheticStatus(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSyntheticStatus", ReplyAction="http://tempuri.org/IXBInfoService/GetSyntheticStatusResponse")]
        System.Threading.Tasks.Task<string> GetSyntheticStatusAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferSystemCurrency", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferSystemCurrencyResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransferSystemCurrency(int transfersystem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferSystemCurrency", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferSystemCurrencyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferSystemCurrencyAsync(int transfersystem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransitAccountTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransitAccountTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetTransitAccountTypes(bool forLoanMature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransitAccountTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransitAccountTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransitAccountTypesAsync(bool forLoanMature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/SearchRelatedOfficeTypes", ReplyAction="http://tempuri.org/IXBInfoService/SearchRelatedOfficeTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> SearchRelatedOfficeTypes(string officeId, string officeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/SearchRelatedOfficeTypes", ReplyAction="http://tempuri.org/IXBInfoService/SearchRelatedOfficeTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> SearchRelatedOfficeTypesAsync(string officeId, string officeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBank", ReplyAction="http://tempuri.org/IXBInfoService/GetBankResponse")]
        string GetBank(int code, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetBank", ReplyAction="http://tempuri.org/IXBInfoService/GetBankResponse")]
        System.Threading.Tasks.Task<string> GetBankAsync(int code, FrontOffice.XBSInfo.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAutoConfirmOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAutoConfirmOrderTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfintint> GetAutoConfirmOrderTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAutoConfirmOrderTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAutoConfirmOrderTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfintint>> GetAutoConfirmOrderTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/Init", ReplyAction="http://tempuri.org/IXBInfoService/InitResponse")]
        void Init(string clientIp, byte language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/Init", ReplyAction="http://tempuri.org/IXBInfoService/InitResponse")]
        System.Threading.Tasks.Task InitAsync(string clientIp, byte language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountFreezeReasonsTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountFreezeReasonsTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAccountFreezeReasonsTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountFreezeReasonsTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountFreezeReasonsTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountFreezeReasonsTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDisputeResolutions", ReplyAction="http://tempuri.org/IXBInfoService/GetDisputeResolutionsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDisputeResolutions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetDisputeResolutions", ReplyAction="http://tempuri.org/IXBInfoService/GetDisputeResolutionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDisputeResolutionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCommunicationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCommunicationTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCommunicationTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCommunicationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCommunicationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommunicationTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/ClearAllCache", ReplyAction="http://tempuri.org/IXBInfoService/ClearAllCacheResponse")]
        void ClearAllCache();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/ClearAllCache", ReplyAction="http://tempuri.org/IXBInfoService/ClearAllCacheResponse")]
        System.Threading.Tasks.Task ClearAllCacheAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetServiceProvidedTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetServiceProvidedTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetServiceProvidedTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetServiceProvidedTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetServiceProvidedTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetServiceProvidedTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderRemovingReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderRemovingReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetOrderRemovingReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOrderRemovingReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetOrderRemovingReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderRemovingReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/IsWorkingDay", ReplyAction="http://tempuri.org/IXBInfoService/IsWorkingDayResponse")]
        bool IsWorkingDay(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/IsWorkingDay", ReplyAction="http://tempuri.org/IXBInfoService/IsWorkingDayResponse")]
        System.Threading.Tasks.Task<bool> IsWorkingDayAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAssigneeOperationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAssigneeOperationTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.TupleOfintintstringboolean> GetAssigneeOperationTypes(int groupId, int typeOfCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAssigneeOperationTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAssigneeOperationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.TupleOfintintstringboolean>> GetAssigneeOperationTypesAsync(int groupId, int typeOfCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAssigneeOperationGroupTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAssigneeOperationGroupTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAssigneeOperationGroupTypes(int typeOfCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAssigneeOperationGroupTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAssigneeOperationGroupTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAssigneeOperationGroupTypesAsync(int typeOfCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCredentialTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCredentialTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCredentialTypes(int typeOfCustomer, int customerFilialCode, int userFilialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCredentialTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetCredentialTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCredentialTypesAsync(int typeOfCustomer, int customerFilialCode, int userFilialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCredentialClosingReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCredentialClosingReasonsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCredentialClosingReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCredentialClosingReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetCredentialClosingReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCredentialClosingReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountClosingReasonsTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountClosingReasonsTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAccountClosingReasonsTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetAccountClosingReasonsTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetAccountClosingReasonsTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountClosingReasonsTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetActionPermissionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetActionPermissionTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.ActionPermission> GetActionPermissionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetActionPermissionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetActionPermissionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.ActionPermission>> GetActionPermissionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReferenceTypesDict", ReplyAction="http://tempuri.org/IXBInfoService/GetReferenceTypesDictResponse")]
        System.Collections.Generic.Dictionary<string, string> GetReferenceTypesDict();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetReferenceTypesDict", ReplyAction="http://tempuri.org/IXBInfoService/GetReferenceTypesDictResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReferenceTypesDictAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetMonths", ReplyAction="http://tempuri.org/IXBInfoService/GetMonthsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetMonths();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetMonths", ReplyAction="http://tempuri.org/IXBInfoService/GetMonthsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetMonthsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCommunalDate", ReplyAction="http://tempuri.org/IXBInfoService/GetCommunalDateResponse")]
        FrontOffice.XBSInfo.KeyValuePairOfstringstring GetCommunalDate(FrontOffice.XBSInfo.CommunalTypes cmnlType, short abonentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCommunalDate", ReplyAction="http://tempuri.org/IXBInfoService/GetCommunalDateResponse")]
        System.Threading.Tasks.Task<FrontOffice.XBSInfo.KeyValuePairOfstringstring> GetCommunalDateAsync(FrontOffice.XBSInfo.CommunalTypes cmnlType, short abonentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetServicePaymentNoteReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetServicePaymentNoteReasonsResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetServicePaymentNoteReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetServicePaymentNoteReasons", ReplyAction="http://tempuri.org/IXBInfoService/GetServicePaymentNoteReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetServicePaymentNoteReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferAmountPurposes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferAmountPurposesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetTransferAmountPurposes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferAmountPurposes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferAmountPurposesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetTransferAmountPurposesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferSenderLivingPlaceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferSenderLivingPlaceTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetTransferSenderLivingPlaceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferSenderLivingPlaceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferSenderLivingPlaceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetTransferSenderLivingPlaceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferReceiverLivingPlaceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferReceiverLivingPlaceTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetTransferReceiverLivingPlaceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferReceiverLivingPlaceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferReceiverLivingPlaceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetTransferReceiverLivingPlaceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferAmountTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferAmountTypesResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetTransferAmountTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetTransferAmountTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetTransferAmountTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetTransferAmountTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPensionAppliactionQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPensionAppliactionQualityTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPensionAppliactionQualityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPensionAppliactionQualityTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPensionAppliactionQualityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPensionAppliactionQualityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPensionAppliactionServiceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPensionAppliactionServiceTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPensionAppliactionServiceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPensionAppliactionServiceTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPensionAppliactionServiceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPensionAppliactionServiceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPensionAppliactionClosingTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPensionAppliactionClosingTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPensionAppliactionClosingTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetPensionAppliactionClosingTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetPensionAppliactionClosingTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPensionAppliactionClosingTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardsType", ReplyAction="http://tempuri.org/IXBInfoService/GetCardsTypeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCardsType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCardsType", ReplyAction="http://tempuri.org/IXBInfoService/GetCardsTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardsTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOpenCardsType", ReplyAction="http://tempuri.org/IXBInfoService/GetOpenCardsTypeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetOpenCardsType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetOpenCardsType", ReplyAction="http://tempuri.org/IXBInfoService/GetOpenCardsTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOpenCardsTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLastKeyNumber", ReplyAction="http://tempuri.org/IXBInfoService/GetLastKeyNumberResponse")]
        ulong GetLastKeyNumber(int keyId, ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetLastKeyNumber", ReplyAction="http://tempuri.org/IXBInfoService/GetLastKeyNumberResponse")]
        System.Threading.Tasks.Task<ulong> GetLastKeyNumberAsync(int keyId, ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurNominals", ReplyAction="http://tempuri.org/IXBInfoService/GetCurNominalsResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfstringstring> GetCurNominals(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetCurNominals", ReplyAction="http://tempuri.org/IXBInfoService/GetCurNominalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfstringstring>> GetCurNominalsAsync(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetWaterCoDebtDates", ReplyAction="http://tempuri.org/IXBInfoService/GetWaterCoDebtDatesResponse")]
        System.Collections.Generic.List<System.DateTime> GetWaterCoDebtDates(ushort code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetWaterCoDebtDates", ReplyAction="http://tempuri.org/IXBInfoService/GetWaterCoDebtDatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.DateTime>> GetWaterCoDebtDatesAsync(ushort code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetWaterCoBranches", ReplyAction="http://tempuri.org/IXBInfoService/GetWaterCoBranchesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetWaterCoBranches(ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetWaterCoBranches", ReplyAction="http://tempuri.org/IXBInfoService/GetWaterCoBranchesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetWaterCoBranchesAsync(ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetWaterCoCitys", ReplyAction="http://tempuri.org/IXBInfoService/GetWaterCoCitysResponse")]
        System.Collections.Generic.Dictionary<string, string> GetWaterCoCitys(ushort code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetWaterCoCitys", ReplyAction="http://tempuri.org/IXBInfoService/GetWaterCoCitysResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetWaterCoCitysAsync(ushort code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetWaterCoDetails", ReplyAction="http://tempuri.org/IXBInfoService/GetWaterCoDetailsResponse")]
        System.Collections.Generic.List<FrontOffice.XBSInfo.WaterCoDetail> GetWaterCoDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetWaterCoDetails", ReplyAction="http://tempuri.org/IXBInfoService/GetWaterCoDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.WaterCoDetail>> GetWaterCoDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProvisionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProvisionTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetProvisionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetProvisionTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetProvisionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProvisionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSMSMessagingStatusTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSMSMessagingStatusTypesResponse")]
        System.Collections.Generic.Dictionary<System.Nullable<int>, string> GetSMSMessagingStatusTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBInfoService/GetSMSMessagingStatusTypes", ReplyAction="http://tempuri.org/IXBInfoService/GetSMSMessagingStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.Nullable<int>, string>> GetSMSMessagingStatusTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXBInfoServiceChannel : FrontOffice.XBSInfo.IXBInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XBInfoServiceClient : System.ServiceModel.ClientBase<FrontOffice.XBSInfo.IXBInfoService>, FrontOffice.XBSInfo.IXBInfoService {
        
        public XBInfoServiceClient() {
        }
        
        public XBInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XBInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XBInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XBInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetBannerVersion() {
            return base.Channel.GetBannerVersion();
        }
        
        public System.Threading.Tasks.Task<int> GetBannerVersionAsync() {
            return base.Channel.GetBannerVersionAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetSecuritiesTypes() {
            return base.Channel.GetSecuritiesTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetSecuritiesTypesAsync() {
            return base.Channel.GetSecuritiesTypesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetTradingOrderTypes() {
            return base.Channel.GetTradingOrderTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetTradingOrderTypesAsync() {
            return base.Channel.GetTradingOrderTypesAsync();
        }
        
        public string GenerateBrokerContractNumber() {
            return base.Channel.GenerateBrokerContractNumber();
        }
        
        public System.Threading.Tasks.Task<string> GenerateBrokerContractNumberAsync() {
            return base.Channel.GenerateBrokerContractNumberAsync();
        }
        
        public FrontOffice.XBSInfo.BrokerContractSurvey GetBrokerContractSurvey() {
            return base.Channel.GetBrokerContractSurvey();
        }
        
        public System.Threading.Tasks.Task<FrontOffice.XBSInfo.BrokerContractSurvey> GetBrokerContractSurveyAsync() {
            return base.Channel.GetBrokerContractSurveyAsync();
        }
        
        public bool HasBrokerContract() {
            return base.Channel.HasBrokerContract();
        }
        
        public System.Threading.Tasks.Task<bool> HasBrokerContractAsync() {
            return base.Channel.HasBrokerContractAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetTradingOrderExpirationTypes() {
            return base.Channel.GetTradingOrderExpirationTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetTradingOrderExpirationTypesAsync() {
            return base.Channel.GetTradingOrderExpirationTypesAsync();
        }
        
        public System.Collections.Generic.List<string> GetLinkedCardWarnings(string cardNumber, bool renewWithCardNewType) {
            return base.Channel.GetLinkedCardWarnings(cardNumber, renewWithCardNewType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLinkedCardWarningsAsync(string cardNumber, bool renewWithCardNewType) {
            return base.Channel.GetLinkedCardWarningsAsync(cardNumber, renewWithCardNewType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLeasingReportTypes() {
            return base.Channel.GetLeasingReportTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLeasingReportTypesAsync() {
            return base.Channel.GetLeasingReportTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLeasingCredentialClosingReasons() {
            return base.Channel.GetLeasingCredentialClosingReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLeasingCredentialClosingReasonsAsync() {
            return base.Channel.GetLeasingCredentialClosingReasonsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCurrenciesForReceivedFastTransfer() {
            return base.Channel.GetCurrenciesForReceivedFastTransfer();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCurrenciesForReceivedFastTransferAsync() {
            return base.Channel.GetCurrenciesForReceivedFastTransferAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCreditLineTypesForOnlineMobile(FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetCreditLineTypesForOnlineMobile(language);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCreditLineTypesForOnlineMobileAsync(FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetCreditLineTypesForOnlineMobileAsync(language);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTemplateDocumentTypes() {
            return base.Channel.GetTemplateDocumentTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTemplateDocumentTypesAsync() {
            return base.Channel.GetTemplateDocumentTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAttachedCardTypes(string mainCardNumber) {
            return base.Channel.GetAttachedCardTypes(mainCardNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAttachedCardTypesAsync(string mainCardNumber) {
            return base.Channel.GetAttachedCardTypesAsync(mainCardNumber);
        }
        
        public int GetCardOfficeTypesForIBanking(ushort cardType, short periodicityType) {
            return base.Channel.GetCardOfficeTypesForIBanking(cardType, periodicityType);
        }
        
        public System.Threading.Tasks.Task<int> GetCardOfficeTypesForIBankingAsync(ushort cardType, short periodicityType) {
            return base.Channel.GetCardOfficeTypesForIBankingAsync(cardType, periodicityType);
        }
        
        public FrontOffice.XBSInfo.CardTariffContract GetCardTariffsByCardType(ushort cardType, short periodicityType) {
            return base.Channel.GetCardTariffsByCardType(cardType, periodicityType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.XBSInfo.CardTariffContract> GetCardTariffsByCardTypeAsync(ushort cardType, short periodicityType) {
            return base.Channel.GetCardTariffsByCardTypeAsync(cardType, periodicityType);
        }
        
        public double GetCardServiceFee(int cardType, int officeId, string currency) {
            return base.Channel.GetCardServiceFee(cardType, officeId, currency);
        }
        
        public System.Threading.Tasks.Task<double> GetCardServiceFeeAsync(int cardType, int officeId, string currency) {
            return base.Channel.GetCardServiceFeeAsync(cardType, officeId, currency);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAccountClosingReasonsHB() {
            return base.Channel.GetAccountClosingReasonsHB();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountClosingReasonsHBAsync() {
            return base.Channel.GetAccountClosingReasonsHBAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedBytestring> GetUtilityAbonentTypes() {
            return base.Channel.GetUtilityAbonentTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedBytestring>> GetUtilityAbonentTypesAsync() {
            return base.Channel.GetUtilityAbonentTypesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetUtilityPaymentTypesOnlineBanking() {
            return base.Channel.GetUtilityPaymentTypesOnlineBanking();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetUtilityPaymentTypesOnlineBankingAsync() {
            return base.Channel.GetUtilityPaymentTypesOnlineBankingAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring> GetPayIfNoDebtTypes() {
            return base.Channel.GetPayIfNoDebtTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfshortstring>> GetPayIfNoDebtTypesAsync() {
            return base.Channel.GetPayIfNoDebtTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetServiceFeePeriodocityTypes() {
            return base.Channel.GetServiceFeePeriodocityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetServiceFeePeriodocityTypesAsync() {
            return base.Channel.GetServiceFeePeriodocityTypesAsync();
        }
        
        public void InitOnline(string clientIp, byte language, FrontOffice.XBSInfo.SourceType sourceType, FrontOffice.XBSInfo.AuthorizedCustomer authorizedCustomer) {
            base.Channel.InitOnline(clientIp, language, sourceType, authorizedCustomer);
        }
        
        public System.Threading.Tasks.Task InitOnlineAsync(string clientIp, byte language, FrontOffice.XBSInfo.SourceType sourceType, FrontOffice.XBSInfo.AuthorizedCustomer authorizedCustomer) {
            return base.Channel.InitOnlineAsync(clientIp, language, sourceType, authorizedCustomer);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCurrenciesPlasticCardOrder(ushort cardType, short periodicityType) {
            return base.Channel.GetCurrenciesPlasticCardOrder(cardType, periodicityType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCurrenciesPlasticCardOrderAsync(ushort cardType, short periodicityType) {
            return base.Channel.GetCurrenciesPlasticCardOrderAsync(cardType, periodicityType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLinkedCardTariffsByCardType(ushort cardType) {
            return base.Channel.GetLinkedCardTariffsByCardType(cardType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLinkedCardTariffsByCardTypeAsync(ushort cardType) {
            return base.Channel.GetLinkedCardTariffsByCardTypeAsync(cardType);
        }
        
        public FrontOffice.XBSInfo.CardTariff GetAttachedCardTariffs(string mainCardNumber, uint cardType) {
            return base.Channel.GetAttachedCardTariffs(mainCardNumber, cardType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.XBSInfo.CardTariff> GetAttachedCardTariffsAsync(string mainCardNumber, uint cardType) {
            return base.Channel.GetAttachedCardTariffsAsync(mainCardNumber, cardType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanMatureTypesForIBanking() {
            return base.Channel.GetLoanMatureTypesForIBanking();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMatureTypesForIBankingAsync() {
            return base.Channel.GetLoanMatureTypesForIBankingAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPlasticCardSmsServiceActions(string cardNumber) {
            return base.Channel.GetPlasticCardSmsServiceActions(cardNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPlasticCardSmsServiceActionsAsync(string cardNumber) {
            return base.Channel.GetPlasticCardSmsServiceActionsAsync(cardNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeOfPlasticCardsSMS() {
            return base.Channel.GetTypeOfPlasticCardsSMS();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfPlasticCardsSMSAsync() {
            return base.Channel.GetTypeOfPlasticCardsSMSAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfstringstring> GetDetailsOfCharges() {
            return base.Channel.GetDetailsOfCharges();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfstringstring>> GetDetailsOfChargesAsync() {
            return base.Channel.GetDetailsOfChargesAsync();
        }
        
        public string GetFilialName(int filialCode) {
            return base.Channel.GetFilialName(filialCode);
        }
        
        public System.Threading.Tasks.Task<string> GetFilialNameAsync(int filialCode) {
            return base.Channel.GetFilialNameAsync(filialCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDigitalOrderTypes(FrontOffice.XBSInfo.TypeOfHbProductTypes hbProductType) {
            return base.Channel.GetDigitalOrderTypes(hbProductType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDigitalOrderTypesAsync(FrontOffice.XBSInfo.TypeOfHbProductTypes hbProductType) {
            return base.Channel.GetDigitalOrderTypesAsync(hbProductType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetOrderableCardSystemTypes() {
            return base.Channel.GetOrderableCardSystemTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderableCardSystemTypesAsync() {
            return base.Channel.GetOrderableCardSystemTypesAsync();
        }
        
        public string GetCustomerAddressEng(ulong customerNumber) {
            return base.Channel.GetCustomerAddressEng(customerNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerAddressEngAsync(ulong customerNumber) {
            return base.Channel.GetCustomerAddressEngAsync(customerNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardRemovalReasons() {
            return base.Channel.GetCardRemovalReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardRemovalReasonsAsync() {
            return base.Channel.GetCardRemovalReasonsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetInsuranceContractTypes(bool isLoanProduct, bool isSeparatelyProduct, bool isProvision) {
            return base.Channel.GetInsuranceContractTypes(isLoanProduct, isSeparatelyProduct, isProvision);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceContractTypesAsync(bool isLoanProduct, bool isSeparatelyProduct, bool isProvision) {
            return base.Channel.GetInsuranceContractTypesAsync(isLoanProduct, isSeparatelyProduct, isProvision);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetInsuranceTypesByContractType(int insuranceContractType, bool isLoanProduct, bool isSeparatelyProduct, bool isProvision) {
            return base.Channel.GetInsuranceTypesByContractType(insuranceContractType, isLoanProduct, isSeparatelyProduct, isProvision);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceTypesByContractTypeAsync(int insuranceContractType, bool isLoanProduct, bool isSeparatelyProduct, bool isProvision) {
            return base.Channel.GetInsuranceTypesByContractTypeAsync(insuranceContractType, isLoanProduct, isSeparatelyProduct, isProvision);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetHBSourceTypes() {
            return base.Channel.GetHBSourceTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBSourceTypesAsync() {
            return base.Channel.GetHBSourceTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetHBRejectTypes() {
            return base.Channel.GetHBRejectTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBRejectTypesAsync() {
            return base.Channel.GetHBRejectTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetHBQualityTypes() {
            return base.Channel.GetHBQualityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBQualityTypesAsync() {
            return base.Channel.GetHBQualityTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetHBDocumentTypes() {
            return base.Channel.GetHBDocumentTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBDocumentTypesAsync() {
            return base.Channel.GetHBDocumentTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetHBDocumentSubtypes() {
            return base.Channel.GetHBDocumentSubtypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBDocumentSubtypesAsync() {
            return base.Channel.GetHBDocumentSubtypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCallTransferRejectionReasons() {
            return base.Channel.GetCallTransferRejectionReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCallTransferRejectionReasonsAsync() {
            return base.Channel.GetCallTransferRejectionReasonsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardReceivingTypes() {
            return base.Channel.GetCardReceivingTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardReceivingTypesAsync() {
            return base.Channel.GetCardReceivingTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAccountRestTypes() {
            return base.Channel.GetAccountRestTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountRestTypesAsync() {
            return base.Channel.GetAccountRestTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<byte, string> GetTransferReceiverTypes() {
            return base.Channel.GetTransferReceiverTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<byte, string>> GetTransferReceiverTypesAsync() {
            return base.Channel.GetTransferReceiverTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardApplicationAcceptanceTypes() {
            return base.Channel.GetCardApplicationAcceptanceTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardApplicationAcceptanceTypesAsync() {
            return base.Channel.GetCardApplicationAcceptanceTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetVirtualCardStatusChangeReasons() {
            return base.Channel.GetVirtualCardStatusChangeReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetVirtualCardStatusChangeReasonsAsync() {
            return base.Channel.GetVirtualCardStatusChangeReasonsAsync();
        }
        
        public byte CommunicationTypeExistence(ulong customerNumber) {
            return base.Channel.CommunicationTypeExistence(customerNumber);
        }
        
        public System.Threading.Tasks.Task<byte> CommunicationTypeExistenceAsync(ulong customerNumber) {
            return base.Channel.CommunicationTypeExistenceAsync(customerNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetVirtualCardChangeActions(int status) {
            return base.Channel.GetVirtualCardChangeActions(status);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetVirtualCardChangeActionsAsync(int status) {
            return base.Channel.GetVirtualCardChangeActionsAsync(status);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetReasonsForCardTransactionAction() {
            return base.Channel.GetReasonsForCardTransactionAction();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReasonsForCardTransactionActionAsync() {
            return base.Channel.GetReasonsForCardTransactionActionAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAllReasonsForCardTransactionAction() {
            return base.Channel.GetAllReasonsForCardTransactionAction();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllReasonsForCardTransactionActionAsync() {
            return base.Channel.GetAllReasonsForCardTransactionActionAsync();
        }
        
        public string GetCurrencyLetter(string currency, byte operationType) {
            return base.Channel.GetCurrencyLetter(currency, operationType);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrencyLetterAsync(string currency, byte operationType) {
            return base.Channel.GetCurrencyLetterAsync(currency, operationType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSSexes(string authorizedUserSessionToken) {
            return base.Channel.GetARUSSexes(authorizedUserSessionToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSSexesAsync(string authorizedUserSessionToken) {
            return base.Channel.GetARUSSexesAsync(authorizedUserSessionToken);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSYesNo(string authorizedUserSessionToken) {
            return base.Channel.GetARUSYesNo(authorizedUserSessionToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSYesNoAsync(string authorizedUserSessionToken) {
            return base.Channel.GetARUSYesNoAsync(authorizedUserSessionToken);
        }
        
        public void InitForARUS(string clientIp, byte language, FrontOffice.XBSInfo.User user) {
            base.Channel.InitForARUS(clientIp, language, user);
        }
        
        public System.Threading.Tasks.Task InitForARUSAsync(string clientIp, byte language, FrontOffice.XBSInfo.User user) {
            return base.Channel.InitForARUSAsync(clientIp, language, user);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSDocumentTypes(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSDocumentTypes(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSDocumentTypesAsync(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSDocumentTypesAsync(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSCountriesByMTO(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSCountriesByMTO(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSCountriesByMTOAsync(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSCountriesByMTOAsync(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSSendingCurrencies(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSSendingCurrencies(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSSendingCurrenciesAsync(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSSendingCurrenciesAsync(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSCitiesByCountry(string authorizedUserSessionToken, string MTOAgentCode, string countryCode) {
            return base.Channel.GetARUSCitiesByCountry(authorizedUserSessionToken, MTOAgentCode, countryCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSCitiesByCountryAsync(string authorizedUserSessionToken, string MTOAgentCode, string countryCode) {
            return base.Channel.GetARUSCitiesByCountryAsync(authorizedUserSessionToken, MTOAgentCode, countryCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSStates(string authorizedUserSessionToken, string MTOAgentCode, string countryCode) {
            return base.Channel.GetARUSStates(authorizedUserSessionToken, MTOAgentCode, countryCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSStatesAsync(string authorizedUserSessionToken, string MTOAgentCode, string countryCode) {
            return base.Channel.GetARUSStatesAsync(authorizedUserSessionToken, MTOAgentCode, countryCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSCitiesByState(string authorizedUserSessionToken, string MTOAgentCode, string countryCode, string stateCode) {
            return base.Channel.GetARUSCitiesByState(authorizedUserSessionToken, MTOAgentCode, countryCode, stateCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSCitiesByStateAsync(string authorizedUserSessionToken, string MTOAgentCode, string countryCode, string stateCode) {
            return base.Channel.GetARUSCitiesByStateAsync(authorizedUserSessionToken, MTOAgentCode, countryCode, stateCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSMTOList(string authorizedUserSessionToken) {
            return base.Channel.GetARUSMTOList(authorizedUserSessionToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSMTOListAsync(string authorizedUserSessionToken) {
            return base.Channel.GetARUSMTOListAsync(authorizedUserSessionToken);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCountriesWithA3() {
            return base.Channel.GetCountriesWithA3();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCountriesWithA3Async() {
            return base.Channel.GetCountriesWithA3Async();
        }
        
        public string GetARUSDocumentTypeCode(int ACBADocumentTypeCode) {
            return base.Channel.GetARUSDocumentTypeCode(ACBADocumentTypeCode);
        }
        
        public System.Threading.Tasks.Task<string> GetARUSDocumentTypeCodeAsync(int ACBADocumentTypeCode) {
            return base.Channel.GetARUSDocumentTypeCodeAsync(ACBADocumentTypeCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSCancellationReversalCodes(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSCancellationReversalCodes(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSCancellationReversalCodesAsync(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSCancellationReversalCodesAsync(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSPayoutDeliveryCodes(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSPayoutDeliveryCodes(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSPayoutDeliveryCodesAsync(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSPayoutDeliveryCodesAsync(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetRemittancePurposes(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetRemittancePurposes(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetRemittancePurposesAsync(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetRemittancePurposesAsync(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetMTOAgencies(string authorizedUserSessionToken, string MTOAgentCode, string countryCode, string cityCode, string currencyCode, string stateCode) {
            return base.Channel.GetMTOAgencies(authorizedUserSessionToken, MTOAgentCode, countryCode, cityCode, currencyCode, stateCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetMTOAgenciesAsync(string authorizedUserSessionToken, string MTOAgentCode, string countryCode, string cityCode, string currencyCode, string stateCode) {
            return base.Channel.GetMTOAgenciesAsync(authorizedUserSessionToken, MTOAgentCode, countryCode, cityCode, currencyCode, stateCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetARUSAmendmentReasons(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSAmendmentReasons(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetARUSAmendmentReasonsAsync(string authorizedUserSessionToken, string MTOAgentCode) {
            return base.Channel.GetARUSAmendmentReasonsAsync(authorizedUserSessionToken, MTOAgentCode);
        }
        
        public string GetMandatoryEntryInfo(byte id) {
            return base.Channel.GetMandatoryEntryInfo(id);
        }
        
        public System.Threading.Tasks.Task<string> GetMandatoryEntryInfoAsync(byte id) {
            return base.Channel.GetMandatoryEntryInfoAsync(id);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetReferenceReceiptTypes() {
            return base.Channel.GetReferenceReceiptTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReferenceReceiptTypesAsync() {
            return base.Channel.GetReferenceReceiptTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCustomerAllPassports(ulong customerNumber) {
            return base.Channel.GetCustomerAllPassports(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCustomerAllPassportsAsync(ulong customerNumber) {
            return base.Channel.GetCustomerAllPassportsAsync(customerNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCustomerAllPhones(ulong customerNumber) {
            return base.Channel.GetCustomerAllPhones(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCustomerAllPhonesAsync(ulong customerNumber) {
            return base.Channel.GetCustomerAllPhonesAsync(customerNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSTAKPayoutDeliveryCodesByBenificiaryAgentCode(string authorizedUserSessionToken, string MTOAgentCode, string parent) {
            return base.Channel.GetSTAKPayoutDeliveryCodesByBenificiaryAgentCode(authorizedUserSessionToken, MTOAgentCode, parent);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSTAKPayoutDeliveryCodesByBenificiaryAgentCodeAsync(string authorizedUserSessionToken, string MTOAgentCode, string parent) {
            return base.Channel.GetSTAKPayoutDeliveryCodesByBenificiaryAgentCodeAsync(authorizedUserSessionToken, MTOAgentCode, parent);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardAdditionalDataTypes(string cardNumber, string expiryDate) {
            return base.Channel.GetCardAdditionalDataTypes(cardNumber, expiryDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardAdditionalDataTypesAsync(string cardNumber, string expiryDate) {
            return base.Channel.GetCardAdditionalDataTypesAsync(cardNumber, expiryDate);
        }
        
        public string GetSentCityBySwiftCode(string swiftCode) {
            return base.Channel.GetSentCityBySwiftCode(swiftCode);
        }
        
        public System.Threading.Tasks.Task<string> GetSentCityBySwiftCodeAsync(string swiftCode) {
            return base.Channel.GetSentCityBySwiftCodeAsync(swiftCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardNotRenewReasons() {
            return base.Channel.GetCardNotRenewReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardNotRenewReasonsAsync() {
            return base.Channel.GetCardNotRenewReasonsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetReasonsForCardTransactionActionForUnblocking() {
            return base.Channel.GetReasonsForCardTransactionActionForUnblocking();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReasonsForCardTransactionActionForUnblockingAsync() {
            return base.Channel.GetReasonsForCardTransactionActionForUnblockingAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAllTypesOfPlasticCardsSMS() {
            return base.Channel.GetAllTypesOfPlasticCardsSMS();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllTypesOfPlasticCardsSMSAsync() {
            return base.Channel.GetAllTypesOfPlasticCardsSMSAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.TupleOfstringboolean> GetCardMobilePhones(ulong customerNumber, ulong cardNumber) {
            return base.Channel.GetCardMobilePhones(customerNumber, cardNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.TupleOfstringboolean>> GetCardMobilePhonesAsync(ulong customerNumber, ulong cardNumber) {
            return base.Channel.GetCardMobilePhonesAsync(customerNumber, cardNumber);
        }
        
        public string GetCurrentPhone(ulong cardNumber) {
            return base.Channel.GetCurrentPhone(cardNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentPhoneAsync(ulong cardNumber) {
            return base.Channel.GetCurrentPhoneAsync(cardNumber);
        }
        
        public string GetCustomerEmailByCardNumber(string cardNumber) {
            return base.Channel.GetCustomerEmailByCardNumber(cardNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerEmailByCardNumberAsync(string cardNumber) {
            return base.Channel.GetCustomerEmailByCardNumberAsync(cardNumber);
        }
        
        public string SMSTypeAndValue(string cardNumber) {
            return base.Channel.SMSTypeAndValue(cardNumber);
        }
        
        public System.Threading.Tasks.Task<string> SMSTypeAndValueAsync(string cardNumber) {
            return base.Channel.SMSTypeAndValueAsync(cardNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeOfLoanDelete() {
            return base.Channel.GetTypeOfLoanDelete();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfLoanDeleteAsync() {
            return base.Channel.GetTypeOfLoanDeleteAsync();
        }
        
        public bool IsCardOpen(string cardNumber) {
            return base.Channel.IsCardOpen(cardNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsCardOpenAsync(string cardNumber) {
            return base.Channel.IsCardOpenAsync(cardNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetJointDepositAvailableCurrencies(ulong customerNumber, ulong thirdPersonCustomerNumber) {
            return base.Channel.GetJointDepositAvailableCurrencies(customerNumber, thirdPersonCustomerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetJointDepositAvailableCurrenciesAsync(ulong customerNumber, ulong thirdPersonCustomerNumber) {
            return base.Channel.GetJointDepositAvailableCurrenciesAsync(customerNumber, thirdPersonCustomerNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCommissionNonCollectionReasons() {
            return base.Channel.GetCommissionNonCollectionReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommissionNonCollectionReasonsAsync() {
            return base.Channel.GetCommissionNonCollectionReasonsAsync();
        }
        
        public FrontOffice.XBSInfo.TupleOfbooleanboolean GetCustomerTypeAndResidence(ulong customerNumber) {
            return base.Channel.GetCustomerTypeAndResidence(customerNumber);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.XBSInfo.TupleOfbooleanboolean> GetCustomerTypeAndResidenceAsync(ulong customerNumber) {
            return base.Channel.GetCustomerTypeAndResidenceAsync(customerNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDepositoryAccountOperators() {
            return base.Channel.GetDepositoryAccountOperators();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositoryAccountOperatorsAsync() {
            return base.Channel.GetDepositoryAccountOperatorsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransactionTypes() {
            return base.Channel.GetTransactionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransactionTypesAsync() {
            return base.Channel.GetTransactionTypesAsync();
        }
        
        public FrontOffice.XBSInfo.TransactionTypeByAML GetTransactionTypeByAML(long doc_ID) {
            return base.Channel.GetTransactionTypeByAML(doc_ID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.XBSInfo.TransactionTypeByAML> GetTransactionTypeByAMLAsync(long doc_ID) {
            return base.Channel.GetTransactionTypeByAMLAsync(doc_ID);
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.CardDesign> GetCardDesignThemes() {
            return base.Channel.GetCardDesignThemes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.CardDesign>> GetCardDesignThemesAsync() {
            return base.Channel.GetCardDesignThemesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.CardDesign> GetCardDesignImagesByThemeId(int id) {
            return base.Channel.GetCardDesignImagesByThemeId(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.CardDesign>> GetCardDesignImagesByThemeIdAsync(int id) {
            return base.Channel.GetCardDesignImagesByThemeIdAsync(id);
        }
        
        public string GetCardDesignImageByDesignId(int id) {
            return base.Channel.GetCardDesignImageByDesignId(id);
        }
        
        public System.Threading.Tasks.Task<string> GetCardDesignImageByDesignIdAsync(int id) {
            return base.Channel.GetCardDesignImageByDesignIdAsync(id);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetInsuranceTypes() {
            return base.Channel.GetInsuranceTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceTypesAsync() {
            return base.Channel.GetInsuranceTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetInsuranceCompanies() {
            return base.Channel.GetInsuranceCompanies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceCompaniesAsync() {
            return base.Channel.GetInsuranceCompaniesAsync();
        }
        
        public string GetCardDataChangeFieldTypeDescription(ushort type) {
            return base.Channel.GetCardDataChangeFieldTypeDescription(type);
        }
        
        public System.Threading.Tasks.Task<string> GetCardDataChangeFieldTypeDescriptionAsync(ushort type) {
            return base.Channel.GetCardDataChangeFieldTypeDescriptionAsync(type);
        }
        
        public string GetCardRelatedOfficeName(ushort relatedOfficeNumber) {
            return base.Channel.GetCardRelatedOfficeName(relatedOfficeNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetCardRelatedOfficeNameAsync(ushort relatedOfficeNumber) {
            return base.Channel.GetCardRelatedOfficeNameAsync(relatedOfficeNumber);
        }
        
        public string GetCOWaterBranchID(string branch, string abonentFilialCode) {
            return base.Channel.GetCOWaterBranchID(branch, abonentFilialCode);
        }
        
        public System.Threading.Tasks.Task<string> GetCOWaterBranchIDAsync(string branch, string abonentFilialCode) {
            return base.Channel.GetCOWaterBranchIDAsync(branch, abonentFilialCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetReestrWaterCoBranches(ushort filialCode) {
            return base.Channel.GetReestrWaterCoBranches(filialCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReestrWaterCoBranchesAsync(ushort filialCode) {
            return base.Channel.GetReestrWaterCoBranchesAsync(filialCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDepositClosingReasonTypes() {
            return base.Channel.GetDepositClosingReasonTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositClosingReasonTypesAsync() {
            return base.Channel.GetDepositClosingReasonTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAllDepositClosingReasonTypes(bool showinList) {
            return base.Channel.GetAllDepositClosingReasonTypes(showinList);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllDepositClosingReasonTypesAsync(bool showinList) {
            return base.Channel.GetAllDepositClosingReasonTypesAsync(showinList);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSubTypesOfTokens() {
            return base.Channel.GetSubTypesOfTokens();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSubTypesOfTokensAsync() {
            return base.Channel.GetSubTypesOfTokensAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPrintReportTypes() {
            return base.Channel.GetPrintReportTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPrintReportTypesAsync() {
            return base.Channel.GetPrintReportTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransferRejectReasonTypes() {
            return base.Channel.GetTransferRejectReasonTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferRejectReasonTypesAsync() {
            return base.Channel.GetTransferRejectReasonTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransferRequestStepTypes() {
            return base.Channel.GetTransferRequestStepTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferRequestStepTypesAsync() {
            return base.Channel.GetTransferRequestStepTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransferRequestStatusTypes() {
            return base.Channel.GetTransferRequestStatusTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferRequestStatusTypesAsync() {
            return base.Channel.GetTransferRequestStatusTypesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.DepositOption> GetBusinesDepositOptions() {
            return base.Channel.GetBusinesDepositOptions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.DepositOption>> GetBusinesDepositOptionsAsync() {
            return base.Channel.GetBusinesDepositOptionsAsync();
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetTransferSessions(System.DateTime dateStart, System.DateTime dateEnd, short transferGroup) {
            return base.Channel.GetTransferSessions(dateStart, dateEnd, transferGroup);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetTransferSessionsAsync(System.DateTime dateStart, System.DateTime dateEnd, short transferGroup) {
            return base.Channel.GetTransferSessionsAsync(dateStart, dateEnd, transferGroup);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetArmenianPlaces(int region) {
            return base.Channel.GetArmenianPlaces(region);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetArmenianPlacesAsync(int region) {
            return base.Channel.GetArmenianPlacesAsync(region);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetRegions(int country) {
            return base.Channel.GetRegions(country);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetRegionsAsync(int country) {
            return base.Channel.GetRegionsAsync(country);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeOfLoanRepaymentSource() {
            return base.Channel.GetTypeOfLoanRepaymentSource();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfLoanRepaymentSourceAsync() {
            return base.Channel.GetTypeOfLoanRepaymentSourceAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetActiveDepositTypesForNewDepositOrder(int accountType, int customerType) {
            return base.Channel.GetActiveDepositTypesForNewDepositOrder(accountType, customerType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetActiveDepositTypesForNewDepositOrderAsync(int accountType, int customerType) {
            return base.Channel.GetActiveDepositTypesForNewDepositOrderAsync(accountType, customerType);
        }
        
        public FrontOffice.XBSInfo.CardTariffAdditionalInformation GetCardTariffAdditionalInformation(int officeID, int cardType) {
            return base.Channel.GetCardTariffAdditionalInformation(officeID, cardType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.XBSInfo.CardTariffAdditionalInformation> GetCardTariffAdditionalInformationAsync(int officeID, int cardType) {
            return base.Channel.GetCardTariffAdditionalInformationAsync(officeID, cardType);
        }
        
        public string GetDepositDataChangeFieldTypeDescription(ushort type) {
            return base.Channel.GetDepositDataChangeFieldTypeDescription(type);
        }
        
        public System.Threading.Tasks.Task<string> GetDepositDataChangeFieldTypeDescriptionAsync(ushort type) {
            return base.Channel.GetDepositDataChangeFieldTypeDescriptionAsync(type);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetInsuranceCompaniesByInsuranceType(ushort insuranceType) {
            return base.Channel.GetInsuranceCompaniesByInsuranceType(insuranceType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceCompaniesByInsuranceTypeAsync(ushort insuranceType) {
            return base.Channel.GetInsuranceCompaniesByInsuranceTypeAsync(insuranceType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetInsuranceTypesByProductType(bool isLoanProduct, bool isSeparatelyProduct) {
            return base.Channel.GetInsuranceTypesByProductType(isLoanProduct, isSeparatelyProduct);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInsuranceTypesByProductTypeAsync(bool isLoanProduct, bool isSeparatelyProduct) {
            return base.Channel.GetInsuranceTypesByProductTypeAsync(isLoanProduct, isSeparatelyProduct);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanTypes() {
            return base.Channel.GetLoanTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanTypesAsync() {
            return base.Channel.GetLoanTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanMatureTypes() {
            return base.Channel.GetLoanMatureTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMatureTypesAsync() {
            return base.Channel.GetLoanMatureTypesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfintstring> GetPhoneBankingContractQuestions() {
            return base.Channel.GetPhoneBankingContractQuestions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfintstring>> GetPhoneBankingContractQuestionsAsync() {
            return base.Channel.GetPhoneBankingContractQuestionsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCashBookRowTypes() {
            return base.Channel.GetCashBookRowTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCashBookRowTypesAsync() {
            return base.Channel.GetCashBookRowTypesAsync();
        }
        
        public string GetExternalPaymentTerm(short id, System.Collections.Generic.List<string> param, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetExternalPaymentTerm(id, param, language);
        }
        
        public System.Threading.Tasks.Task<string> GetExternalPaymentTermAsync(short id, System.Collections.Generic.List<string> param, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetExternalPaymentTermAsync(id, param, language);
        }
        
        public string GetExternalPaymentProductDetailCode(short id, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetExternalPaymentProductDetailCode(id, language);
        }
        
        public System.Threading.Tasks.Task<string> GetExternalPaymentProductDetailCodeAsync(short id, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetExternalPaymentProductDetailCodeAsync(id, language);
        }
        
        public string GetExternalPaymentStatusCode(short id, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetExternalPaymentStatusCode(id, language);
        }
        
        public System.Threading.Tasks.Task<string> GetExternalPaymentStatusCodeAsync(short id, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetExternalPaymentStatusCodeAsync(id, language);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetListOfLoanApplicationAmounts() {
            return base.Channel.GetListOfLoanApplicationAmounts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetListOfLoanApplicationAmountsAsync() {
            return base.Channel.GetListOfLoanApplicationAmountsAsync();
        }
        
        public double GetFastOverdraftFeeAmount(double amount) {
            return base.Channel.GetFastOverdraftFeeAmount(amount);
        }
        
        public System.Threading.Tasks.Task<double> GetFastOverdraftFeeAmountAsync(double amount) {
            return base.Channel.GetFastOverdraftFeeAmountAsync(amount);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringTypes() {
            return base.Channel.GetLoanMonitoringTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringTypesAsync() {
            return base.Channel.GetLoanMonitoringTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringFactorGroupes() {
            return base.Channel.GetLoanMonitoringFactorGroupes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringFactorGroupesAsync() {
            return base.Channel.GetLoanMonitoringFactorGroupesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringFactors(int loanType, int groupId) {
            return base.Channel.GetLoanMonitoringFactors(loanType, groupId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringFactorsAsync(int loanType, int groupId) {
            return base.Channel.GetLoanMonitoringFactorsAsync(loanType, groupId);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProfitReductionTypes() {
            return base.Channel.GetProfitReductionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProfitReductionTypesAsync() {
            return base.Channel.GetProfitReductionTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProvisionCostConclusionTypes() {
            return base.Channel.GetProvisionCostConclusionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProvisionCostConclusionTypesAsync() {
            return base.Channel.GetProvisionCostConclusionTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProvisionQualityConclusionTypes() {
            return base.Channel.GetProvisionQualityConclusionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProvisionQualityConclusionTypesAsync() {
            return base.Channel.GetProvisionQualityConclusionTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringConclusions() {
            return base.Channel.GetLoanMonitoringConclusions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringConclusionsAsync() {
            return base.Channel.GetLoanMonitoringConclusionsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanMonitoringSubTypes() {
            return base.Channel.GetLoanMonitoringSubTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanMonitoringSubTypesAsync() {
            return base.Channel.GetLoanMonitoringSubTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDemandDepositsTariffGroups() {
            return base.Channel.GetDemandDepositsTariffGroups();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDemandDepositsTariffGroupsAsync() {
            return base.Channel.GetDemandDepositsTariffGroupsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAccountRestrictionGroups(ulong customerNumber) {
            return base.Channel.GetAccountRestrictionGroups(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountRestrictionGroupsAsync(ulong customerNumber) {
            return base.Channel.GetAccountRestrictionGroupsAsync(customerNumber);
        }
        
        public double GetPenaltyRateOfLoans(int productType, System.DateTime startDate) {
            return base.Channel.GetPenaltyRateOfLoans(productType, startDate);
        }
        
        public System.Threading.Tasks.Task<double> GetPenaltyRateOfLoansAsync(int productType, System.DateTime startDate) {
            return base.Channel.GetPenaltyRateOfLoansAsync(productType, startDate);
        }
        
        public System.Nullable<FrontOffice.XBSInfo.KeyValuePairOfstringdateTime> GetDemandDepositRateTariffDocument(byte documentType) {
            return base.Channel.GetDemandDepositRateTariffDocument(documentType);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<FrontOffice.XBSInfo.KeyValuePairOfstringdateTime>> GetDemandDepositRateTariffDocumentAsync(byte documentType) {
            return base.Channel.GetDemandDepositRateTariffDocumentAsync(documentType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetOrderQualityTypesForAcbaOnline() {
            return base.Channel.GetOrderQualityTypesForAcbaOnline();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderQualityTypesForAcbaOnlineAsync() {
            return base.Channel.GetOrderQualityTypesForAcbaOnlineAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProductNotificationInformationTypes() {
            return base.Channel.GetProductNotificationInformationTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationInformationTypesAsync() {
            return base.Channel.GetProductNotificationInformationTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProductNotificationFrequencyTypes(byte informationType) {
            return base.Channel.GetProductNotificationFrequencyTypes(informationType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationFrequencyTypesAsync(byte informationType) {
            return base.Channel.GetProductNotificationFrequencyTypesAsync(informationType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProductNotificationOptionTypes(byte informationType) {
            return base.Channel.GetProductNotificationOptionTypes(informationType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationOptionTypesAsync(byte informationType) {
            return base.Channel.GetProductNotificationOptionTypesAsync(informationType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProductNotificationLanguageTypes(byte informationType) {
            return base.Channel.GetProductNotificationLanguageTypes(informationType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationLanguageTypesAsync(byte informationType) {
            return base.Channel.GetProductNotificationLanguageTypesAsync(informationType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProductNotificationFileFormatTypes() {
            return base.Channel.GetProductNotificationFileFormatTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductNotificationFileFormatTypesAsync() {
            return base.Channel.GetProductNotificationFileFormatTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSwiftMessageTypes() {
            return base.Channel.GetSwiftMessageTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftMessageTypesAsync() {
            return base.Channel.GetSwiftMessageTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSwiftMessageSystemTypes() {
            return base.Channel.GetSwiftMessageSystemTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftMessageSystemTypesAsync() {
            return base.Channel.GetSwiftMessageSystemTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSwiftMessagMtCodes() {
            return base.Channel.GetSwiftMessagMtCodes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftMessagMtCodesAsync() {
            return base.Channel.GetSwiftMessagMtCodesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSwiftMessageAttachmentExistenceTypes() {
            return base.Channel.GetSwiftMessageAttachmentExistenceTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftMessageAttachmentExistenceTypesAsync() {
            return base.Channel.GetSwiftMessageAttachmentExistenceTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetArcaCardSMSServiceActionTypes() {
            return base.Channel.GetArcaCardSMSServiceActionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetArcaCardSMSServiceActionTypesAsync() {
            return base.Channel.GetArcaCardSMSServiceActionTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBondIssueQuality() {
            return base.Channel.GetBondIssueQuality();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondIssueQualityAsync() {
            return base.Channel.GetBondIssueQualityAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBondIssuerTypes() {
            return base.Channel.GetBondIssuerTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondIssuerTypesAsync() {
            return base.Channel.GetBondIssuerTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBondIssuePeriodTypes() {
            return base.Channel.GetBondIssuePeriodTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondIssuePeriodTypesAsync() {
            return base.Channel.GetBondIssuePeriodTypesAsync();
        }
        
        public System.DateTime GetFastOverdrafEndDate(System.DateTime startDate) {
            return base.Channel.GetFastOverdrafEndDate(startDate);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetFastOverdrafEndDateAsync(System.DateTime startDate) {
            return base.Channel.GetFastOverdrafEndDateAsync(startDate);
        }
        
        public System.Collections.Generic.List<int> GetATSFilials() {
            return base.Channel.GetATSFilials();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetATSFilialsAsync() {
            return base.Channel.GetATSFilialsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBanks(FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetBanks(language);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBanksAsync(FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetBanksAsync(language);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBondRejectReasonTypes() {
            return base.Channel.GetBondRejectReasonTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondRejectReasonTypesAsync() {
            return base.Channel.GetBondRejectReasonTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBondQualityTypes() {
            return base.Channel.GetBondQualityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBondQualityTypesAsync() {
            return base.Channel.GetBondQualityTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeOfPaymentDescriptions() {
            return base.Channel.GetTypeOfPaymentDescriptions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfPaymentDescriptionsAsync() {
            return base.Channel.GetTypeOfPaymentDescriptionsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeofPaymentReasonAboutOutTransfering() {
            return base.Channel.GetTypeofPaymentReasonAboutOutTransfering();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeofPaymentReasonAboutOutTransferingAsync() {
            return base.Channel.GetTypeofPaymentReasonAboutOutTransferingAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeofOperDayClosingOptions() {
            return base.Channel.GetTypeofOperDayClosingOptions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeofOperDayClosingOptionsAsync() {
            return base.Channel.GetTypeofOperDayClosingOptionsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeOf24_7Modes() {
            return base.Channel.GetTypeOf24_7Modes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOf24_7ModesAsync() {
            return base.Channel.GetTypeOf24_7ModesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeOfCommunals() {
            return base.Channel.GetTypeOfCommunals();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfCommunalsAsync() {
            return base.Channel.GetTypeOfCommunalsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetActionsForCardTransaction() {
            return base.Channel.GetActionsForCardTransaction();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetActionsForCardTransactionAsync() {
            return base.Channel.GetActionsForCardTransactionAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardLimitChangeOrderActionTypes() {
            return base.Channel.GetCardLimitChangeOrderActionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardLimitChangeOrderActionTypesAsync() {
            return base.Channel.GetCardLimitChangeOrderActionTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetUnFreezeReasonTypesForOrder(int freezeId) {
            return base.Channel.GetUnFreezeReasonTypesForOrder(freezeId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetUnFreezeReasonTypesForOrderAsync(int freezeId) {
            return base.Channel.GetUnFreezeReasonTypesForOrderAsync(freezeId);
        }
        
        public double GetPenaltyRateForDate(System.DateTime date) {
            return base.Channel.GetPenaltyRateForDate(date);
        }
        
        public System.Threading.Tasks.Task<double> GetPenaltyRateForDateAsync(System.DateTime date) {
            return base.Channel.GetPenaltyRateForDateAsync(date);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeOfDepositStatus() {
            return base.Channel.GetTypeOfDepositStatus();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfDepositStatusAsync() {
            return base.Channel.GetTypeOfDepositStatusAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTypeOfDeposit() {
            return base.Channel.GetTypeOfDeposit();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTypeOfDepositAsync() {
            return base.Channel.GetTypeOfDepositAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDepositCurrencies() {
            return base.Channel.GetDepositCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositCurrenciesAsync() {
            return base.Channel.GetDepositCurrenciesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDepositTypes() {
            return base.Channel.GetDepositTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositTypesAsync() {
            return base.Channel.GetDepositTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSwiftPurposeCode() {
            return base.Channel.GetSwiftPurposeCode();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSwiftPurposeCodeAsync() {
            return base.Channel.GetSwiftPurposeCodeAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.Shop> GetShopList() {
            return base.Channel.GetShopList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.Shop>> GetShopListAsync() {
            return base.Channel.GetShopListAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSSTOperationTypes() {
            return base.Channel.GetSSTOperationTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSSTOperationTypesAsync() {
            return base.Channel.GetSSTOperationTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSSTerminals(ushort filialCode) {
            return base.Channel.GetSSTerminals(filialCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSSTerminalsAsync(ushort filialCode) {
            return base.Channel.GetSSTerminalsAsync(filialCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetHBApplicationReportType() {
            return base.Channel.GetHBApplicationReportType();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetHBApplicationReportTypeAsync() {
            return base.Channel.GetHBApplicationReportTypeAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCashOrderCurrencies() {
            return base.Channel.GetCashOrderCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCashOrderCurrenciesAsync() {
            return base.Channel.GetCashOrderCurrenciesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetReasonsForDigitalCardTransactionAction(bool useBank) {
            return base.Channel.GetReasonsForDigitalCardTransactionAction(useBank);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReasonsForDigitalCardTransactionActionAsync(bool useBank) {
            return base.Channel.GetReasonsForDigitalCardTransactionActionAsync(useBank);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCreditLineMandatoryInstallmentTypes() {
            return base.Channel.GetCreditLineMandatoryInstallmentTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCreditLineMandatoryInstallmentTypesAsync() {
            return base.Channel.GetCreditLineMandatoryInstallmentTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransferMethod() {
            return base.Channel.GetTransferMethod();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferMethodAsync() {
            return base.Channel.GetTransferMethodAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAccountStatuses() {
            return base.Channel.GetAccountStatuses();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountStatusesAsync() {
            return base.Channel.GetAccountStatusesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCurrencies() {
            return base.Channel.GetCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCurrenciesAsync() {
            return base.Channel.GetCurrenciesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetInternationalPaymentCurrencies() {
            return base.Channel.GetInternationalPaymentCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetInternationalPaymentCurrenciesAsync() {
            return base.Channel.GetInternationalPaymentCurrenciesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetActiveDepositTypes() {
            return base.Channel.GetActiveDepositTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetActiveDepositTypesAsync() {
            return base.Channel.GetActiveDepositTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetEmbassyList(System.Collections.Generic.List<ushort> referenceTypes) {
            return base.Channel.GetEmbassyList(referenceTypes);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetEmbassyListAsync(System.Collections.Generic.List<ushort> referenceTypes) {
            return base.Channel.GetEmbassyListAsync(referenceTypes);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetReferenceLanguages() {
            return base.Channel.GetReferenceLanguages();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReferenceLanguagesAsync() {
            return base.Channel.GetReferenceLanguagesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOflongstring> GetReferenceTypes() {
            return base.Channel.GetReferenceTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOflongstring>> GetReferenceTypesAsync() {
            return base.Channel.GetReferenceTypesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOflongstring> GetFilialAddressList() {
            return base.Channel.GetFilialAddressList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOflongstring>> GetFilialAddressListAsync() {
            return base.Channel.GetFilialAddressListAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetStatementFrequency() {
            return base.Channel.GetStatementFrequency();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatementFrequencyAsync() {
            return base.Channel.GetStatementFrequencyAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransferTypes(int isActive) {
            return base.Channel.GetTransferTypes(isActive);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferTypesAsync(int isActive) {
            return base.Channel.GetTransferTypesAsync(isActive);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAllTransferTypes() {
            return base.Channel.GetAllTransferTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllTransferTypesAsync() {
            return base.Channel.GetAllTransferTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransferCallQuality() {
            return base.Channel.GetTransferCallQuality();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferCallQualityAsync() {
            return base.Channel.GetTransferCallQualityAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCashOrderTypes() {
            return base.Channel.GetCashOrderTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCashOrderTypesAsync() {
            return base.Channel.GetCashOrderTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetOrderTypes() {
            return base.Channel.GetOrderTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderTypesAsync() {
            return base.Channel.GetOrderTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetOrderQualityTypes() {
            return base.Channel.GetOrderQualityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderQualityTypesAsync() {
            return base.Channel.GetOrderQualityTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLoanQualityTypes() {
            return base.Channel.GetLoanQualityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLoanQualityTypesAsync() {
            return base.Channel.GetLoanQualityTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProblemLoanTaxQualityTypes() {
            return base.Channel.GetProblemLoanTaxQualityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProblemLoanTaxQualityTypesAsync() {
            return base.Channel.GetProblemLoanTaxQualityTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProblemLoanTaxCourtDecisionTypes() {
            return base.Channel.GetProblemLoanTaxCourtDecisionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProblemLoanTaxCourtDecisionTypesAsync() {
            return base.Channel.GetProblemLoanTaxCourtDecisionTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardSystemTypes() {
            return base.Channel.GetCardSystemTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardSystemTypesAsync() {
            return base.Channel.GetCardSystemTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardReportReceivingTypes() {
            return base.Channel.GetCardReportReceivingTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardReportReceivingTypesAsync() {
            return base.Channel.GetCardReportReceivingTypesAsync();
        }
        
        public string GetCustomerLastMotherName(ulong customerNumber) {
            return base.Channel.GetCustomerLastMotherName(customerNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerLastMotherNameAsync(ulong customerNumber) {
            return base.Channel.GetCustomerLastMotherNameAsync(customerNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardPINCodeReceivingTypes() {
            return base.Channel.GetCardPINCodeReceivingTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardPINCodeReceivingTypesAsync() {
            return base.Channel.GetCardPINCodeReceivingTypesAsync();
        }
        
        public string TranslateArmToEnglish(string armString, bool isUnicode) {
            return base.Channel.TranslateArmToEnglish(armString, isUnicode);
        }
        
        public System.Threading.Tasks.Task<string> TranslateArmToEnglishAsync(string armString, bool isUnicode) {
            return base.Channel.TranslateArmToEnglishAsync(armString, isUnicode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardTechnologyTypes() {
            return base.Channel.GetCardTechnologyTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardTechnologyTypesAsync() {
            return base.Channel.GetCardTechnologyTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardTypes(int cardSystem) {
            return base.Channel.GetCardTypes(cardSystem);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardTypesAsync(int cardSystem) {
            return base.Channel.GetCardTypesAsync(cardSystem);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAllCardTypes(int cardSystem) {
            return base.Channel.GetAllCardTypes(cardSystem);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllCardTypesAsync(int cardSystem) {
            return base.Channel.GetAllCardTypesAsync(cardSystem);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBankOperationFeeTypes(int type) {
            return base.Channel.GetBankOperationFeeTypes(type);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBankOperationFeeTypesAsync(int type) {
            return base.Channel.GetBankOperationFeeTypesAsync(type);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardClosingReasons() {
            return base.Channel.GetCardClosingReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardClosingReasonsAsync() {
            return base.Channel.GetCardClosingReasonsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPeriodicsSubTypes(FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetPeriodicsSubTypes(language);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPeriodicsSubTypesAsync(FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetPeriodicsSubTypesAsync(language);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCommunalBranchList(FrontOffice.XBSInfo.CommunalTypes communalType, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetCommunalBranchList(communalType, language);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommunalBranchListAsync(FrontOffice.XBSInfo.CommunalTypes communalType, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetCommunalBranchListAsync(communalType, language);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPeriodicUtilityTypes(FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetPeriodicUtilityTypes(language);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPeriodicUtilityTypesAsync(FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetPeriodicUtilityTypesAsync(language);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public string GetCountyRiskQuality(string country) {
            return base.Channel.GetCountyRiskQuality(country);
        }
        
        public System.Threading.Tasks.Task<string> GetCountyRiskQualityAsync(string country) {
            return base.Channel.GetCountyRiskQualityAsync(country);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCurrentAccountCurrencies() {
            return base.Channel.GetCurrentAccountCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCurrentAccountCurrenciesAsync() {
            return base.Channel.GetCurrentAccountCurrenciesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDepositTypeCurrency(short depositType) {
            return base.Channel.GetDepositTypeCurrency(depositType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDepositTypeCurrencyAsync(short depositType) {
            return base.Channel.GetDepositTypeCurrencyAsync(depositType);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetFilialList() {
            return base.Channel.GetFilialList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetFilialListAsync() {
            return base.Channel.GetFilialListAsync();
        }
        
        public string GetInfoFromSwiftCode(string swiftCode, short type) {
            return base.Channel.GetInfoFromSwiftCode(swiftCode, type);
        }
        
        public System.Threading.Tasks.Task<string> GetInfoFromSwiftCodeAsync(string swiftCode, short type) {
            return base.Channel.GetInfoFromSwiftCodeAsync(swiftCode, type);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetJointTypes() {
            return base.Channel.GetJointTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetJointTypesAsync() {
            return base.Channel.GetJointTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetLTACodes() {
            return base.Channel.GetLTACodes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetLTACodesAsync() {
            return base.Channel.GetLTACodesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPoliceCodes(string accountNumber) {
            return base.Channel.GetPoliceCodes(accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPoliceCodesAsync(string accountNumber) {
            return base.Channel.GetPoliceCodesAsync(accountNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSyntheticStatuses() {
            return base.Channel.GetSyntheticStatuses();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetSyntheticStatusesAsync() {
            return base.Channel.GetSyntheticStatusesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetOperationsList() {
            return base.Channel.GetOperationsList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOperationsListAsync() {
            return base.Channel.GetOperationsListAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPeriodicityTypes() {
            return base.Channel.GetPeriodicityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPeriodicityTypesAsync() {
            return base.Channel.GetPeriodicityTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetStatementDeliveryTypes() {
            return base.Channel.GetStatementDeliveryTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatementDeliveryTypesAsync() {
            return base.Channel.GetStatementDeliveryTypesAsync();
        }
        
        public string GetSyntheticStatus(string value) {
            return base.Channel.GetSyntheticStatus(value);
        }
        
        public System.Threading.Tasks.Task<string> GetSyntheticStatusAsync(string value) {
            return base.Channel.GetSyntheticStatusAsync(value);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransferSystemCurrency(int transfersystem) {
            return base.Channel.GetTransferSystemCurrency(transfersystem);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransferSystemCurrencyAsync(int transfersystem) {
            return base.Channel.GetTransferSystemCurrencyAsync(transfersystem);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTransitAccountTypes(bool forLoanMature) {
            return base.Channel.GetTransitAccountTypes(forLoanMature);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTransitAccountTypesAsync(bool forLoanMature) {
            return base.Channel.GetTransitAccountTypesAsync(forLoanMature);
        }
        
        public System.Collections.Generic.Dictionary<string, string> SearchRelatedOfficeTypes(string officeId, string officeName) {
            return base.Channel.SearchRelatedOfficeTypes(officeId, officeName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> SearchRelatedOfficeTypesAsync(string officeId, string officeName) {
            return base.Channel.SearchRelatedOfficeTypesAsync(officeId, officeName);
        }
        
        public string GetBank(int code, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetBank(code, language);
        }
        
        public System.Threading.Tasks.Task<string> GetBankAsync(int code, FrontOffice.XBSInfo.Languages language) {
            return base.Channel.GetBankAsync(code, language);
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfintint> GetAutoConfirmOrderTypes() {
            return base.Channel.GetAutoConfirmOrderTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfintint>> GetAutoConfirmOrderTypesAsync() {
            return base.Channel.GetAutoConfirmOrderTypesAsync();
        }
        
        public void Init(string clientIp, byte language) {
            base.Channel.Init(clientIp, language);
        }
        
        public System.Threading.Tasks.Task InitAsync(string clientIp, byte language) {
            return base.Channel.InitAsync(clientIp, language);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAccountFreezeReasonsTypes() {
            return base.Channel.GetAccountFreezeReasonsTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountFreezeReasonsTypesAsync() {
            return base.Channel.GetAccountFreezeReasonsTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDisputeResolutions() {
            return base.Channel.GetDisputeResolutions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDisputeResolutionsAsync() {
            return base.Channel.GetDisputeResolutionsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCommunicationTypes() {
            return base.Channel.GetCommunicationTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommunicationTypesAsync() {
            return base.Channel.GetCommunicationTypesAsync();
        }
        
        public void ClearAllCache() {
            base.Channel.ClearAllCache();
        }
        
        public System.Threading.Tasks.Task ClearAllCacheAsync() {
            return base.Channel.ClearAllCacheAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetServiceProvidedTypes() {
            return base.Channel.GetServiceProvidedTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetServiceProvidedTypesAsync() {
            return base.Channel.GetServiceProvidedTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetOrderRemovingReasons() {
            return base.Channel.GetOrderRemovingReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOrderRemovingReasonsAsync() {
            return base.Channel.GetOrderRemovingReasonsAsync();
        }
        
        public bool IsWorkingDay(System.DateTime date) {
            return base.Channel.IsWorkingDay(date);
        }
        
        public System.Threading.Tasks.Task<bool> IsWorkingDayAsync(System.DateTime date) {
            return base.Channel.IsWorkingDayAsync(date);
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.TupleOfintintstringboolean> GetAssigneeOperationTypes(int groupId, int typeOfCustomer) {
            return base.Channel.GetAssigneeOperationTypes(groupId, typeOfCustomer);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.TupleOfintintstringboolean>> GetAssigneeOperationTypesAsync(int groupId, int typeOfCustomer) {
            return base.Channel.GetAssigneeOperationTypesAsync(groupId, typeOfCustomer);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAssigneeOperationGroupTypes(int typeOfCustomer) {
            return base.Channel.GetAssigneeOperationGroupTypes(typeOfCustomer);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAssigneeOperationGroupTypesAsync(int typeOfCustomer) {
            return base.Channel.GetAssigneeOperationGroupTypesAsync(typeOfCustomer);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCredentialTypes(int typeOfCustomer, int customerFilialCode, int userFilialCode) {
            return base.Channel.GetCredentialTypes(typeOfCustomer, customerFilialCode, userFilialCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCredentialTypesAsync(int typeOfCustomer, int customerFilialCode, int userFilialCode) {
            return base.Channel.GetCredentialTypesAsync(typeOfCustomer, customerFilialCode, userFilialCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCredentialClosingReasons() {
            return base.Channel.GetCredentialClosingReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCredentialClosingReasonsAsync() {
            return base.Channel.GetCredentialClosingReasonsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAccountClosingReasonsTypes() {
            return base.Channel.GetAccountClosingReasonsTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountClosingReasonsTypesAsync() {
            return base.Channel.GetAccountClosingReasonsTypesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.ActionPermission> GetActionPermissionTypes() {
            return base.Channel.GetActionPermissionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.ActionPermission>> GetActionPermissionTypesAsync() {
            return base.Channel.GetActionPermissionTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetReferenceTypesDict() {
            return base.Channel.GetReferenceTypesDict();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetReferenceTypesDictAsync() {
            return base.Channel.GetReferenceTypesDictAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetMonths() {
            return base.Channel.GetMonths();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetMonthsAsync() {
            return base.Channel.GetMonthsAsync();
        }
        
        public FrontOffice.XBSInfo.KeyValuePairOfstringstring GetCommunalDate(FrontOffice.XBSInfo.CommunalTypes cmnlType, short abonentType) {
            return base.Channel.GetCommunalDate(cmnlType, abonentType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.XBSInfo.KeyValuePairOfstringstring> GetCommunalDateAsync(FrontOffice.XBSInfo.CommunalTypes cmnlType, short abonentType) {
            return base.Channel.GetCommunalDateAsync(cmnlType, abonentType);
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetServicePaymentNoteReasons() {
            return base.Channel.GetServicePaymentNoteReasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetServicePaymentNoteReasonsAsync() {
            return base.Channel.GetServicePaymentNoteReasonsAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetTransferAmountPurposes() {
            return base.Channel.GetTransferAmountPurposes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetTransferAmountPurposesAsync() {
            return base.Channel.GetTransferAmountPurposesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetTransferSenderLivingPlaceTypes() {
            return base.Channel.GetTransferSenderLivingPlaceTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetTransferSenderLivingPlaceTypesAsync() {
            return base.Channel.GetTransferSenderLivingPlaceTypesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetTransferReceiverLivingPlaceTypes() {
            return base.Channel.GetTransferReceiverLivingPlaceTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetTransferReceiverLivingPlaceTypesAsync() {
            return base.Channel.GetTransferReceiverLivingPlaceTypesAsync();
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring> GetTransferAmountTypes() {
            return base.Channel.GetTransferAmountTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfunsignedShortstring>> GetTransferAmountTypesAsync() {
            return base.Channel.GetTransferAmountTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPensionAppliactionQualityTypes() {
            return base.Channel.GetPensionAppliactionQualityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPensionAppliactionQualityTypesAsync() {
            return base.Channel.GetPensionAppliactionQualityTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPensionAppliactionServiceTypes() {
            return base.Channel.GetPensionAppliactionServiceTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPensionAppliactionServiceTypesAsync() {
            return base.Channel.GetPensionAppliactionServiceTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPensionAppliactionClosingTypes() {
            return base.Channel.GetPensionAppliactionClosingTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPensionAppliactionClosingTypesAsync() {
            return base.Channel.GetPensionAppliactionClosingTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCardsType() {
            return base.Channel.GetCardsType();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCardsTypeAsync() {
            return base.Channel.GetCardsTypeAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetOpenCardsType() {
            return base.Channel.GetOpenCardsType();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetOpenCardsTypeAsync() {
            return base.Channel.GetOpenCardsTypeAsync();
        }
        
        public ulong GetLastKeyNumber(int keyId, ushort filialCode) {
            return base.Channel.GetLastKeyNumber(keyId, filialCode);
        }
        
        public System.Threading.Tasks.Task<ulong> GetLastKeyNumberAsync(int keyId, ushort filialCode) {
            return base.Channel.GetLastKeyNumberAsync(keyId, filialCode);
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfstringstring> GetCurNominals(string currency) {
            return base.Channel.GetCurNominals(currency);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.KeyValuePairOfstringstring>> GetCurNominalsAsync(string currency) {
            return base.Channel.GetCurNominalsAsync(currency);
        }
        
        public System.Collections.Generic.List<System.DateTime> GetWaterCoDebtDates(ushort code) {
            return base.Channel.GetWaterCoDebtDates(code);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.DateTime>> GetWaterCoDebtDatesAsync(ushort code) {
            return base.Channel.GetWaterCoDebtDatesAsync(code);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetWaterCoBranches(ushort filialCode) {
            return base.Channel.GetWaterCoBranches(filialCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetWaterCoBranchesAsync(ushort filialCode) {
            return base.Channel.GetWaterCoBranchesAsync(filialCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetWaterCoCitys(ushort code) {
            return base.Channel.GetWaterCoCitys(code);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetWaterCoCitysAsync(ushort code) {
            return base.Channel.GetWaterCoCitysAsync(code);
        }
        
        public System.Collections.Generic.List<FrontOffice.XBSInfo.WaterCoDetail> GetWaterCoDetails() {
            return base.Channel.GetWaterCoDetails();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.XBSInfo.WaterCoDetail>> GetWaterCoDetailsAsync() {
            return base.Channel.GetWaterCoDetailsAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProvisionTypes() {
            return base.Channel.GetProvisionTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProvisionTypesAsync() {
            return base.Channel.GetProvisionTypesAsync();
        }
        
        public System.Collections.Generic.Dictionary<System.Nullable<int>, string> GetSMSMessagingStatusTypes() {
            return base.Channel.GetSMSMessagingStatusTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.Nullable<int>, string>> GetSMSMessagingStatusTypesAsync() {
            return base.Channel.GetSMSMessagingStatusTypesAsync();
        }
    }
}
