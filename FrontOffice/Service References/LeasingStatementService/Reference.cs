//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrontOffice.LeasingStatementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeasingStatementSession", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class LeasingStatementSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatementEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatementStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statementTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((this.ScheduleField.Equals(value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionNumber {
            get {
                return this.SessionNumberField;
            }
            set {
                if ((this.SessionNumberField.Equals(value) != true)) {
                    this.SessionNumberField = value;
                    this.RaisePropertyChanged("SessionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatementEndDate {
            get {
                return this.StatementEndDateField;
            }
            set {
                if ((this.StatementEndDateField.Equals(value) != true)) {
                    this.StatementEndDateField = value;
                    this.RaisePropertyChanged("StatementEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatementStartDate {
            get {
                return this.StatementStartDateField;
            }
            set {
                if ((this.StatementStartDateField.Equals(value) != true)) {
                    this.StatementStartDateField = value;
                    this.RaisePropertyChanged("StatementStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int statementType {
            get {
                return this.statementTypeField;
            }
            set {
                if ((this.statementTypeField.Equals(value) != true)) {
                    this.statementTypeField = value;
                    this.RaisePropertyChanged("statementType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionResult", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class ActionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.LeasingStatementService.ActionError> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.LeasingStatementService.ResultCode ResultCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.LeasingStatementService.ActionError> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.LeasingStatementService.ResultCode ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionError", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class ActionError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ParamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultCode", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    public enum ResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAutorized = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedNotConfirmed = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoneAutoConfirm = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> AdvancedOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAutorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsChiefAccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSessionTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort filialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong number_of_itemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int transRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong userCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userPermissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountGroup {
            get {
                return this.AccountGroupField;
            }
            set {
                if ((this.AccountGroupField.Equals(value) != true)) {
                    this.AccountGroupField = value;
                    this.RaisePropertyChanged("AccountGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> AdvancedOptions {
            get {
                return this.AdvancedOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvancedOptionsField, value) != true)) {
                    this.AdvancedOptionsField = value;
                    this.RaisePropertyChanged("AdvancedOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAutorized {
            get {
                return this.IsAutorizedField;
            }
            set {
                if ((this.IsAutorizedField.Equals(value) != true)) {
                    this.IsAutorizedField = value;
                    this.RaisePropertyChanged("IsAutorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChiefAcc {
            get {
                return this.IsChiefAccField;
            }
            set {
                if ((this.IsChiefAccField.Equals(value) != true)) {
                    this.IsChiefAccField = value;
                    this.RaisePropertyChanged("IsChiefAcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionName {
            get {
                return this.PositionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionNameField, value) != true)) {
                    this.PositionNameField = value;
                    this.RaisePropertyChanged("PositionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionLimit {
            get {
                return this.TransactionLimitField;
            }
            set {
                if ((this.TransactionLimitField.Equals(value) != true)) {
                    this.TransactionLimitField = value;
                    this.RaisePropertyChanged("TransactionLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSessionToken {
            get {
                return this.UserSessionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSessionTokenField, value) != true)) {
                    this.UserSessionTokenField = value;
                    this.RaisePropertyChanged("UserSessionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort filialCode {
            get {
                return this.filialCodeField;
            }
            set {
                if ((this.filialCodeField.Equals(value) != true)) {
                    this.filialCodeField = value;
                    this.RaisePropertyChanged("filialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong number_of_item {
            get {
                return this.number_of_itemField;
            }
            set {
                if ((this.number_of_itemField.Equals(value) != true)) {
                    this.number_of_itemField = value;
                    this.RaisePropertyChanged("number_of_item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int transRight {
            get {
                return this.transRightField;
            }
            set {
                if ((this.transRightField.Equals(value) != true)) {
                    this.transRightField = value;
                    this.RaisePropertyChanged("transRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong userCustomerNumber {
            get {
                return this.userCustomerNumberField;
            }
            set {
                if ((this.userCustomerNumberField.Equals(value) != true)) {
                    this.userCustomerNumberField = value;
                    this.RaisePropertyChanged("userCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userPermissionId {
            get {
                return this.userPermissionIdField;
            }
            set {
                if ((this.userPermissionIdField.Equals(value) != true)) {
                    this.userPermissionIdField = value;
                    this.RaisePropertyChanged("userPermissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeasingStatementSessionDetails", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class LeasingStatementSessionDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedStatementCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedStatementCountEXCELField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedStatementCountPDFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RejectedStatementCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SentStatementCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubscriptionRunningDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalStatementCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedStatementCount {
            get {
                return this.CreatedStatementCountField;
            }
            set {
                if ((this.CreatedStatementCountField.Equals(value) != true)) {
                    this.CreatedStatementCountField = value;
                    this.RaisePropertyChanged("CreatedStatementCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedStatementCountEXCEL {
            get {
                return this.CreatedStatementCountEXCELField;
            }
            set {
                if ((this.CreatedStatementCountEXCELField.Equals(value) != true)) {
                    this.CreatedStatementCountEXCELField = value;
                    this.RaisePropertyChanged("CreatedStatementCountEXCEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedStatementCountPDF {
            get {
                return this.CreatedStatementCountPDFField;
            }
            set {
                if ((this.CreatedStatementCountPDFField.Equals(value) != true)) {
                    this.CreatedStatementCountPDFField = value;
                    this.RaisePropertyChanged("CreatedStatementCountPDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RejectedStatementCount {
            get {
                return this.RejectedStatementCountField;
            }
            set {
                if ((this.RejectedStatementCountField.Equals(value) != true)) {
                    this.RejectedStatementCountField = value;
                    this.RaisePropertyChanged("RejectedStatementCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SentStatementCount {
            get {
                return this.SentStatementCountField;
            }
            set {
                if ((this.SentStatementCountField.Equals(value) != true)) {
                    this.SentStatementCountField = value;
                    this.RaisePropertyChanged("SentStatementCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubscriptionRunningDate {
            get {
                return this.SubscriptionRunningDateField;
            }
            set {
                if ((this.SubscriptionRunningDateField.Equals(value) != true)) {
                    this.SubscriptionRunningDateField = value;
                    this.RaisePropertyChanged("SubscriptionRunningDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalStatementCount {
            get {
                return this.TotalStatementCountField;
            }
            set {
                if ((this.TotalStatementCountField.Equals(value) != true)) {
                    this.TotalStatementCountField = value;
                    this.RaisePropertyChanged("TotalStatementCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatementSessionHistory", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class StatementSessionHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeDateStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint userIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeDateString {
            get {
                return this.ChangeDateStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeDateStringField, value) != true)) {
                    this.ChangeDateStringField = value;
                    this.RaisePropertyChanged("ChangeDateString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeUserName {
            get {
                return this.ChangeUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeUserNameField, value) != true)) {
                    this.ChangeUserNameField = value;
                    this.RaisePropertyChanged("ChangeUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdvertisementConfiguration", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class AdvertisementConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeasingSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeasingSystemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeasingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeasingTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.LeasingStatementService.Advertisement> OneLeasingAdvertisementsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeasingSystem {
            get {
                return this.LeasingSystemField;
            }
            set {
                if ((this.LeasingSystemField.Equals(value) != true)) {
                    this.LeasingSystemField = value;
                    this.RaisePropertyChanged("LeasingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeasingSystemDescription {
            get {
                return this.LeasingSystemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LeasingSystemDescriptionField, value) != true)) {
                    this.LeasingSystemDescriptionField = value;
                    this.RaisePropertyChanged("LeasingSystemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeasingType {
            get {
                return this.LeasingTypeField;
            }
            set {
                if ((this.LeasingTypeField.Equals(value) != true)) {
                    this.LeasingTypeField = value;
                    this.RaisePropertyChanged("LeasingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeasingTypeDescription {
            get {
                return this.LeasingTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LeasingTypeDescriptionField, value) != true)) {
                    this.LeasingTypeDescriptionField = value;
                    this.RaisePropertyChanged("LeasingTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.LeasingStatementService.Advertisement> OneLeasingAdvertisements {
            get {
                return this.OneLeasingAdvertisementsField;
            }
            set {
                if ((object.ReferenceEquals(this.OneLeasingAdvertisementsField, value) != true)) {
                    this.OneLeasingAdvertisementsField = value;
                    this.RaisePropertyChanged("OneLeasingAdvertisements");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Advertisement", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class Advertisement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.LeasingStatementService.AdvertisementConfiguration> AllLeasingsAdvertisementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FrontOffice.LeasingStatementService.AdvertisementFile CurrentFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FrontOffice.LeasingStatementService.AdvertisementFile> FilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((this.ActivityField.Equals(value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.LeasingStatementService.AdvertisementConfiguration> AllLeasingsAdvertisements {
            get {
                return this.AllLeasingsAdvertisementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AllLeasingsAdvertisementsField, value) != true)) {
                    this.AllLeasingsAdvertisementsField = value;
                    this.RaisePropertyChanged("AllLeasingsAdvertisements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FrontOffice.LeasingStatementService.AdvertisementFile CurrentFile {
            get {
                return this.CurrentFileField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentFileField, value) != true)) {
                    this.CurrentFileField = value;
                    this.RaisePropertyChanged("CurrentFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FrontOffice.LeasingStatementService.AdvertisementFile> Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdvertisementFile", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class AdvertisementFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Announcement", Namespace="http://schemas.datacontract.org/2004/07/LeasingStatementManagement")]
    [System.SerializableAttribute()]
    public partial class Announcement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime creationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statementTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime creationDate {
            get {
                return this.creationDateField;
            }
            set {
                if ((this.creationDateField.Equals(value) != true)) {
                    this.creationDateField = value;
                    this.RaisePropertyChanged("creationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filePath {
            get {
                return this.filePathField;
            }
            set {
                if ((object.ReferenceEquals(this.filePathField, value) != true)) {
                    this.filePathField = value;
                    this.RaisePropertyChanged("filePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statementType {
            get {
                return this.statementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.statementTypeField, value) != true)) {
                    this.statementTypeField = value;
                    this.RaisePropertyChanged("statementType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LeasingStatementService.ILeasingStatementService")]
    public interface ILeasingStatementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetLeasingStatementSessions", ReplyAction="http://tempuri.org/ILeasingStatementService/GetLeasingStatementSessionsResponse")]
        System.Collections.Generic.List<FrontOffice.LeasingStatementService.LeasingStatementSession> GetLeasingStatementSessions(int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetLeasingStatementSessions", ReplyAction="http://tempuri.org/ILeasingStatementService/GetLeasingStatementSessionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.LeasingStatementService.LeasingStatementSession>> GetLeasingStatementSessionsAsync(int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/CreateLeasingStatementSession", ReplyAction="http://tempuri.org/ILeasingStatementService/CreateLeasingStatementSessionResponse" +
            "")]
        FrontOffice.LeasingStatementService.ActionResult CreateLeasingStatementSession(System.DateTime periodStart, System.DateTime periodEnd, int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/CreateLeasingStatementSession", ReplyAction="http://tempuri.org/ILeasingStatementService/CreateLeasingStatementSessionResponse" +
            "")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> CreateLeasingStatementSessionAsync(System.DateTime periodStart, System.DateTime periodEnd, int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/DeleteLeasingStatementSession", ReplyAction="http://tempuri.org/ILeasingStatementService/DeleteLeasingStatementSessionResponse" +
            "")]
        FrontOffice.LeasingStatementService.ActionResult DeleteLeasingStatementSession(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/DeleteLeasingStatementSession", ReplyAction="http://tempuri.org/ILeasingStatementService/DeleteLeasingStatementSessionResponse" +
            "")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> DeleteLeasingStatementSessionAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/SetCurrentUser", ReplyAction="http://tempuri.org/ILeasingStatementService/SetCurrentUserResponse")]
        void SetCurrentUser(FrontOffice.LeasingStatementService.User client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/SetCurrentUser", ReplyAction="http://tempuri.org/ILeasingStatementService/SetCurrentUserResponse")]
        System.Threading.Tasks.Task SetCurrentUserAsync(FrontOffice.LeasingStatementService.User client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetStatementSessionQualityTypes", ReplyAction="http://tempuri.org/ILeasingStatementService/GetStatementSessionQualityTypesRespon" +
            "se")]
        System.Collections.Generic.Dictionary<string, string> GetStatementSessionQualityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetStatementSessionQualityTypes", ReplyAction="http://tempuri.org/ILeasingStatementService/GetStatementSessionQualityTypesRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatementSessionQualityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetLeasingSessionDetails", ReplyAction="http://tempuri.org/ILeasingStatementService/GetLeasingSessionDetailsResponse")]
        FrontOffice.LeasingStatementService.LeasingStatementSessionDetails GetLeasingSessionDetails(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetLeasingSessionDetails", ReplyAction="http://tempuri.org/ILeasingStatementService/GetLeasingSessionDetailsResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.LeasingStatementSessionDetails> GetLeasingSessionDetailsAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetSatementHistory", ReplyAction="http://tempuri.org/ILeasingStatementService/GetSatementHistoryResponse")]
        System.Collections.Generic.List<FrontOffice.LeasingStatementService.StatementSessionHistory> GetSatementHistory(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetSatementHistory", ReplyAction="http://tempuri.org/ILeasingStatementService/GetSatementHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.LeasingStatementService.StatementSessionHistory>> GetSatementHistoryAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/StartLeasingStatementSessionSubscript" +
            "ion", ReplyAction="http://tempuri.org/ILeasingStatementService/StartLeasingStatementSessionSubscript" +
            "ionResponse")]
        FrontOffice.LeasingStatementService.ActionResult StartLeasingStatementSessionSubscription(int sessionID, int startType, System.DateTime schedule, int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/StartLeasingStatementSessionSubscript" +
            "ion", ReplyAction="http://tempuri.org/ILeasingStatementService/StartLeasingStatementSessionSubscript" +
            "ionResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> StartLeasingStatementSessionSubscriptionAsync(int sessionID, int startType, System.DateTime schedule, int statementType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/ChangeLeasingStatementSessionStatus", ReplyAction="http://tempuri.org/ILeasingStatementService/ChangeLeasingStatementSessionStatusRe" +
            "sponse")]
        int ChangeLeasingStatementSessionStatus(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/ChangeLeasingStatementSessionStatus", ReplyAction="http://tempuri.org/ILeasingStatementService/ChangeLeasingStatementSessionStatusRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> ChangeLeasingStatementSessionStatusAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/DeleteLeasingStatementSessionSchedule" +
            "", ReplyAction="http://tempuri.org/ILeasingStatementService/DeleteLeasingStatementSessionSchedule" +
            "Response")]
        FrontOffice.LeasingStatementService.ActionResult DeleteLeasingStatementSessionSchedule(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/DeleteLeasingStatementSessionSchedule" +
            "", ReplyAction="http://tempuri.org/ILeasingStatementService/DeleteLeasingStatementSessionSchedule" +
            "Response")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> DeleteLeasingStatementSessionScheduleAsync(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetOneLeasingAdvertisements", ReplyAction="http://tempuri.org/ILeasingStatementService/GetOneLeasingAdvertisementsResponse")]
        FrontOffice.LeasingStatementService.AdvertisementConfiguration GetOneLeasingAdvertisements(int LeasingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetOneLeasingAdvertisements", ReplyAction="http://tempuri.org/ILeasingStatementService/GetOneLeasingAdvertisementsResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.AdvertisementConfiguration> GetOneLeasingAdvertisementsAsync(int LeasingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetAllLeasingsAdvertisements", ReplyAction="http://tempuri.org/ILeasingStatementService/GetAllLeasingsAdvertisementsResponse")]
        FrontOffice.LeasingStatementService.Advertisement GetAllLeasingsAdvertisements();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetAllLeasingsAdvertisements", ReplyAction="http://tempuri.org/ILeasingStatementService/GetAllLeasingsAdvertisementsResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.Advertisement> GetAllLeasingsAdvertisementsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetAdvertisementFiles", ReplyAction="http://tempuri.org/ILeasingStatementService/GetAdvertisementFilesResponse")]
        FrontOffice.LeasingStatementService.Advertisement GetAdvertisementFiles(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetAdvertisementFiles", ReplyAction="http://tempuri.org/ILeasingStatementService/GetAdvertisementFilesResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.Advertisement> GetAdvertisementFilesAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetAdvertisementFileByID", ReplyAction="http://tempuri.org/ILeasingStatementService/GetAdvertisementFileByIDResponse")]
        FrontOffice.LeasingStatementService.AdvertisementFile GetAdvertisementFileByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetAdvertisementFileByID", ReplyAction="http://tempuri.org/ILeasingStatementService/GetAdvertisementFileByIDResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.AdvertisementFile> GetAdvertisementFileByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/UpdateAdvertisementWithNewFile", ReplyAction="http://tempuri.org/ILeasingStatementService/UpdateAdvertisementWithNewFileRespons" +
            "e")]
        FrontOffice.LeasingStatementService.ActionResult UpdateAdvertisementWithNewFile(FrontOffice.LeasingStatementService.Advertisement advertisement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/UpdateAdvertisementWithNewFile", ReplyAction="http://tempuri.org/ILeasingStatementService/UpdateAdvertisementWithNewFileRespons" +
            "e")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> UpdateAdvertisementWithNewFileAsync(FrontOffice.LeasingStatementService.Advertisement advertisement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/InsertAdvertisement", ReplyAction="http://tempuri.org/ILeasingStatementService/InsertAdvertisementResponse")]
        FrontOffice.LeasingStatementService.ActionResult InsertAdvertisement(FrontOffice.LeasingStatementService.AdvertisementConfiguration statementAdvertisements);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/InsertAdvertisement", ReplyAction="http://tempuri.org/ILeasingStatementService/InsertAdvertisementResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> InsertAdvertisementAsync(FrontOffice.LeasingStatementService.AdvertisementConfiguration statementAdvertisements);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/DeactivateAdvertisement", ReplyAction="http://tempuri.org/ILeasingStatementService/DeactivateAdvertisementResponse")]
        FrontOffice.LeasingStatementService.ActionResult DeactivateAdvertisement(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/DeactivateAdvertisement", ReplyAction="http://tempuri.org/ILeasingStatementService/DeactivateAdvertisementResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> DeactivateAdvertisementAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetStatements", ReplyAction="http://tempuri.org/ILeasingStatementService/GetStatementsResponse")]
        System.Collections.Generic.List<FrontOffice.LeasingStatementService.Announcement> GetStatements(ulong userID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int statementType, int pageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetStatements", ReplyAction="http://tempuri.org/ILeasingStatementService/GetStatementsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.LeasingStatementService.Announcement>> GetStatementsAsync(ulong userID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int statementType, int pageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetStatementPath", ReplyAction="http://tempuri.org/ILeasingStatementService/GetStatementPathResponse")]
        string GetStatementPath(string guId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/GetStatementPath", ReplyAction="http://tempuri.org/ILeasingStatementService/GetStatementPathResponse")]
        System.Threading.Tasks.Task<string> GetStatementPathAsync(string guId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/RunLeasingStatementSessionSubscriptio" +
            "n", ReplyAction="http://tempuri.org/ILeasingStatementService/RunLeasingStatementSessionSubscriptio" +
            "nResponse")]
        FrontOffice.LeasingStatementService.ActionResult RunLeasingStatementSessionSubscription(int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeasingStatementService/RunLeasingStatementSessionSubscriptio" +
            "n", ReplyAction="http://tempuri.org/ILeasingStatementService/RunLeasingStatementSessionSubscriptio" +
            "nResponse")]
        System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> RunLeasingStatementSessionSubscriptionAsync(int sessionID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeasingStatementServiceChannel : FrontOffice.LeasingStatementService.ILeasingStatementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeasingStatementServiceClient : System.ServiceModel.ClientBase<FrontOffice.LeasingStatementService.ILeasingStatementService>, FrontOffice.LeasingStatementService.ILeasingStatementService {
        
        public LeasingStatementServiceClient() {
        }
        
        public LeasingStatementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeasingStatementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeasingStatementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeasingStatementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<FrontOffice.LeasingStatementService.LeasingStatementSession> GetLeasingStatementSessions(int statementType) {
            return base.Channel.GetLeasingStatementSessions(statementType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.LeasingStatementService.LeasingStatementSession>> GetLeasingStatementSessionsAsync(int statementType) {
            return base.Channel.GetLeasingStatementSessionsAsync(statementType);
        }
        
        public FrontOffice.LeasingStatementService.ActionResult CreateLeasingStatementSession(System.DateTime periodStart, System.DateTime periodEnd, int statementType) {
            return base.Channel.CreateLeasingStatementSession(periodStart, periodEnd, statementType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> CreateLeasingStatementSessionAsync(System.DateTime periodStart, System.DateTime periodEnd, int statementType) {
            return base.Channel.CreateLeasingStatementSessionAsync(periodStart, periodEnd, statementType);
        }
        
        public FrontOffice.LeasingStatementService.ActionResult DeleteLeasingStatementSession(int sessionID) {
            return base.Channel.DeleteLeasingStatementSession(sessionID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> DeleteLeasingStatementSessionAsync(int sessionID) {
            return base.Channel.DeleteLeasingStatementSessionAsync(sessionID);
        }
        
        public void SetCurrentUser(FrontOffice.LeasingStatementService.User client) {
            base.Channel.SetCurrentUser(client);
        }
        
        public System.Threading.Tasks.Task SetCurrentUserAsync(FrontOffice.LeasingStatementService.User client) {
            return base.Channel.SetCurrentUserAsync(client);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetStatementSessionQualityTypes() {
            return base.Channel.GetStatementSessionQualityTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatementSessionQualityTypesAsync() {
            return base.Channel.GetStatementSessionQualityTypesAsync();
        }
        
        public FrontOffice.LeasingStatementService.LeasingStatementSessionDetails GetLeasingSessionDetails(int sessionID) {
            return base.Channel.GetLeasingSessionDetails(sessionID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.LeasingStatementSessionDetails> GetLeasingSessionDetailsAsync(int sessionID) {
            return base.Channel.GetLeasingSessionDetailsAsync(sessionID);
        }
        
        public System.Collections.Generic.List<FrontOffice.LeasingStatementService.StatementSessionHistory> GetSatementHistory(int sessionID) {
            return base.Channel.GetSatementHistory(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.LeasingStatementService.StatementSessionHistory>> GetSatementHistoryAsync(int sessionID) {
            return base.Channel.GetSatementHistoryAsync(sessionID);
        }
        
        public FrontOffice.LeasingStatementService.ActionResult StartLeasingStatementSessionSubscription(int sessionID, int startType, System.DateTime schedule, int statementType) {
            return base.Channel.StartLeasingStatementSessionSubscription(sessionID, startType, schedule, statementType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> StartLeasingStatementSessionSubscriptionAsync(int sessionID, int startType, System.DateTime schedule, int statementType) {
            return base.Channel.StartLeasingStatementSessionSubscriptionAsync(sessionID, startType, schedule, statementType);
        }
        
        public int ChangeLeasingStatementSessionStatus(int sessionID) {
            return base.Channel.ChangeLeasingStatementSessionStatus(sessionID);
        }
        
        public System.Threading.Tasks.Task<int> ChangeLeasingStatementSessionStatusAsync(int sessionID) {
            return base.Channel.ChangeLeasingStatementSessionStatusAsync(sessionID);
        }
        
        public FrontOffice.LeasingStatementService.ActionResult DeleteLeasingStatementSessionSchedule(int sessionID) {
            return base.Channel.DeleteLeasingStatementSessionSchedule(sessionID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> DeleteLeasingStatementSessionScheduleAsync(int sessionID) {
            return base.Channel.DeleteLeasingStatementSessionScheduleAsync(sessionID);
        }
        
        public FrontOffice.LeasingStatementService.AdvertisementConfiguration GetOneLeasingAdvertisements(int LeasingType) {
            return base.Channel.GetOneLeasingAdvertisements(LeasingType);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.AdvertisementConfiguration> GetOneLeasingAdvertisementsAsync(int LeasingType) {
            return base.Channel.GetOneLeasingAdvertisementsAsync(LeasingType);
        }
        
        public FrontOffice.LeasingStatementService.Advertisement GetAllLeasingsAdvertisements() {
            return base.Channel.GetAllLeasingsAdvertisements();
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.Advertisement> GetAllLeasingsAdvertisementsAsync() {
            return base.Channel.GetAllLeasingsAdvertisementsAsync();
        }
        
        public FrontOffice.LeasingStatementService.Advertisement GetAdvertisementFiles(int ID) {
            return base.Channel.GetAdvertisementFiles(ID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.Advertisement> GetAdvertisementFilesAsync(int ID) {
            return base.Channel.GetAdvertisementFilesAsync(ID);
        }
        
        public FrontOffice.LeasingStatementService.AdvertisementFile GetAdvertisementFileByID(int ID) {
            return base.Channel.GetAdvertisementFileByID(ID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.AdvertisementFile> GetAdvertisementFileByIDAsync(int ID) {
            return base.Channel.GetAdvertisementFileByIDAsync(ID);
        }
        
        public FrontOffice.LeasingStatementService.ActionResult UpdateAdvertisementWithNewFile(FrontOffice.LeasingStatementService.Advertisement advertisement) {
            return base.Channel.UpdateAdvertisementWithNewFile(advertisement);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> UpdateAdvertisementWithNewFileAsync(FrontOffice.LeasingStatementService.Advertisement advertisement) {
            return base.Channel.UpdateAdvertisementWithNewFileAsync(advertisement);
        }
        
        public FrontOffice.LeasingStatementService.ActionResult InsertAdvertisement(FrontOffice.LeasingStatementService.AdvertisementConfiguration statementAdvertisements) {
            return base.Channel.InsertAdvertisement(statementAdvertisements);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> InsertAdvertisementAsync(FrontOffice.LeasingStatementService.AdvertisementConfiguration statementAdvertisements) {
            return base.Channel.InsertAdvertisementAsync(statementAdvertisements);
        }
        
        public FrontOffice.LeasingStatementService.ActionResult DeactivateAdvertisement(int ID) {
            return base.Channel.DeactivateAdvertisement(ID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> DeactivateAdvertisementAsync(int ID) {
            return base.Channel.DeactivateAdvertisementAsync(ID);
        }
        
        public System.Collections.Generic.List<FrontOffice.LeasingStatementService.Announcement> GetStatements(ulong userID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int statementType, int pageNumber) {
            return base.Channel.GetStatements(userID, startDate, endDate, statementType, pageNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FrontOffice.LeasingStatementService.Announcement>> GetStatementsAsync(ulong userID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int statementType, int pageNumber) {
            return base.Channel.GetStatementsAsync(userID, startDate, endDate, statementType, pageNumber);
        }
        
        public string GetStatementPath(string guId) {
            return base.Channel.GetStatementPath(guId);
        }
        
        public System.Threading.Tasks.Task<string> GetStatementPathAsync(string guId) {
            return base.Channel.GetStatementPathAsync(guId);
        }
        
        public FrontOffice.LeasingStatementService.ActionResult RunLeasingStatementSessionSubscription(int sessionID) {
            return base.Channel.RunLeasingStatementSessionSubscription(sessionID);
        }
        
        public System.Threading.Tasks.Task<FrontOffice.LeasingStatementService.ActionResult> RunLeasingStatementSessionSubscriptionAsync(int sessionID) {
            return base.Channel.RunLeasingStatementSessionSubscriptionAsync(sessionID);
        }
    }
}
